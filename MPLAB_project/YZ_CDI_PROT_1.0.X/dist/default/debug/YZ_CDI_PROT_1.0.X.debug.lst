

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Dec 09 18:43:49 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15245
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
     7                           	psect	intentry,global,class=CODE,space=0,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 11/01/2024 GMT
    12                           ; 
    13                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F15245 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0008                     bsr             equ	8
    46     0005                     fsr0h           equ	5
    47     0004                     fsr0l           equ	4
    48     0007                     fsr1h           equ	7
    49     0006                     fsr1l           equ	6
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0001                     indf1           equ	1
    53     000B                     intcon          equ	11
    54     0002                     pc              equ	2
    55     0002                     pcl             equ	2
    56     000A                     pclath          equ	10
    57     0003                     status          equ	3
    58     0009                     wreg            equ	9
    59     0000                     INDF0           equ	0	;# 
    60     0001                     INDF1           equ	1	;# 
    61     0002                     PCL             equ	2	;# 
    62     0003                     STATUS          equ	3	;# 
    63     0004                     FSR0L           equ	4	;# 
    64     0005                     FSR0H           equ	5	;# 
    65     0006                     FSR1L           equ	6	;# 
    66     0007                     FSR1H           equ	7	;# 
    67     0008                     BSR             equ	8	;# 
    68     0009                     WREG            equ	9	;# 
    69     000A                     PCLATH          equ	10	;# 
    70     000B                     INTCON          equ	11	;# 
    71     000C                     PORTA           equ	12	;# 
    72     000D                     PORTB           equ	13	;# 
    73     000E                     PORTC           equ	14	;# 
    74     0012                     TRISA           equ	18	;# 
    75     0013                     TRISB           equ	19	;# 
    76     0014                     TRISC           equ	20	;# 
    77     0018                     LATA            equ	24	;# 
    78     0019                     LATB            equ	25	;# 
    79     001A                     LATC            equ	26	;# 
    80     009A                     CPCON           equ	154	;# 
    81     009B                     ADRES           equ	155	;# 
    82     009B                     ADRESL          equ	155	;# 
    83     009C                     ADRESH          equ	156	;# 
    84     009D                     ADCON0          equ	157	;# 
    85     009E                     ADCON1          equ	158	;# 
    86     009F                     ADACT           equ	159	;# 
    87     010C                     RB4I2C          equ	268	;# 
    88     010D                     RB6I2C          equ	269	;# 
    89     0119                     RC1REG          equ	281	;# 
    90     011A                     TX1REG          equ	282	;# 
    91     011B                     SP1BRG          equ	283	;# 
    92     011B                     SP1BRGL         equ	283	;# 
    93     011C                     SP1BRGH         equ	284	;# 
    94     011D                     RC1STA          equ	285	;# 
    95     011E                     TX1STA          equ	286	;# 
    96     011F                     BAUD1CON        equ	287	;# 
    97     018C                     SSP1BUF         equ	396	;# 
    98     018D                     SSP1ADD         equ	397	;# 
    99     018E                     SSP1MSK         equ	398	;# 
   100     018F                     SSP1STAT        equ	399	;# 
   101     0190                     SSP1CON1        equ	400	;# 
   102     0191                     SSP1CON2        equ	401	;# 
   103     0192                     SSP1CON3        equ	402	;# 
   104     020C                     TMR1            equ	524	;# 
   105     020C                     TMR1L           equ	524	;# 
   106     020D                     TMR1H           equ	525	;# 
   107     020E                     T1CON           equ	526	;# 
   108     020E                     TMR1CON         equ	526	;# 
   109     020F                     T1GCON          equ	527	;# 
   110     020F                     TMR1GCON        equ	527	;# 
   111     0210                     T1GATE          equ	528	;# 
   112     0210                     TMR1GATE        equ	528	;# 
   113     0211                     T1CLK           equ	529	;# 
   114     0211                     TMR1CLK         equ	529	;# 
   115     0211                     PR1             equ	529	;# 
   116     028C                     T2TMR           equ	652	;# 
   117     028C                     TMR2            equ	652	;# 
   118     028D                     T2PR            equ	653	;# 
   119     028D                     PR2             equ	653	;# 
   120     028E                     T2CON           equ	654	;# 
   121     028F                     T2HLT           equ	655	;# 
   122     0290                     T2CLKCON        equ	656	;# 
   123     0291                     T2RST           equ	657	;# 
   124     030C                     CCPR1           equ	780	;# 
   125     030C                     CCPR1L          equ	780	;# 
   126     030D                     CCPR1H          equ	781	;# 
   127     030E                     CCP1CON         equ	782	;# 
   128     030F                     CCP1CAP         equ	783	;# 
   129     0310                     CCPR2           equ	784	;# 
   130     0310                     CCPR2L          equ	784	;# 
   131     0311                     CCPR2H          equ	785	;# 
   132     0312                     CCP2CON         equ	786	;# 
   133     0313                     CCP2CAP         equ	787	;# 
   134     0314                     PWM3DC          equ	788	;# 
   135     0314                     PWM3DCL         equ	788	;# 
   136     0315                     PWM3DCH         equ	789	;# 
   137     0316                     PWM3CON         equ	790	;# 
   138     0318                     PWM4DC          equ	792	;# 
   139     0318                     PWM4DCL         equ	792	;# 
   140     0319                     PWM4DCH         equ	793	;# 
   141     031A                     PWM4CON         equ	794	;# 
   142     059C                     TMR0L           equ	1436	;# 
   143     059C                     TMR0            equ	1436	;# 
   144     059D                     TMR0H           equ	1437	;# 
   145     059D                     PR0             equ	1437	;# 
   146     059E                     T0CON0          equ	1438	;# 
   147     059F                     T0CON1          equ	1439	;# 
   148     070C                     PIR0            equ	1804	;# 
   149     070D                     PIR1            equ	1805	;# 
   150     070E                     PIR2            equ	1806	;# 
   151     0716                     PIE0            equ	1814	;# 
   152     0717                     PIE1            equ	1815	;# 
   153     0718                     PIE2            equ	1816	;# 
   154     080C                     WDTCON          equ	2060	;# 
   155     0811                     BORCON          equ	2065	;# 
   156     0813                     PCON0           equ	2067	;# 
   157     0814                     PCON1           equ	2068	;# 
   158     081A                     NVMADR          equ	2074	;# 
   159     081A                     NVMADRL         equ	2074	;# 
   160     081B                     NVMADRH         equ	2075	;# 
   161     081C                     NVMDAT          equ	2076	;# 
   162     081C                     NVMDATL         equ	2076	;# 
   163     081D                     NVMDATH         equ	2077	;# 
   164     081E                     NVMCON1         equ	2078	;# 
   165     081F                     NVMCON2         equ	2079	;# 
   166     088E                     OSCCON          equ	2190	;# 
   167     0890                     OSCSTAT         equ	2192	;# 
   168     0891                     OSCEN           equ	2193	;# 
   169     0892                     OSCTUNE         equ	2194	;# 
   170     0893                     OSCFRQ          equ	2195	;# 
   171     090C                     FVRCON          equ	2316	;# 
   172     1E8F                     PPSLOCK         equ	7823	;# 
   173     1E90                     INTPPS          equ	7824	;# 
   174     1E91                     T0CKIPPS        equ	7825	;# 
   175     1E92                     T1CKIPPS        equ	7826	;# 
   176     1E93                     T1GPPS          equ	7827	;# 
   177     1E9C                     T2INPPS         equ	7836	;# 
   178     1EA1                     CCP1PPS         equ	7841	;# 
   179     1EA2                     CCP2PPS         equ	7842	;# 
   180     1EC3                     ADACTPPS        equ	7875	;# 
   181     1EC5                     SSP1CLKPPS      equ	7877	;# 
   182     1EC6                     SSP1DATPPS      equ	7878	;# 
   183     1EC7                     SSP1SSPPS       equ	7879	;# 
   184     1ECB                     RX1PPS          equ	7883	;# 
   185     1ECB                     RX1DTPPS        equ	7883	;# 
   186     1ECB                     RXPPS           equ	7883	;# 
   187     1ECC                     CK1PPS          equ	7884	;# 
   188     1ECC                     TX1CKPPS        equ	7884	;# 
   189     1ECC                     CKPPS           equ	7884	;# 
   190     1F10                     RA0PPS          equ	7952	;# 
   191     1F11                     RA1PPS          equ	7953	;# 
   192     1F12                     RA2PPS          equ	7954	;# 
   193     1F14                     RA4PPS          equ	7956	;# 
   194     1F15                     RA5PPS          equ	7957	;# 
   195     1F1C                     RB4PPS          equ	7964	;# 
   196     1F1D                     RB5PPS          equ	7965	;# 
   197     1F1E                     RB6PPS          equ	7966	;# 
   198     1F1F                     RB7PPS          equ	7967	;# 
   199     1F20                     RC0PPS          equ	7968	;# 
   200     1F21                     RC1PPS          equ	7969	;# 
   201     1F22                     RC2PPS          equ	7970	;# 
   202     1F23                     RC3PPS          equ	7971	;# 
   203     1F24                     RC4PPS          equ	7972	;# 
   204     1F25                     RC5PPS          equ	7973	;# 
   205     1F26                     RC6PPS          equ	7974	;# 
   206     1F27                     RC7PPS          equ	7975	;# 
   207     1F38                     ANSELA          equ	7992	;# 
   208     1F39                     WPUA            equ	7993	;# 
   209     1F3A                     ODCONA          equ	7994	;# 
   210     1F3B                     SLRCONA         equ	7995	;# 
   211     1F3C                     INLVLA          equ	7996	;# 
   212     1F3D                     IOCAP           equ	7997	;# 
   213     1F3E                     IOCAN           equ	7998	;# 
   214     1F3F                     IOCAF           equ	7999	;# 
   215     1F43                     ANSELB          equ	8003	;# 
   216     1F44                     WPUB            equ	8004	;# 
   217     1F45                     ODCONB          equ	8005	;# 
   218     1F46                     SLRCONB         equ	8006	;# 
   219     1F47                     INLVLB          equ	8007	;# 
   220     1F48                     IOCBP           equ	8008	;# 
   221     1F49                     IOCBN           equ	8009	;# 
   222     1F4A                     IOCBF           equ	8010	;# 
   223     1F4E                     ANSELC          equ	8014	;# 
   224     1F4F                     WPUC            equ	8015	;# 
   225     1F50                     ODCONC          equ	8016	;# 
   226     1F51                     SLRCONC         equ	8017	;# 
   227     1F52                     INLVLC          equ	8018	;# 
   228     1F53                     IOCCP           equ	8019	;# 
   229     1F54                     IOCCN           equ	8020	;# 
   230     1F55                     IOCCF           equ	8021	;# 
   231     1FE4                     STATUS_SHAD     equ	8164	;# 
   232     1FE5                     WREG_SHAD       equ	8165	;# 
   233     1FE6                     BSR_SHAD        equ	8166	;# 
   234     1FE7                     PCLATH_SHAD     equ	8167	;# 
   235     1FE8                     FSR0_SHAD       equ	8168	;# 
   236     1FE8                     FSR0L_SHAD      equ	8168	;# 
   237     1FE9                     FSR0H_SHAD      equ	8169	;# 
   238     1FEA                     FSR1L_SHAD      equ	8170	;# 
   239     1FEB                     FSR1H_SHAD      equ	8171	;# 
   240     1FED                     STKPTR          equ	8173	;# 
   241     1FEE                     TOSL            equ	8174	;# 
   242     1FEF                     TOSH            equ	8175	;# 
   243                           
   244                           	psect	cinit
   245     000A                     start_initialization:	
   246                           ; #config settings
   247                           
   248     000A                     __initialization:
   249     000A                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252     000A                     __end_of__initialization:
   253     000A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   254     000B  0140               	movlb	0
   255     000C  3180  280E         	ljmp	_main	;jump to C main() function
   256                           
   257                           	psect	cstackCOMMON
   258     0000                     __pcstackCOMMON:
   259     0000                     ?_main:
   260     0000                     ?_INTERRUPT_InterruptManager:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0000                     ??_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0000                     ??_INTERRUPT_InterruptManager:	
   267                           ; 1 bytes @ 0x0
   268                           
   269                           
   270                           	psect	maintext
   271     000E                     __pmaintext:	
   272                           ; 1 bytes @ 0x0
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 64 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		None
   287 ;; Tracked objects:
   288 ;;		On entry : B3F/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called: 1
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305     000E                     _main:	
   306                           ;psect for function _main
   307                           
   308     000E                     l5:	
   309                           ;incstack = 0
   310                           ; Regs used in _main: []
   311                           
   312     000E  3180  2808         	ljmp	start
   313     0010                     __end_of_main:
   314                           
   315                           	psect	intentry
   316     0004                     __pintentry:	
   317 ;; *************** function _INTERRUPT_InterruptManager *****************
   318 ;; Defined at:
   319 ;;		line 69 in file "main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		None
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		Interrupt level 1
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346     0004                     _INTERRUPT_InterruptManager:
   347                           
   348                           ;incstack = 0
   349     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
   350                           
   351                           ; Regs used in _INTERRUPT_InterruptManager: []
   352     0005  3180               	pagesel	$
   353     0006                     i1l10:
   354     0006  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   355     0007  0009               	retfie
   356     0008                     __end_of_INTERRUPT_InterruptManager:
   357     0002                     ___latbits      equ	2
   358     007E                     btemp           set	126	;btemp
   359     007E                     int$flags       set	126
   360     007E                     wtemp0          set	126
   361                           
   362                           	psect	config
   363                           
   364                           ;Config register CONFIG1 @ 0x8007
   365                           ;	External Oscillator Mode Selection bits
   366                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
   367                           ;	Power-up Default Value for COSC bits
   368                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
   369                           ;	Clock Out Enable bit
   370                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
   371                           ;	VDD Range Analog Calibration Selection bit
   372                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
   373     8007                     	org	32775
   374     8007  3FCF               	dw	16335
   375                           
   376                           ;Config register CONFIG2 @ 0x8008
   377                           ;	Master Clear Enable bit
   378                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
   379                           ;	Power-up Timer Selection bits
   380                           ;	PWRTS = PWRT_1, PWRT set at 1 ms
   381                           ;	WDT Operating Mode bits
   382                           ;	WDTE = SWDTEN, WDT enabled/disabled by SEN bit
   383                           ;	Brown-out Reset Enable bits
   384                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
   385                           ;	Brown-out Reset Voltage Selection bit
   386                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
   387                           ;	PPSLOCKED One-Way Set Enable bit
   388                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
   389                           ;	Stack Overflow/Underflow Reset Enable bit
   390                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
   391     8008                     	org	32776
   392     8008  3FE9               	dw	16361
   393                           
   394                           ;Config register CONFIG4 @ 0x800A
   395                           ;	Boot Block Size Selection bits
   396                           ;	BBSIZE = BB512, 512 words boot block size
   397                           ;	Boot Block Enable bit
   398                           ;	BBEN = OFF, Boot Block is disabled
   399                           ;	SAF Enable bit
   400                           ;	SAFEN = OFF, SAF is disabled
   401                           ;	Application Block Write Protection bit
   402                           ;	WRTAPP = OFF, Application Block is not write-protected
   403                           ;	Boot Block Write Protection bit
   404                           ;	WRTB = OFF, Boot Block is not write-protected
   405                           ;	Configuration Registers Write Protection bit
   406                           ;	WRTC = OFF, Configuration Registers are not write-protected
   407                           ;	Storage Area Flash (SAF) Write Protection bit
   408                           ;	WRTSAF = OFF, SAF is not write-protected
   409                           ;	Low Voltage Programming Enable bit
   410                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
   411     800A                     	org	32778
   412     800A  3FFF               	dw	16383
   413                           
   414                           ;Config register CONFIG5 @ 0x800B
   415                           ;	User Program Flash Memory Code Protection bit
   416                           ;	CP = OFF, User Program Flash Memory code protection is disabled
   417     800B                     	org	32779
   418     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       0
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_InterruptManager                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _INTERRUPT_InterruptManager (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      0       0      0.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Dec 09 18:43:49 2024

                                 l5 000E                                i1l10 0006  
                              _main 000E                                btemp 007E  
                              start 0008                               ?_main 0000  
                             wtemp0 007E                     __initialization 000A  
                      __end_of_main 0010         ?_INTERRUPT_InterruptManager 0000  
                            ??_main 0000             __end_of__initialization 000A  
                    __pcstackCOMMON 0000                          __pmaintext 000E  
                        __pintentry 0004                end_of_initialization 000A  
               start_initialization 000A                           ___latbits 0002  
      ??_INTERRUPT_InterruptManager 0000                            int$flags 007E  
__end_of_INTERRUPT_InterruptManager 0008          _INTERRUPT_InterruptManager 0004  
                          intlevel1 0000  
