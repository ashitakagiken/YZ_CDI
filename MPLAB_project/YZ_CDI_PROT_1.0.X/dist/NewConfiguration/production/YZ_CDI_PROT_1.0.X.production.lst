

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Feb 09 11:38:16 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F15245
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x56D,3
    57                           	dabs	1,0x520,77
    58                           	dabs	1,0x4A0,80
    59                           	dabs	1,0x420,80
    60                           	dabs	1,0x3D7,25
    61                           	dabs	1,0x3A0,55
    62                           	dabs	1,0x320,80
    63                           	dabs	1,0x2A0,80
    64                           	dabs	1,0x220,80
    65                           	dabs	1,0x1A0,80
    66                           	dabs	1,0x15E,18
    67                           	dabs	1,0x2267,0,_IG_table
    68                           	dabs	1,0x236D,0,_deg_table
    69                           	dabs	1,0x20DE,0,_deg2time_coeff
    70                           	dabs	1,0x7E,2
    71     0000                     
    72                           ; Generated 11/01/2024 GMT
    73                           ; 
    74                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F15245 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     0012                     	;# 
   122     0013                     	;# 
   123     0014                     	;# 
   124     0018                     	;# 
   125     0019                     	;# 
   126     001A                     	;# 
   127     009A                     	;# 
   128     009B                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     0119                     	;# 
   137     011A                     	;# 
   138     011B                     	;# 
   139     011B                     	;# 
   140     011C                     	;# 
   141     011D                     	;# 
   142     011E                     	;# 
   143     011F                     	;# 
   144     018C                     	;# 
   145     018D                     	;# 
   146     018E                     	;# 
   147     018F                     	;# 
   148     0190                     	;# 
   149     0191                     	;# 
   150     0192                     	;# 
   151     020C                     	;# 
   152     020C                     	;# 
   153     020D                     	;# 
   154     020E                     	;# 
   155     020E                     	;# 
   156     020F                     	;# 
   157     020F                     	;# 
   158     0210                     	;# 
   159     0210                     	;# 
   160     0211                     	;# 
   161     0211                     	;# 
   162     0211                     	;# 
   163     028C                     	;# 
   164     028C                     	;# 
   165     028D                     	;# 
   166     028D                     	;# 
   167     028E                     	;# 
   168     028F                     	;# 
   169     0290                     	;# 
   170     0291                     	;# 
   171     030C                     	;# 
   172     030C                     	;# 
   173     030D                     	;# 
   174     030E                     	;# 
   175     030F                     	;# 
   176     0310                     	;# 
   177     0310                     	;# 
   178     0311                     	;# 
   179     0312                     	;# 
   180     0313                     	;# 
   181     0314                     	;# 
   182     0314                     	;# 
   183     0315                     	;# 
   184     0316                     	;# 
   185     0318                     	;# 
   186     0318                     	;# 
   187     0319                     	;# 
   188     031A                     	;# 
   189     059C                     	;# 
   190     059C                     	;# 
   191     059D                     	;# 
   192     059D                     	;# 
   193     059E                     	;# 
   194     059F                     	;# 
   195     070C                     	;# 
   196     070D                     	;# 
   197     070E                     	;# 
   198     0716                     	;# 
   199     0717                     	;# 
   200     0718                     	;# 
   201     080C                     	;# 
   202     0811                     	;# 
   203     0813                     	;# 
   204     0814                     	;# 
   205     081A                     	;# 
   206     081A                     	;# 
   207     081B                     	;# 
   208     081C                     	;# 
   209     081C                     	;# 
   210     081D                     	;# 
   211     081E                     	;# 
   212     081F                     	;# 
   213     088E                     	;# 
   214     0890                     	;# 
   215     0891                     	;# 
   216     0892                     	;# 
   217     0893                     	;# 
   218     090C                     	;# 
   219     1E8F                     	;# 
   220     1E90                     	;# 
   221     1E91                     	;# 
   222     1E92                     	;# 
   223     1E93                     	;# 
   224     1E9C                     	;# 
   225     1EA1                     	;# 
   226     1EA2                     	;# 
   227     1EC3                     	;# 
   228     1EC5                     	;# 
   229     1EC6                     	;# 
   230     1EC7                     	;# 
   231     1ECB                     	;# 
   232     1ECB                     	;# 
   233     1ECB                     	;# 
   234     1ECC                     	;# 
   235     1ECC                     	;# 
   236     1ECC                     	;# 
   237     1F10                     	;# 
   238     1F11                     	;# 
   239     1F12                     	;# 
   240     1F14                     	;# 
   241     1F15                     	;# 
   242     1F1C                     	;# 
   243     1F1D                     	;# 
   244     1F1E                     	;# 
   245     1F1F                     	;# 
   246     1F20                     	;# 
   247     1F21                     	;# 
   248     1F22                     	;# 
   249     1F23                     	;# 
   250     1F24                     	;# 
   251     1F25                     	;# 
   252     1F26                     	;# 
   253     1F27                     	;# 
   254     1F38                     	;# 
   255     1F39                     	;# 
   256     1F3A                     	;# 
   257     1F3B                     	;# 
   258     1F3C                     	;# 
   259     1F3D                     	;# 
   260     1F3E                     	;# 
   261     1F3F                     	;# 
   262     1F43                     	;# 
   263     1F44                     	;# 
   264     1F45                     	;# 
   265     1F46                     	;# 
   266     1F47                     	;# 
   267     1F48                     	;# 
   268     1F49                     	;# 
   269     1F4A                     	;# 
   270     1F4E                     	;# 
   271     1F4F                     	;# 
   272     1F50                     	;# 
   273     1F51                     	;# 
   274     1F52                     	;# 
   275     1F53                     	;# 
   276     1F54                     	;# 
   277     1F55                     	;# 
   278     1FE4                     	;# 
   279     1FE5                     	;# 
   280     1FE6                     	;# 
   281     1FE7                     	;# 
   282     1FE8                     	;# 
   283     1FE8                     	;# 
   284     1FE9                     	;# 
   285     1FEA                     	;# 
   286     1FEB                     	;# 
   287     1FED                     	;# 
   288     1FEE                     	;# 
   289     1FEF                     	;_deg2time_coeff
   290                           
   291                           	psect	idataBIGRAM
   292     05AF                     __pidataBIGRAM:
   293                           
   294                           ;initializer for _deg2time_coeff
   295     05AF  3400               	retlw	0
   296     05B0  3400               	retlw	0
   297     05B1  3400               	retlw	0
   298     05B2  3400               	retlw	0
   299     05B3  3400               	retlw	0
   300     05B4  3400               	retlw	0
   301     05B5  3400               	retlw	0
   302     05B6  3400               	retlw	0
   303     05B7  3400               	retlw	0
   304     05B8  3400               	retlw	0
   305     05B9  3400               	retlw	0
   306     05BA  3400               	retlw	0
   307     05BB  3400               	retlw	0
   308     05BC  3400               	retlw	0
   309     05BD  3400               	retlw	0
   310     05BE  3400               	retlw	0
   311     05BF  3400               	retlw	0
   312     05C0  3400               	retlw	0
   313     05C1  3400               	retlw	0
   314     05C2  3400               	retlw	0
   315     05C3  3400               	retlw	0
   316     05C4  3400               	retlw	0
   317     05C5  3400               	retlw	0
   318     05C6  3400               	retlw	0
   319     05C7  3400               	retlw	0
   320     05C8  3400               	retlw	0
   321     05C9  3400               	retlw	0
   322     05CA  3400               	retlw	0
   323     05CB  3400               	retlw	0
   324     05CC  3400               	retlw	0
   325     05CD  3400               	retlw	0
   326     05CE  3400               	retlw	0
   327     05CF  3400               	retlw	0
   328     05D0  3400               	retlw	0
   329     05D1  3400               	retlw	0
   330     05D2  3400               	retlw	0
   331     05D3  3400               	retlw	0
   332     05D4  3400               	retlw	0
   333     05D5  3400               	retlw	0
   334     05D6  3400               	retlw	0
   335     05D7  3400               	retlw	0
   336     05D8  3400               	retlw	0
   337     05D9  3400               	retlw	0
   338     05DA  3400               	retlw	0
   339     05DB  3400               	retlw	0
   340     05DC  34E4               	retlw	228
   341     05DD  3408               	retlw	8
   342     05DE  3400               	retlw	0
   343     05DF  3455               	retlw	85
   344     05E0  3408               	retlw	8
   345     05E1  3400               	retlw	0
   346     05E2  34D8               	retlw	216
   347     05E3  3407               	retlw	7
   348     05E4  3400               	retlw	0
   349     05E5  3468               	retlw	104
   350     05E6  3407               	retlw	7
   351     05E7  3400               	retlw	0
   352     05E8  3404               	retlw	4
   353     05E9  3407               	retlw	7
   354     05EA  3400               	retlw	0
   355     05EB  34AB               	retlw	171
   356     05EC  3406               	retlw	6
   357     05ED  3400               	retlw	0
   358     05EE  3459               	retlw	89
   359     05EF  3406               	retlw	6
   360     05F0  3400               	retlw	0
   361     05F1  3410               	retlw	16
   362     05F2  3406               	retlw	6
   363     05F3  3400               	retlw	0
   364     05F4  34CC               	retlw	204
   365     05F5  3405               	retlw	5
   366     05F6  3400               	retlw	0
   367     05F7  348E               	retlw	142
   368     05F8  3405               	retlw	5
   369     05F9  3400               	retlw	0
   370     05FA  3455               	retlw	85
   371     05FB  3405               	retlw	5
   372     05FC  3400               	retlw	0
   373     05FD  3421               	retlw	33
   374     05FE  3405               	retlw	5
   375     05FF  3400               	retlw	0
   376     0600  34F0               	retlw	240
   377     0601  3404               	retlw	4
   378     0602  3400               	retlw	0
   379     0603  34C3               	retlw	195
   380     0604  3404               	retlw	4
   381     0605  3400               	retlw	0
   382     0606  3499               	retlw	153
   383     0607  3404               	retlw	4
   384     0608  3400               	retlw	0
   385     0609  3472               	retlw	114
   386     060A  3404               	retlw	4
   387     060B  3400               	retlw	0
   388     060C  344D               	retlw	77
   389     060D  3404               	retlw	4
   390     060E  3400               	retlw	0
   391     060F  342B               	retlw	43
   392     0610  3404               	retlw	4
   393     0611  3400               	retlw	0
   394     0612  340A               	retlw	10
   395     0613  3404               	retlw	4
   396     0614  3400               	retlw	0
   397     0615  34EC               	retlw	236
   398     0616  3403               	retlw	3
   399     0617  3400               	retlw	0
   400     0618  34CF               	retlw	207
   401     0619  3403               	retlw	3
   402     061A  3400               	retlw	0
   403     061B  34B4               	retlw	180
   404     061C  3403               	retlw	3
   405     061D  3400               	retlw	0
   406     061E  349B               	retlw	155
   407     061F  3403               	retlw	3
   408     0620  3400               	retlw	0
   409     0621  3482               	retlw	130
   410     0622  3403               	retlw	3
   411     0623  3400               	retlw	0
   412     0624  346B               	retlw	107
   413     0625  3403               	retlw	3
   414     0626  3400               	retlw	0
   415     0627  3455               	retlw	85
   416     0628  3403               	retlw	3
   417     0629  3400               	retlw	0
   418     062A  3441               	retlw	65
   419     062B  3403               	retlw	3
   420     062C  3400               	retlw	0
   421     062D  342D               	retlw	45
   422     062E  3403               	retlw	3
   423     062F  3400               	retlw	0
   424     0630  341A               	retlw	26
   425     0631  3403               	retlw	3
   426     0632  3400               	retlw	0
   427     0633  3408               	retlw	8
   428     0634  3403               	retlw	3
   429     0635  3400               	retlw	0
   430     0636  34F7               	retlw	247
   431     0637  3402               	retlw	2
   432     0638  3400               	retlw	0
   433     0639  34E6               	retlw	230
   434     063A  3402               	retlw	2
   435     063B  3400               	retlw	0
   436     063C  34D6               	retlw	214
   437     063D  3402               	retlw	2
   438     063E  3400               	retlw	0
   439     063F  34C7               	retlw	199
   440     0640  3402               	retlw	2
   441     0641  3400               	retlw	0
   442     0642  34B9               	retlw	185
   443     0643  3402               	retlw	2
   444     0644  3400               	retlw	0
   445     0645  34AB               	retlw	171
   446     0646  3402               	retlw	2
   447     0647  3400               	retlw	0
   448     0648  349D               	retlw	157
   449     0649  3402               	retlw	2
   450     064A  3400               	retlw	0
   451     064B  3490               	retlw	144
   452     064C  3402               	retlw	2
   453     064D  3400               	retlw	0
   454     064E  3484               	retlw	132
   455     064F  3402               	retlw	2
   456     0650  3400               	retlw	0
   457     0651  3478               	retlw	120
   458     0652  3402               	retlw	2
   459     0653  3400               	retlw	0
   460     0654  346D               	retlw	109
   461     0655  3402               	retlw	2
   462     0656  3400               	retlw	0
   463     0657  3462               	retlw	98
   464     0658  3402               	retlw	2
   465     0659  3400               	retlw	0
   466     065A  3457               	retlw	87
   467     065B  3402               	retlw	2
   468     065C  3400               	retlw	0
   469     065D  344D               	retlw	77
   470     065E  3402               	retlw	2
   471     065F  3400               	retlw	0
   472     0660  3443               	retlw	67
   473     0661  3402               	retlw	2
   474     0662  3400               	retlw	0
   475     0663  3439               	retlw	57
   476     0664  3402               	retlw	2
   477     0665  3400               	retlw	0
   478     0666  3430               	retlw	48
   479     0667  3402               	retlw	2
   480     0668  3400               	retlw	0
   481     0669  3427               	retlw	39
   482     066A  3402               	retlw	2
   483     066B  3400               	retlw	0
   484     066C  341E               	retlw	30
   485     066D  3402               	retlw	2
   486     066E  3400               	retlw	0
   487     066F  3415               	retlw	21
   488     0670  3402               	retlw	2
   489     0671  3400               	retlw	0
   490     0672  340D               	retlw	13
   491     0673  3402               	retlw	2
   492     0674  3400               	retlw	0
   493     0675  3405               	retlw	5
   494     0676  3402               	retlw	2
   495     0677  3400               	retlw	0
   496     0678  34FD               	retlw	253
   497     0679  3401               	retlw	1
   498     067A  3400               	retlw	0
   499     067B  34F6               	retlw	246
   500     067C  3401               	retlw	1
   501     067D  3400               	retlw	0
   502     067E  34EF               	retlw	239
   503     067F  3401               	retlw	1
   504     0680  3400               	retlw	0
   505     0681  34E8               	retlw	232
   506     0682  3401               	retlw	1
   507     0683  3400               	retlw	0
   508     0684  34E1               	retlw	225
   509     0685  3401               	retlw	1
   510     0686  3400               	retlw	0
   511     0687  34DA               	retlw	218
   512     0688  3401               	retlw	1
   513     0689  3400               	retlw	0
   514     068A  34D4               	retlw	212
   515     068B  3401               	retlw	1
   516     068C  3400               	retlw	0
   517     068D  34CD               	retlw	205
   518     068E  3401               	retlw	1
   519     068F  3400               	retlw	0
   520     0690  34C7               	retlw	199
   521     0691  3401               	retlw	1
   522     0692  3400               	retlw	0
   523     0693  34C1               	retlw	193
   524     0694  3401               	retlw	1
   525     0695  3400               	retlw	0
   526     0696  34BB               	retlw	187
   527     0697  3401               	retlw	1
   528     0698  3400               	retlw	0
   529     0699  34B6               	retlw	182
   530     069A  3401               	retlw	1
   531     069B  3400               	retlw	0
   532     069C  34B0               	retlw	176
   533     069D  3401               	retlw	1
   534     069E  3400               	retlw	0
   535     069F  34AB               	retlw	171
   536     06A0  3401               	retlw	1
   537     06A1  3400               	retlw	0
   538     06A2  34A5               	retlw	165
   539     06A3  3401               	retlw	1
   540     06A4  3400               	retlw	0
   541     06A5  34A0               	retlw	160
   542     06A6  3401               	retlw	1
   543     06A7  3400               	retlw	0
   544     06A8  349B               	retlw	155
   545     06A9  3401               	retlw	1
   546     06AA  3400               	retlw	0
   547     06AB  3496               	retlw	150
   548     06AC  3401               	retlw	1
   549     06AD  3400               	retlw	0
   550     06AE  3492               	retlw	146
   551     06AF  3401               	retlw	1
   552     06B0  3400               	retlw	0
   553     06B1  348D               	retlw	141
   554     06B2  3401               	retlw	1
   555     06B3  3400               	retlw	0
   556     06B4  3488               	retlw	136
   557     06B5  3401               	retlw	1
   558     06B6  3400               	retlw	0
   559     06B7  3484               	retlw	132
   560     06B8  3401               	retlw	1
   561     06B9  3400               	retlw	0
   562     06BA  3480               	retlw	128
   563     06BB  3401               	retlw	1
   564     06BC  3400               	retlw	0
   565     06BD  347B               	retlw	123
   566     06BE  3401               	retlw	1
   567     06BF  3400               	retlw	0
   568     06C0  3477               	retlw	119
   569     06C1  3401               	retlw	1
   570     06C2  3400               	retlw	0
   571     06C3  3473               	retlw	115
   572     06C4  3401               	retlw	1
   573     06C5  3400               	retlw	0
   574     06C6  346F               	retlw	111
   575     06C7  3401               	retlw	1
   576     06C8  3400               	retlw	0
   577     06C9  346B               	retlw	107
   578     06CA  3401               	retlw	1
   579     06CB  3400               	retlw	0
   580     06CC  3467               	retlw	103
   581     06CD  3401               	retlw	1
   582     06CE  3400               	retlw	0
   583     06CF  3464               	retlw	100
   584     06D0  3401               	retlw	1
   585     06D1  3400               	retlw	0
   586     06D2  3460               	retlw	96
   587     06D3  3401               	retlw	1
   588     06D4  3400               	retlw	0
   589     06D5  345C               	retlw	92
   590     06D6  3401               	retlw	1
   591     06D7  3400               	retlw	0
   592     06D8  3459               	retlw	89
   593     06D9  3401               	retlw	1
   594     06DA  3400               	retlw	0
   595     06DB  3455               	retlw	85
   596     06DC  3401               	retlw	1
   597     06DD  3400               	retlw	0
   598     06DE  3452               	retlw	82
   599     06DF  3401               	retlw	1
   600     06E0  3400               	retlw	0
   601     06E1  344F               	retlw	79
   602     06E2  3401               	retlw	1
   603     06E3  3400               	retlw	0
   604     06E4  344B               	retlw	75
   605     06E5  3401               	retlw	1
   606     06E6  3400               	retlw	0
   607     06E7  3448               	retlw	72
   608     06E8  3401               	retlw	1
   609     06E9  3400               	retlw	0
   610     06EA  3445               	retlw	69
   611     06EB  3401               	retlw	1
   612     06EC  3400               	retlw	0
   613     06ED  3442               	retlw	66
   614     06EE  3401               	retlw	1
   615     06EF  3400               	retlw	0
   616     06F0  343F               	retlw	63
   617     06F1  3401               	retlw	1
   618     06F2  3400               	retlw	0
   619     06F3  343C               	retlw	60
   620     06F4  3401               	retlw	1
   621     06F5  3400               	retlw	0
   622     06F6  3439               	retlw	57
   623     06F7  3401               	retlw	1
   624     06F8  3400               	retlw	0
   625     06F9  3436               	retlw	54
   626     06FA  3401               	retlw	1
   627     06FB  3400               	retlw	0
   628     06FC  3434               	retlw	52
   629     06FD  3401               	retlw	1
   630     06FE  3400               	retlw	0
   631     06FF  3431               	retlw	49
   632     0700  3401               	retlw	1
   633     0701  3400               	retlw	0
   634     0702  342E               	retlw	46
   635     0703  3401               	retlw	1
   636     0704  3400               	retlw	0
   637     0705  342B               	retlw	43
   638     0706  3401               	retlw	1
   639     0707  3400               	retlw	0
   640     0708  3429               	retlw	41
   641     0709  3401               	retlw	1
   642     070A  3400               	retlw	0
   643     070B  3426               	retlw	38
   644     070C  3401               	retlw	1
   645     070D  3400               	retlw	0
   646     070E  3424               	retlw	36
   647     070F  3401               	retlw	1
   648     0710  3400               	retlw	0
   649     0711  3421               	retlw	33
   650     0712  3401               	retlw	1
   651     0713  3400               	retlw	0
   652     0714  341F               	retlw	31
   653     0715  3401               	retlw	1
   654     0716  3400               	retlw	0
   655     0717  341C               	retlw	28
   656     0718  3401               	retlw	1
   657     0719  3400               	retlw	0
   658     071A  341A               	retlw	26
   659     071B  3401               	retlw	1
   660     071C  3400               	retlw	0
   661     071D  3418               	retlw	24
   662     071E  3401               	retlw	1
   663     071F  3400               	retlw	0
   664     0720  3416               	retlw	22
   665     0721  3401               	retlw	1
   666     0722  3400               	retlw	0
   667     0723  3413               	retlw	19
   668     0724  3401               	retlw	1
   669     0725  3400               	retlw	0
   670     0726  3411               	retlw	17
   671     0727  3401               	retlw	1
   672     0728  3400               	retlw	0
   673     0729  340F               	retlw	15
   674     072A  3401               	retlw	1
   675     072B  3400               	retlw	0
   676     072C  340D               	retlw	13
   677     072D  3401               	retlw	1
   678     072E  3400               	retlw	0
   679     072F  340B               	retlw	11
   680     0730  3401               	retlw	1
   681     0731  3400               	retlw	0
   682     0732  3409               	retlw	9
   683     0733  3401               	retlw	1
   684     0734  3400               	retlw	0
   685     0735  3407               	retlw	7
   686     0736  3401               	retlw	1
   687     0737  3400               	retlw	0
   688                           
   689                           	psect	idataBANK1
   690     0BB9                     __pidataBANK1:
   691                           
   692                           ;initializer for _sw4_pos
   693     0BB9  3403               	retlw	3
   694                           
   695                           ;initializer for _sw3_pos
   696     0BBA  3403               	retlw	3
   697                           
   698                           ;initializer for _sw2_pos
   699     0BBB  3403               	retlw	3
   700                           
   701                           ;initializer for _sw1_pos
   702     0BBC  3402               	retlw	2
   703                           
   704                           	psect	stringtext1
   705     1000                     __pstringtext1:
   706     1000                     _min_ret_table:
   707     1000  34DC               	retlw	220
   708     1001  3405               	retlw	5
   709     1002  3414               	retlw	20
   710     1003  3405               	retlw	5
   711     1004  344C               	retlw	76
   712     1005  3404               	retlw	4
   713     1006  3484               	retlw	132
   714     1007  3403               	retlw	3
   715     1008                     __end_of_min_ret_table:
   716                           
   717                           	psect	stringtext2
   718     1008                     __pstringtext2:
   719     1008                     _max_adv_table:
   720     1008  34C4               	retlw	196
   721     1009  3409               	retlw	9
   722     100A  3434               	retlw	52
   723     100B  3408               	retlw	8
   724     100C  34A4               	retlw	164
   725     100D  3406               	retlw	6
   726     100E  3414               	retlw	20
   727     100F  3405               	retlw	5
   728     1010                     __end_of_max_adv_table:
   729                           
   730                           	psect	stringtext3
   731     1016                     __pstringtext3:
   732     1016                     _max_adv_grad_table:
   733     1016  3428               	retlw	40
   734     1017  341E               	retlw	30
   735     1018  3414               	retlw	20
   736     1019  340A               	retlw	10
   737     101A                     __end_of_max_adv_grad_table:
   738                           
   739                           	psect	stringtext4
   740     101A                     __pstringtext4:
   741     101A                     _adv_start_rpm_table:
   742     101A  342D               	retlw	45
   743     101B  3423               	retlw	35
   744     101C  3419               	retlw	25
   745     101D  340F               	retlw	15
   746     101E                     __end_of_adv_start_rpm_table:
   747                           
   748                           	psect	stringtext5
   749     1010                     __pstringtext5:
   750     1010                     _numerator_rpm:
   751     1010  347C               	retlw	124
   752     1011  3492               	retlw	146
   753     1012                     __end_of_numerator_rpm:
   754     0014                     _TRISC	set	20
   755     0013                     _TRISB	set	19
   756     0012                     _TRISA	set	18
   757     001A                     _LATC	set	26
   758     0019                     _LATB	set	25
   759     0018                     _LATA	set	24
   760     000E                     _PORTC	set	14
   761     000D                     _PORTB	set	13
   762     000C                     _PORTA	set	12
   763     000D                     _PORTBbits	set	13
   764     000E                     _PORTCbits	set	14
   765     000C                     _PORTAbits	set	12
   766     005E                     _PEIE	set	94
   767     005F                     _GIE	set	95
   768     00C0                     _LATA0	set	192
   769     00D1                     _LATC1	set	209
   770     0064                     _RA4	set	100
   771     0075                     _RC5	set	117
   772     00D2                     _LATC2	set	210
   773     011C                     _SP1BRGH	set	284
   774     011B                     _SP1BRGL	set	283
   775     011E                     _TX1STA	set	286
   776     011D                     _RC1STA	set	285
   777     011F                     _BAUD1CON	set	287
   778     011A                     _TX1REG	set	282
   779     08F1                     _TRMT	set	2289
   780     020C                     _TMR1	set	524
   781     020E                     _T1CON	set	526
   782     0211                     _T1CLK	set	529
   783     020C                     _TMR1L	set	524
   784     020D                     _TMR1H	set	525
   785     1070                     _TMR1ON	set	4208
   786     0310                     _CCPR2	set	784
   787     0313                     _CCP2CAP	set	787
   788     030F                     _CCP1CAP	set	783
   789     0312                     _CCP2CON	set	786
   790     030E                     _CCP1CON	set	782
   791     030C                     _CCPR1	set	780
   792     070E                     _PIR2	set	1806
   793     070D                     _PIR1	set	1805
   794     070C                     _PIR0	set	1804
   795     38B4                     _IOCIE	set	14516
   796     38BD                     _TMR1IE	set	14525
   797     38C7                     _CCP2IE	set	14535
   798     38BF                     _CCP1IE	set	14527
   799     386D                     _TMR1IF	set	14445
   800     3877                     _CCP2IF	set	14455
   801     386F                     _CCP1IF	set	14447
   802     080C                     _WDTCON	set	2060
   803     0892                     _OSCTUNE	set	2194
   804     0893                     _OSCFRQ	set	2195
   805     0891                     _OSCEN	set	2193
   806     1ECB                     _RX1PPS	set	7883
   807     1EA2                     _CCP2PPS	set	7842
   808     1EA1                     _CCP1PPS	set	7841
   809     1E8F                     _PPSLOCKbits	set	7823
   810     1E8F                     _PPSLOCK	set	7823
   811     1F1E                     _RB6PPS	set	7966
   812     1F21                     _RC1PPS	set	7969
   813     1F52                     _INLVLC	set	8018
   814     1F47                     _INLVLB	set	8007
   815     1F3C                     _INLVLA	set	7996
   816     1F4E                     _ANSELC	set	8014
   817     1F43                     _ANSELB	set	8003
   818     1F38                     _ANSELA	set	7992
   819     F9F2                     _IOCAN2	set	63986
   820     F9FA                     _IOCAF2	set	63994
   821     1012                     STR_1:
   822     1012  3425               	retlw	37	;'%'
   823     1013  3464               	retlw	100	;'d'
   824     1014  342C               	retlw	44	;','
   825     1015  3400               	retlw	0
   826                           
   827                           	psect	stringtext6
   828     101E                     __pstringtext6:
   829     101E                     STR_2:
   830     101E  340D               	retlw	13
   831     101F  340A               	retlw	10
   832     1020  3400               	retlw	0
   833                           
   834                           	psect	stringtext7
   835     0000                     __pstringtext7:
   836                           
   837                           	psect	cinit
   838     0172                     start_initialization:	
   839                           ; #config settings
   840                           
   841     0172                     __initialization:	;BIGRAM
   842                           
   843                           ; Initialize objects allocated to BIGRAM
   844     0172  30AF               	movlw	low __pidataBIGRAM
   845     0173  0084               	movwf	4
   846     0174  3085               	movlw	(high __pidataBIGRAM)| (0+128)
   847     0175  0085               	movwf	5
   848     0176  30DE               	movlw	low (0+8414)
   849     0177  0086               	movwf	6
   850     0178  3020               	movlw	high (0+8414)
   851     0179  0087               	movwf	7
   852     017A  3001               	movlw	1
   853     017B  00FF               	movwf	btemp+1
   854     017C  3089               	movlw	137
   855     017D  318C  2409  3181   	fcall	init_ram
   856                           
   857                           ; Initialize objects allocated to BANK1
   858     0180  30B9               	movlw	low __pidataBANK1
   859     0181  0084               	movwf	4
   860     0182  308B               	movlw	(high __pidataBANK1)| (0+128)
   861     0183  0085               	movwf	5
   862     0184  30E7               	movlw	low __pdataBANK1
   863     0185  0086               	movwf	6
   864     0186  3000               	movlw	high __pdataBANK1
   865     0187  0087               	movwf	7
   866     0188  3000               	movlw	0
   867     0189  00FF               	movwf	btemp+1
   868     018A  3004               	movlw	4
   869     018B  318C  2409  3181   	fcall	init_ram
   870                           
   871                           ; Clear objects allocated to BIGRAM
   872     018E  3067               	movlw	low (0+8807)
   873     018F  0084               	movwf	4
   874     0190  3022               	movlw	high (0+8807)
   875     0191  0085               	movwf	5
   876     0192  3089               	movlw	137
   877     0193  00FE               	movwf	btemp
   878     0194  3001               	movlw	1
   879     0195  00FF               	movwf	btemp+1
   880     0196  318B  23FD  3181   	fcall	clear_ram0
   881                           
   882                           ; Clear objects allocated to BANK0
   883     0199  3048               	movlw	low __pbssBANK0
   884     019A  0084               	movwf	4
   885     019B  3000               	movlw	high __pbssBANK0
   886     019C  0085               	movwf	5
   887     019D  3011               	movlw	17
   888     019E  00FE               	movwf	btemp
   889     019F  3000               	movlw	0
   890     01A0  00FF               	movwf	btemp+1
   891     01A1  318B  23FD  3181   	fcall	clear_ram0
   892                           
   893                           ; Clear objects allocated to BANK1
   894     01A4  30DC               	movlw	low __pbssBANK1
   895     01A5  0084               	movwf	4
   896     01A6  3000               	movlw	high __pbssBANK1
   897     01A7  0085               	movwf	5
   898     01A8  300B               	movlw	11
   899     01A9  00FE               	movwf	btemp
   900     01AA  3000               	movlw	0
   901     01AB  00FF               	movwf	btemp+1
   902     01AC  318B  23FD  3181   	fcall	clear_ram0
   903                           
   904                           ; Clear objects allocated to BANK2
   905     01AF  3020               	movlw	low __pbssBANK2
   906     01B0  0084               	movwf	4
   907     01B1  3001               	movlw	high __pbssBANK2
   908     01B2  0085               	movwf	5
   909     01B3  3020               	movlw	32
   910     01B4  00FE               	movwf	btemp
   911     01B5  3000               	movlw	0
   912     01B6  00FF               	movwf	btemp+1
   913     01B7  318B  23FD  3181   	fcall	clear_ram0
   914     01BA                     end_of_initialization:	
   915                           ;End of C runtime variable initialization code
   916                           
   917     01BA                     __end_of__initialization:
   918     01BA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   919     01BB  0140               	movlb	0
   920     01BC  318C  2C27         	ljmp	_main	;jump to C main() function
   921                           
   922                           	psect	bssBANK0
   923     0048                     __pbssBANK0:
   924     0048                     _tx_buf:
   925     0048                     	ds	12
   926     0054                     _test:
   927     0054                     	ds	1
   928     0055                     _pwj_state:
   929     0055                     	ds	1
   930     0056                     _revlimit_state:
   931     0056                     	ds	1
   932     0057                     _map_sel:
   933     0057                     	ds	1
   934     0058                     _orev_counter:
   935     0058                     	ds	1
   936                           
   937                           	psect	bssBANK1
   938     00DC                     __pbssBANK1:
   939     00DC                     _width:
   940     00DC                     	ds	2
   941     00DE                     _prec:
   942     00DE                     	ds	2
   943     00E0                     _pu1_2_period_count:
   944     00E0                     	ds	2
   945     00E2                     _ig_counter:
   946     00E2                     	ds	2
   947     00E4                     _flags:
   948     00E4                     	ds	1
   949     00E5                     _EG_state:
   950     00E5                     	ds	1
   951     00E6                     _rpm:
   952     00E6                     	ds	1
   953                           
   954                           	psect	dataBANK1
   955     00E7                     __pdataBANK1:
   956     00E7                     _sw4_pos:
   957     00E7                     	ds	1
   958     00E8                     _sw3_pos:
   959     00E8                     	ds	1
   960     00E9                     _sw2_pos:
   961     00E9                     	ds	1
   962     00EA                     _sw1_pos:
   963     00EA                     	ds	1
   964                           
   965                           	psect	bssBANK2
   966     0120                     __pbssBANK2:
   967     0120                     _dbuf:
   968     0120                     	ds	32
   969                           
   970                           	psect	inittext
   971     0C09                     init_ram:
   972     0C09  00FE               	movwf	btemp
   973     0C0A                     initloop:
   974     0C0A  0012               	moviw fsr0++
   975     0C0B  001E               	movwi fsr1++
   976     0C0C  3001               	movlw	1
   977     0C0D  02FE               	subwf	btemp,f
   978     0C0E  3000               	movlw	0
   979     0C0F  3BFF               	subwfb	btemp+1,f
   980     0C10  087F               	movf	btemp+1,w
   981     0C11  047E               	iorwf	btemp,w
   982     0C12  1D03               	skipz
   983     0C13  2C0A               	goto	initloop
   984     0C14  3400               	retlw	0
   985                           
   986                           	psect	clrtext
   987     0BFD                     clear_ram0:	
   988                           ;	Called with FSR0 containing the base address, and
   989                           ;	btemp/btemp+1 has the size to clear
   990                           
   991     0BFD  0064               	clrwdt	;clear the watchdog before getting into this loop
   992     0BFE                     clrloop0:
   993     0BFE  0180               	clrf	0	;clear RAM location pointed to by FSR
   994     0BFF  3101               	addfsr 0,1
   995     0C00  3001               	movlw	1
   996     0C01  02FE               	subwf	btemp,f
   997     0C02  3000               	movlw	0
   998     0C03  3BFF               	subwfb	btemp+1,f
   999     0C04  087F               	movf	btemp+1,w
  1000     0C05  047E               	iorwf	btemp,w
  1001     0C06  1D03               	skipz
  1002     0C07  2BFE               	goto	clrloop0	;have we reached the end yet?
  1003     0C08  3400               	retlw	0	;all done for this memory range, return
  1004                           
  1005                           	psect	cstackBANK1
  1006     00A0                     __pcstackBANK1:
  1007     00A0                     ??_initialize_system:
  1008     00A0                     ??_check_sw_state:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011     00A0                     ??_ccp1_enable:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014     00A0                     ??_ccp2_disable:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017     00A0                     ??_putch:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020     00A0                     ??_Write_Byte:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023     00A0                     ?_fputc:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026     00A0                     ?___wmul:	
  1027                           ; 2 bytes @ 0x0
  1028                           
  1029     00A0                     ?___awdiv:	
  1030                           ; 2 bytes @ 0x0
  1031                           
  1032     00A0                     ?___awmod:	
  1033                           ; 2 bytes @ 0x0
  1034                           
  1035     00A0                     ?___lwdiv:	
  1036                           ; 2 bytes @ 0x0
  1037                           
  1038     00A0                     Write_Byte@chr:	
  1039                           ; 2 bytes @ 0x0
  1040                           
  1041     00A0                     ___wmul@multiplier:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044     00A0                     ___awdiv@divisor:	
  1045                           ; 2 bytes @ 0x0
  1046                           
  1047     00A0                     ___awmod@divisor:	
  1048                           ; 2 bytes @ 0x0
  1049                           
  1050     00A0                     ___lwdiv@divisor:	
  1051                           ; 2 bytes @ 0x0
  1052                           
  1053     00A0                     fputc@c:	
  1054                           ; 2 bytes @ 0x0
  1055                           
  1056                           
  1057                           ; 2 bytes @ 0x0
  1058     00A0                     	ds	1
  1059     00A1                     ?_WriteString:
  1060     00A1                     WriteString@str:	
  1061                           ; 1 bytes @ 0x1
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x1
  1065     00A1                     	ds	1
  1066     00A2                     fputc@fp:
  1067     00A2                     ___wmul@multiplicand:	
  1068                           ; 1 bytes @ 0x2
  1069                           
  1070     00A2                     ___awdiv@dividend:	
  1071                           ; 2 bytes @ 0x2
  1072                           
  1073     00A2                     ___awmod@dividend:	
  1074                           ; 2 bytes @ 0x2
  1075                           
  1076     00A2                     ___lwdiv@dividend:	
  1077                           ; 2 bytes @ 0x2
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x2
  1081     00A2                     	ds	1
  1082     00A3                     ??_WriteString:
  1083     00A3                     ??_fputc:	
  1084                           ; 1 bytes @ 0x3
  1085                           
  1086                           
  1087                           ; 1 bytes @ 0x3
  1088     00A3                     	ds	1
  1089     00A4                     ??___wmul:
  1090     00A4                     ??___awdiv:	
  1091                           ; 1 bytes @ 0x4
  1092                           
  1093     00A4                     ??___awmod:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096     00A4                     ??___lwdiv:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099     00A4                     ___wmul@product:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x4
  1104     00A4                     	ds	1
  1105     00A5                     ___awdiv@counter:
  1106     00A5                     ___awmod@counter:	
  1107                           ; 1 bytes @ 0x5
  1108                           
  1109     00A5                     ___lwdiv@quotient:	
  1110                           ; 1 bytes @ 0x5
  1111                           
  1112                           
  1113                           ; 2 bytes @ 0x5
  1114     00A5                     	ds	1
  1115     00A6                     ?___tmul:
  1116     00A6                     ___awdiv@sign:	
  1117                           ; 3 bytes @ 0x6
  1118                           
  1119     00A6                     ___awmod@sign:	
  1120                           ; 1 bytes @ 0x6
  1121                           
  1122     00A6                     ___tmul@multiplier:	
  1123                           ; 1 bytes @ 0x6
  1124                           
  1125                           
  1126                           ; 3 bytes @ 0x6
  1127     00A6                     	ds	1
  1128     00A7                     ?_abs:
  1129     00A7                     ___lwdiv@counter:	
  1130                           ; 2 bytes @ 0x7
  1131                           
  1132     00A7                     ___awdiv@quotient:	
  1133                           ; 1 bytes @ 0x7
  1134                           
  1135     00A7                     abs@a:	
  1136                           ; 2 bytes @ 0x7
  1137                           
  1138                           
  1139                           ; 2 bytes @ 0x7
  1140     00A7                     	ds	2
  1141     00A9                     ??_abs:
  1142     00A9                     ___tmul@multiplicand:	
  1143                           ; 1 bytes @ 0x9
  1144                           
  1145                           
  1146                           ; 3 bytes @ 0x9
  1147     00A9                     	ds	2
  1148     00AB                     ?_vfpfcnvrt:
  1149     00AB                     vfpfcnvrt@fmt:	
  1150                           ; 1 bytes @ 0xB
  1151                           
  1152                           
  1153                           ; 1 bytes @ 0xB
  1154     00AB                     	ds	1
  1155     00AC                     ??___tmul:
  1156     00AC                     vfpfcnvrt@ap:	
  1157                           ; 1 bytes @ 0xC
  1158                           
  1159     00AC                     ___tmul@product:	
  1160                           ; 1 bytes @ 0xC
  1161                           
  1162                           
  1163                           ; 3 bytes @ 0xC
  1164     00AC                     	ds	1
  1165     00AD                     ??_vfpfcnvrt:
  1166                           
  1167                           ; 1 bytes @ 0xD
  1168     00AD                     	ds	2
  1169     00AF                     ??_calc_map:
  1170                           
  1171                           ; 1 bytes @ 0xF
  1172     00AF                     	ds	2
  1173     00B1                     vfpfcnvrt@done:
  1174                           
  1175                           ; 1 bytes @ 0x11
  1176     00B1                     	ds	1
  1177     00B2                     vfpfcnvrt@fp:
  1178                           
  1179                           ; 1 bytes @ 0x12
  1180     00B2                     	ds	1
  1181     00B3                     vfpfcnvrt@cp:
  1182                           
  1183                           ; 2 bytes @ 0x13
  1184     00B3                     	ds	2
  1185     00B5                     vfpfcnvrt@convarg:
  1186                           
  1187                           ; 4 bytes @ 0x15
  1188     00B5                     	ds	4
  1189     00B9                     vfpfcnvrt@c:
  1190                           
  1191                           ; 1 bytes @ 0x19
  1192     00B9                     	ds	1
  1193     00BA                     ?_vfprintf:
  1194     00BA                     vfprintf@fmt:	
  1195                           ; 2 bytes @ 0x1A
  1196                           
  1197                           
  1198                           ; 2 bytes @ 0x1A
  1199     00BA                     	ds	1
  1200     00BB                     calc_map@temp:
  1201                           
  1202                           ; 3 bytes @ 0x1B
  1203     00BB                     	ds	1
  1204     00BC                     vfprintf@ap:
  1205                           
  1206                           ; 1 bytes @ 0x1C
  1207     00BC                     	ds	1
  1208     00BD                     ??_vfprintf:
  1209                           
  1210                           ; 1 bytes @ 0x1D
  1211     00BD                     	ds	1
  1212     00BE                     vfprintf@fp:
  1213     00BE                     calc_map@temp1:	
  1214                           ; 1 bytes @ 0x1E
  1215                           
  1216                           
  1217                           ; 3 bytes @ 0x1E
  1218     00BE                     	ds	1
  1219     00BF                     vfprintf@cfmt:
  1220                           
  1221                           ; 2 bytes @ 0x1F
  1222     00BF                     	ds	2
  1223     00C1                     ?_sprintf:
  1224     00C1                     calc_map@coeff_p1_p2:	
  1225                           ; 2 bytes @ 0x21
  1226                           
  1227     00C1                     sprintf@fmt:	
  1228                           ; 1 bytes @ 0x21
  1229                           
  1230                           
  1231                           ; 2 bytes @ 0x21
  1232     00C1                     	ds	1
  1233     00C2                     calc_map@coeff_p3_p4:
  1234                           
  1235                           ; 1 bytes @ 0x22
  1236     00C2                     	ds	1
  1237     00C3                     calc_map@p1y:
  1238                           
  1239                           ; 2 bytes @ 0x23
  1240     00C3                     	ds	2
  1241     00C5                     ??_sprintf:
  1242     00C5                     calc_map@p2y:	
  1243                           ; 1 bytes @ 0x25
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x25
  1247     00C5                     	ds	1
  1248     00C6                     sprintf@ap:
  1249                           
  1250                           ; 1 bytes @ 0x26
  1251     00C6                     	ds	1
  1252     00C7                     sprintf@s:
  1253     00C7                     calc_map@p3y:	
  1254                           ; 1 bytes @ 0x27
  1255                           
  1256                           
  1257                           ; 2 bytes @ 0x27
  1258     00C7                     	ds	1
  1259     00C8                     sprintf@f:
  1260                           
  1261                           ; 11 bytes @ 0x28
  1262     00C8                     	ds	1
  1263     00C9                     calc_map@p4y:
  1264                           
  1265                           ; 2 bytes @ 0x29
  1266     00C9                     	ds	2
  1267     00CB                     calc_map@p1x:
  1268                           
  1269                           ; 1 bytes @ 0x2B
  1270     00CB                     	ds	1
  1271     00CC                     calc_map@p2x:
  1272                           
  1273                           ; 1 bytes @ 0x2C
  1274     00CC                     	ds	1
  1275     00CD                     calc_map@p3x:
  1276                           
  1277                           ; 1 bytes @ 0x2D
  1278     00CD                     	ds	1
  1279     00CE                     calc_map@p4x:
  1280                           
  1281                           ; 1 bytes @ 0x2E
  1282     00CE                     	ds	1
  1283     00CF                     calc_map@a:
  1284                           
  1285                           ; 1 bytes @ 0x2F
  1286     00CF                     	ds	4
  1287     00D3                     ??_Write_table:
  1288                           
  1289                           ; 1 bytes @ 0x33
  1290     00D3                     	ds	2
  1291     00D5                     Write_table@tx_data:
  1292                           
  1293                           ; 6 bytes @ 0x35
  1294     00D5                     	ds	6
  1295     00DB                     Write_table@a:
  1296                           
  1297                           ; 1 bytes @ 0x3B
  1298     00DB                     	ds	1
  1299     00DC                     ??_main:
  1300                           
  1301                           	psect	cstackCOMMON
  1302     0070                     __pcstackCOMMON:	
  1303                           ; 1 bytes @ 0x3C
  1304                           
  1305     0070                     ?_initialize_system:
  1306     0070                     ?_check_sw_state:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309     0070                     ?_calc_map:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312     0070                     ?_ccp1_enable:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315     0070                     ?_Write_table:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318     0070                     ?_ccp1_disable:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321     0070                     ??_ccp1_disable:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324     0070                     ?_ccp2_enable:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327     0070                     ??_ccp2_enable:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330     0070                     ?_ccp2_disable:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333     0070                     ?_ignition_disable:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336     0070                     ??_ignition_disable:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339     0070                     ?_putch:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342     0070                     ?_main:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345     0070                     ?_Write_Byte:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348     0070                     ?_InterruptManager:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351     0070                     ?i1_calc_map:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354     0070                     ?i1_ccp1_enable:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357     0070                     ??i1_ccp1_enable:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360     0070                     ?i1_ccp2_disable:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363     0070                     ??i1_ccp2_disable:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366     0070                     ?i1___wmul:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369     0070                     ?i1___lwdiv:	
  1370                           ; 2 bytes @ 0x0
  1371                           
  1372     0070                     putch@c:	
  1373                           ; 2 bytes @ 0x0
  1374                           
  1375     0070                     i1___wmul@multiplier:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378     0070                     i1___lwdiv@divisor:	
  1379                           ; 2 bytes @ 0x0
  1380                           
  1381                           
  1382                           ; 2 bytes @ 0x0
  1383     0070                     	ds	2
  1384     0072                     i1___wmul@multiplicand:
  1385     0072                     i1___lwdiv@dividend:	
  1386                           ; 2 bytes @ 0x2
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x2
  1390     0072                     	ds	2
  1391     0074                     ??i1___wmul:
  1392     0074                     ??i1___lwdiv:	
  1393                           ; 1 bytes @ 0x4
  1394                           
  1395     0074                     i1___wmul@product:	
  1396                           ; 1 bytes @ 0x4
  1397                           
  1398                           
  1399                           ; 2 bytes @ 0x4
  1400     0074                     	ds	1
  1401     0075                     i1___lwdiv@quotient:
  1402                           
  1403                           ; 2 bytes @ 0x5
  1404     0075                     	ds	1
  1405     0076                     ?i1___tmul:
  1406     0076                     i1___tmul@multiplier:	
  1407                           ; 3 bytes @ 0x6
  1408                           
  1409                           
  1410                           ; 3 bytes @ 0x6
  1411     0076                     	ds	1
  1412     0077                     i1___lwdiv@counter:
  1413                           
  1414                           ; 1 bytes @ 0x7
  1415     0077                     	ds	2
  1416     0079                     i1___tmul@multiplicand:
  1417                           
  1418                           ; 3 bytes @ 0x9
  1419     0079                     	ds	3
  1420     007C                     ??i1___tmul:
  1421     007C                     InterruptManager@t1_count:	
  1422                           ; 1 bytes @ 0xC
  1423                           
  1424                           
  1425                           ; 2 bytes @ 0xC
  1426     007C                     	ds	2
  1427                           
  1428                           	psect	cstackBANK0
  1429     0020                     __pcstackBANK0:
  1430     0020                     i1___tmul@product:
  1431                           
  1432                           ; 3 bytes @ 0x0
  1433     0020                     	ds	3
  1434     0023                     ??i1_calc_map:
  1435                           
  1436                           ; 1 bytes @ 0x3
  1437     0023                     	ds	12
  1438     002F                     i1calc_map@temp:
  1439                           
  1440                           ; 3 bytes @ 0xF
  1441     002F                     	ds	3
  1442     0032                     i1calc_map@temp1:
  1443                           
  1444                           ; 3 bytes @ 0x12
  1445     0032                     	ds	3
  1446     0035                     i1calc_map@coeff_p1_p2:
  1447                           
  1448                           ; 1 bytes @ 0x15
  1449     0035                     	ds	1
  1450     0036                     i1calc_map@coeff_p3_p4:
  1451                           
  1452                           ; 1 bytes @ 0x16
  1453     0036                     	ds	1
  1454     0037                     i1calc_map@p1y:
  1455                           
  1456                           ; 2 bytes @ 0x17
  1457     0037                     	ds	2
  1458     0039                     i1calc_map@p2y:
  1459                           
  1460                           ; 2 bytes @ 0x19
  1461     0039                     	ds	2
  1462     003B                     i1calc_map@p3y:
  1463                           
  1464                           ; 2 bytes @ 0x1B
  1465     003B                     	ds	2
  1466     003D                     i1calc_map@p4y:
  1467                           
  1468                           ; 2 bytes @ 0x1D
  1469     003D                     	ds	2
  1470     003F                     i1calc_map@p1x:
  1471                           
  1472                           ; 1 bytes @ 0x1F
  1473     003F                     	ds	1
  1474     0040                     i1calc_map@p2x:
  1475                           
  1476                           ; 1 bytes @ 0x20
  1477     0040                     	ds	1
  1478     0041                     i1calc_map@p3x:
  1479                           
  1480                           ; 1 bytes @ 0x21
  1481     0041                     	ds	1
  1482     0042                     i1calc_map@p4x:
  1483                           
  1484                           ; 1 bytes @ 0x22
  1485     0042                     	ds	1
  1486     0043                     i1calc_map@a:
  1487                           
  1488                           ; 1 bytes @ 0x23
  1489     0043                     	ds	1
  1490     0044                     ??_InterruptManager:
  1491                           
  1492                           ; 1 bytes @ 0x24
  1493     0044                     	ds	4
  1494                           
  1495                           	psect	maintext
  1496     0C27                     __pmaintext:	
  1497 ;;
  1498 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1499 ;;
  1500 ;; *************** function _main *****************
  1501 ;; Defined at:
  1502 ;;		line 161 in file "main.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : B3F/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;Total ram usage:        0 bytes
  1521 ;; Hardware stack levels required when called: 9
  1522 ;; This function calls:
  1523 ;;		_Write_table
  1524 ;;		_calc_map
  1525 ;;		_ccp1_enable
  1526 ;;		_check_sw_state
  1527 ;;		_initialize_system
  1528 ;; This function is called by:
  1529 ;;		Startup code after reset
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533     0C27                     _main:	
  1534                           ;psect for function _main
  1535                           
  1536     0C27                     l2852:	
  1537                           ;incstack = 0
  1538                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1539                           
  1540                           
  1541                           ;main.c: 162:     initialize_system();
  1542     0C27  318E  26A6  318C   	fcall	_initialize_system
  1543     0C2A                     l2854:
  1544                           
  1545                           ;main.c: 163:     LATC2 = (0);
  1546     0C2A  0140               	movlb	0	; select bank0
  1547     0C2B  111A               	bcf	26,2	;volatile
  1548     0C2C                     l2856:
  1549                           
  1550                           ;main.c: 164:     check_sw_state();
  1551     0C2C  3187  27A8  318C   	fcall	_check_sw_state
  1552     0C2F                     l2858:
  1553                           
  1554                           ;main.c: 165:     calc_map();
  1555     0C2F  3183  23BB  318C   	fcall	_calc_map
  1556     0C32                     l2860:
  1557                           
  1558                           ;main.c: 166:     ccp1_enable();
  1559     0C32  318B  23DE  318C   	fcall	_ccp1_enable
  1560     0C35                     l2862:
  1561                           
  1562                           ;main.c: 169:         check_sw_state();
  1563     0C35  3187  27A8  318C   	fcall	_check_sw_state
  1564                           
  1565                           ;main.c: 170:         Write_table();
  1566     0C38  3187  2738  318C   	fcall	_Write_table
  1567     0C3B  2C35               	goto	l2862
  1568     0C3C  3181  2970         	ljmp	start
  1569     0C3E                     __end_of_main:
  1570                           
  1571                           	psect	text1
  1572     0EA6                     __ptext1:	
  1573 ;; *************** function _initialize_system *****************
  1574 ;; Defined at:
  1575 ;;		line 448 in file "main.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, pclath, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 4
  1596 ;; This function calls:
  1597 ;;		_ccp2_disable
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603     0EA6                     _initialize_system:	
  1604                           ;psect for function _initialize_system
  1605                           
  1606     0EA6                     l2642:	
  1607                           ;incstack = 0
  1608                           ; Regs used in _initialize_system: [wreg+status,2+status,0+pclath+cstack]
  1609                           
  1610                           
  1611                           ;main.c: 450:     OSCEN = 0x40;
  1612     0EA6  3040               	movlw	64
  1613     0EA7  0151               	movlb	17	; select bank17
  1614     0EA8  0091               	movwf	17	;volatile
  1615                           
  1616                           ;main.c: 451:     OSCFRQ = 0x05;
  1617     0EA9  3005               	movlw	5
  1618     0EAA  0093               	movwf	19	;volatile
  1619     0EAB                     l2644:
  1620                           
  1621                           ;main.c: 452:     OSCTUNE = 0X00;
  1622     0EAB  0192               	clrf	18	;volatile
  1623     0EAC                     l2646:
  1624                           
  1625                           ;main.c: 455:     PORTA = 0x00;
  1626     0EAC  0140               	movlb	0	; select bank0
  1627     0EAD  018C               	clrf	12	;volatile
  1628     0EAE                     l2648:
  1629                           
  1630                           ;main.c: 456:     PORTB = 0x00;
  1631     0EAE  018D               	clrf	13	;volatile
  1632     0EAF                     l2650:
  1633                           
  1634                           ;main.c: 457:     PORTC = 0x00;
  1635     0EAF  018E               	clrf	14	;volatile
  1636     0EB0                     l2652:
  1637                           
  1638                           ;main.c: 458:     LATA = 0x00;
  1639     0EB0  0198               	clrf	24	;volatile
  1640     0EB1                     l2654:
  1641                           
  1642                           ;main.c: 459:     LATB = 0x00;
  1643     0EB1  0199               	clrf	25	;volatile
  1644     0EB2                     l2656:
  1645                           
  1646                           ;main.c: 460:     LATC = 0x00;
  1647     0EB2  019A               	clrf	26	;volatile
  1648     0EB3                     l2658:
  1649                           
  1650                           ;main.c: 461:     ANSELA = 0x00;
  1651     0EB3  017E               	movlb	62	; select bank62
  1652     0EB4  01B8               	clrf	56	;volatile
  1653     0EB5                     l2660:
  1654                           
  1655                           ;main.c: 462:     ANSELB = 0x00;
  1656     0EB5  01C3               	clrf	67	;volatile
  1657     0EB6                     l2662:
  1658                           
  1659                           ;main.c: 463:     ANSELC = 0x00;
  1660     0EB6  01CE               	clrf	78	;volatile
  1661                           
  1662                           ;main.c: 466:     TRISA = 0b00110100;
  1663     0EB7  3034               	movlw	52
  1664     0EB8  0140               	movlb	0	; select bank0
  1665     0EB9  0092               	movwf	18	;volatile
  1666                           
  1667                           ;main.c: 467:     TRISB = 0b10110000;
  1668     0EBA  30B0               	movlw	176
  1669     0EBB  0093               	movwf	19	;volatile
  1670                           
  1671                           ;main.c: 468:     TRISC = 0b11111001;
  1672     0EBC  30F9               	movlw	249
  1673     0EBD  0094               	movwf	20	;volatile
  1674                           
  1675                           ;main.c: 469:     INLVLA = 0b00110100;
  1676     0EBE  3034               	movlw	52
  1677     0EBF  017E               	movlb	62	; select bank62
  1678     0EC0  00BC               	movwf	60	;volatile
  1679                           
  1680                           ;main.c: 470:     INLVLB = 0b10110000;
  1681     0EC1  30B0               	movlw	176
  1682     0EC2  00C7               	movwf	71	;volatile
  1683                           
  1684                           ;main.c: 471:     INLVLC = 0b11111001;
  1685     0EC3  30F9               	movlw	249
  1686     0EC4  00D2               	movwf	82	;volatile
  1687                           
  1688                           ;main.c: 474:     T1CLK = 0b00000001;
  1689     0EC5  3001               	movlw	1
  1690     0EC6  0144               	movlb	4	; select bank4
  1691     0EC7  0091               	movwf	17	;volatile
  1692                           
  1693                           ;main.c: 475:     T1CON = 0b00110000;
  1694     0EC8  3030               	movlw	48
  1695     0EC9  008E               	movwf	14	;volatile
  1696     0ECA                     l2664:
  1697                           
  1698                           ;main.c: 476:     TMR1 = 0x0000;
  1699     0ECA  018C               	clrf	12	;volatile
  1700     0ECB  018D               	clrf	13	;volatile
  1701     0ECC                     l2666:
  1702                           
  1703                           ;main.c: 481:     CCP1CAP = 0x0;
  1704     0ECC  0146               	movlb	6	; select bank6
  1705     0ECD  018F               	clrf	15	;volatile
  1706     0ECE                     l2668:
  1707                           
  1708                           ;main.c: 482:     CCP2CAP = 0x0;
  1709     0ECE  0193               	clrf	19	;volatile
  1710     0ECF                     l2670:
  1711                           
  1712                           ;main.c: 483:     CCPR1 = 0x0000;
  1713     0ECF  018C               	clrf	12	;volatile
  1714     0ED0  018D               	clrf	13	;volatile
  1715     0ED1                     l2672:
  1716                           
  1717                           ;main.c: 484:     CCPR2 = 0x0000;
  1718     0ED1  0190               	clrf	16	;volatile
  1719     0ED2  0191               	clrf	17	;volatile
  1720     0ED3                     l2674:
  1721                           
  1722                           ;main.c: 487:     IOCAN2 = 1;
  1723     0ED3  017E               	movlb	62	; select bank62
  1724     0ED4  153E               	bsf	62,2	;volatile
  1725     0ED5                     l2676:
  1726                           
  1727                           ;main.c: 490:     PPSLOCK = 0x55;
  1728     0ED5  3055               	movlw	85
  1729     0ED6  017D               	movlb	61	; select bank61
  1730     0ED7  008F               	movwf	15	;volsfr
  1731     0ED8                     l2678:
  1732                           
  1733                           ;main.c: 491:     PPSLOCK = 0xAA;
  1734     0ED8  30AA               	movlw	170
  1735     0ED9  008F               	movwf	15	;volsfr
  1736     0EDA                     l2680:
  1737                           
  1738                           ;main.c: 492:     PPSLOCKbits.PPSLOCKED = 0;
  1739     0EDA  100F               	bcf	15,0	;volsfr
  1740     0EDB                     l2682:
  1741                           
  1742                           ;main.c: 493:     CCP1PPS = 0x10;
  1743     0EDB  3010               	movlw	16
  1744     0EDC  00A1               	movwf	33	;volatile
  1745     0EDD                     l2684:
  1746                           
  1747                           ;main.c: 494:     CCP2PPS = 0b00010001;
  1748     0EDD  3011               	movlw	17
  1749     0EDE  00A2               	movwf	34	;volatile
  1750     0EDF                     l2686:
  1751                           
  1752                           ;main.c: 495:     RC1PPS = 0x02;
  1753     0EDF  3002               	movlw	2
  1754     0EE0  017E               	movlb	62	; select bank62
  1755     0EE1  00A1               	movwf	33	;volatile
  1756     0EE2                     l2688:
  1757                           
  1758                           ;main.c: 496:     RX1PPS = 0x0F;
  1759     0EE2  300F               	movlw	15
  1760     0EE3  017D               	movlb	61	; select bank61
  1761     0EE4  00CB               	movwf	75	;volatile
  1762     0EE5                     l2690:
  1763                           
  1764                           ;main.c: 497:     RB6PPS = 0x05;
  1765     0EE5  3005               	movlw	5
  1766     0EE6  017E               	movlb	62	; select bank62
  1767     0EE7  009E               	movwf	30	;volatile
  1768     0EE8                     l2692:
  1769                           
  1770                           ;main.c: 498:     PPSLOCK = 0x55;
  1771     0EE8  3055               	movlw	85
  1772     0EE9  017D               	movlb	61	; select bank61
  1773     0EEA  008F               	movwf	15	;volsfr
  1774     0EEB                     l2694:
  1775                           
  1776                           ;main.c: 499:     PPSLOCK = 0xAA;
  1777     0EEB  30AA               	movlw	170
  1778     0EEC  008F               	movwf	15	;volsfr
  1779     0EED                     l2696:
  1780                           
  1781                           ;main.c: 500:     PPSLOCKbits.PPSLOCKED = 1;
  1782     0EED  140F               	bsf	15,0	;volsfr
  1783                           
  1784                           ;main.c: 503:     BAUD1CON = 0x00;
  1785     0EEE  0142               	movlb	2	; select bank2
  1786     0EEF  019F               	clrf	31	;volatile
  1787                           
  1788                           ;main.c: 504:     RC1STA = 0x00;
  1789     0EF0  019D               	clrf	29	;volatile
  1790                           
  1791                           ;main.c: 505:     TX1STA = 0x00;
  1792     0EF1  019E               	clrf	30	;volatile
  1793                           
  1794                           ;main.c: 506:     SP1BRGL = 0x00;
  1795     0EF2  019B               	clrf	27	;volatile
  1796                           
  1797                           ;main.c: 507:     SP1BRGH = 0x00;
  1798     0EF3  019C               	clrf	28	;volatile
  1799     0EF4                     l2698:
  1800                           
  1801                           ;main.c: 509:     BAUD1CON = 0x40;
  1802     0EF4  3040               	movlw	64
  1803     0EF5  009F               	movwf	31	;volatile
  1804     0EF6                     l2700:
  1805                           
  1806                           ;main.c: 511:     RC1STA = 0x80;
  1807     0EF6  3080               	movlw	128
  1808     0EF7  009D               	movwf	29	;volatile
  1809     0EF8                     l2702:
  1810                           
  1811                           ;main.c: 513:     TX1STA = 0x22;
  1812     0EF8  3022               	movlw	34
  1813     0EF9  009E               	movwf	30	;volatile
  1814     0EFA                     l2704:
  1815                           
  1816                           ;main.c: 515:     SP1BRGL = 0x33;
  1817     0EFA  3033               	movlw	51
  1818     0EFB  009B               	movwf	27	;volatile
  1819                           
  1820                           ;main.c: 517:     SP1BRGH = 0x0;
  1821     0EFC  019C               	clrf	28	;volatile
  1822     0EFD                     l2706:
  1823                           
  1824                           ;main.c: 521:     WDTCON = 0x13;
  1825     0EFD  3013               	movlw	19
  1826     0EFE  0150               	movlb	16	; select bank16
  1827     0EFF  008C               	movwf	12	;volatile
  1828     0F00                     l2708:
  1829                           
  1830                           ;main.c: 524:     PIR0 = 0x0;
  1831     0F00  014E               	movlb	14	; select bank14
  1832     0F01  018C               	clrf	12	;volatile
  1833     0F02                     l2710:
  1834                           
  1835                           ;main.c: 525:     PIR1 = 0x0;
  1836     0F02  018D               	clrf	13	;volatile
  1837     0F03                     l2712:
  1838                           
  1839                           ;main.c: 526:     PIR2 = 0x0;
  1840     0F03  018E               	clrf	14	;volatile
  1841     0F04                     l2714:
  1842                           
  1843                           ;main.c: 529:     GIE = 1;
  1844     0F04  178B               	bsf	11,7	;volatile
  1845     0F05                     l2716:
  1846                           
  1847                           ;main.c: 530:     PEIE = 1;
  1848     0F05  170B               	bsf	11,6	;volatile
  1849     0F06                     l2718:
  1850                           
  1851                           ;main.c: 531:     CCP1IE = 1;
  1852     0F06  1797               	bsf	23,7	;volatile
  1853     0F07                     l2720:
  1854                           
  1855                           ;main.c: 532:     CCP2IE = 1;
  1856     0F07  1798               	bsf	24,7	;volatile
  1857     0F08                     l2722:
  1858                           
  1859                           ;main.c: 533:     TMR1IE = 1;
  1860     0F08  1697               	bsf	23,5	;volatile
  1861     0F09                     l2724:
  1862                           
  1863                           ;main.c: 534:     IOCIE = 1;
  1864     0F09  1616               	bsf	22,4	;volatile
  1865     0F0A                     l2726:
  1866                           
  1867                           ;main.c: 536:     ccp2_disable();
  1868     0F0A  318B  23C7  318E   	fcall	_ccp2_disable
  1869     0F0D                     l2728:
  1870                           
  1871                           ;main.c: 537:     LATC1 = 0;
  1872     0F0D  0140               	movlb	0	; select bank0
  1873     0F0E  109A               	bcf	26,1	;volatile
  1874     0F0F                     l313:
  1875     0F0F  0008               	return
  1876     0F10                     __end_of_initialize_system:
  1877                           
  1878                           	psect	text2
  1879     0BC7                     __ptext2:	
  1880 ;; *************** function _ccp2_disable *****************
  1881 ;; Defined at:
  1882 ;;		line 439 in file "main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		status,2
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 3
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_initialize_system
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910     0BC7                     _ccp2_disable:	
  1911                           ;psect for function _ccp2_disable
  1912                           
  1913     0BC7                     l2610:	
  1914                           ;incstack = 0
  1915                           ; Regs used in _ccp2_disable: [status,2]
  1916                           
  1917                           
  1918                           ;main.c: 440:     CCP2IE = 0;
  1919     0BC7  014E               	movlb	14	; select bank14
  1920     0BC8  1398               	bcf	24,7	;volatile
  1921     0BC9                     l2612:
  1922                           
  1923                           ;main.c: 441:     CCP2CON = 0;
  1924     0BC9  0146               	movlb	6	; select bank6
  1925     0BCA  0192               	clrf	18	;volatile
  1926     0BCB                     l310:
  1927     0BCB  0008               	return
  1928     0BCC                     __end_of_ccp2_disable:
  1929                           
  1930                           	psect	text3
  1931     07A8                     __ptext3:	
  1932 ;; *************** function _check_sw_state *****************
  1933 ;; Defined at:
  1934 ;;		line 269 in file "main.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1951 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;Total ram usage:        2 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 3
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962     07A8                     _check_sw_state:	
  1963                           ;psect for function _check_sw_state
  1964                           
  1965     07A8                     l2116:	
  1966                           ;incstack = 0
  1967                           ; Regs used in _check_sw_state: [wreg-fsr0h+status,2+status,0]
  1968                           
  1969                           
  1970                           ;main.c: 270:     switch (RC5) {
  1971     07A8  2FAE               	goto	l2122
  1972     07A9                     l252:	
  1973                           ;main.c: 271:     case 0:
  1974                           
  1975                           
  1976                           ;main.c: 272:         pwj_state = PWJ_DISABLE;
  1977     07A9  01D5               	clrf	_pwj_state
  1978     07AA  0AD5               	incf	_pwj_state,f
  1979                           
  1980                           ;main.c: 273:         break;
  1981     07AB  2FBE               	goto	l2128
  1982     07AC                     l2118:
  1983                           
  1984                           ;main.c: 275:         pwj_state = PWJ_ENABLE;
  1985     07AC  01D5               	clrf	_pwj_state
  1986                           
  1987                           ;main.c: 276:         break;
  1988     07AD  2FBE               	goto	l2128
  1989     07AE                     l2122:
  1990     07AE  3000               	movlw	0
  1991     07AF  0140               	movlb	0	; select bank0
  1992     07B0  1A8E               	btfsc	14,5	;volatile
  1993     07B1  3001               	movlw	1
  1994                           
  1995                           ; Switch size 1, requested type "simple"
  1996                           ; Number of cases is 2, Range of values is 0 to 1
  1997                           ; switch strategies available:
  1998                           ; Name         Instructions Cycles
  1999                           ; simple_byte            7     4 (average)
  2000                           ; direct_byte           10     6 (fixed)
  2001                           ; jumptable            260     6 (fixed)
  2002                           ;	Chosen strategy is simple_byte
  2003     07B2  3A00               	xorlw	0	; case 0
  2004     07B3  1903               	skipnz
  2005     07B4  2FA9               	goto	l252
  2006     07B5  3A01               	xorlw	1	; case 1
  2007     07B6  1903               	skipnz
  2008     07B7  2FAC               	goto	l2118
  2009     07B8  2FBE               	goto	l2128
  2010     07B9                     l256:	
  2011                           ;main.c: 279:     case 0:
  2012                           
  2013                           
  2014                           ;main.c: 280:         revlimit_state = REVLIMIT_DISABLE;
  2015     07B9  01D6               	clrf	_revlimit_state
  2016     07BA  0AD6               	incf	_revlimit_state,f
  2017                           
  2018                           ;main.c: 281:         break;
  2019     07BB  2FC8               	goto	l2130
  2020     07BC                     l2124:
  2021                           
  2022                           ;main.c: 283:         revlimit_state = REVLIMIT_ENABLE;
  2023     07BC  01D6               	clrf	_revlimit_state
  2024                           
  2025                           ;main.c: 284:         break;
  2026     07BD  2FC8               	goto	l2130
  2027     07BE                     l2128:
  2028     07BE  3000               	movlw	0
  2029     07BF  1A0C               	btfsc	12,4	;volatile
  2030     07C0  3001               	movlw	1
  2031                           
  2032                           ; Switch size 1, requested type "simple"
  2033                           ; Number of cases is 2, Range of values is 0 to 1
  2034                           ; switch strategies available:
  2035                           ; Name         Instructions Cycles
  2036                           ; simple_byte            7     4 (average)
  2037                           ; direct_byte           10     6 (fixed)
  2038                           ; jumptable            260     6 (fixed)
  2039                           ;	Chosen strategy is simple_byte
  2040     07C1  3A00               	xorlw	0	; case 0
  2041     07C2  1903               	skipnz
  2042     07C3  2FB9               	goto	l256
  2043     07C4  3A01               	xorlw	1	; case 1
  2044     07C5  1903               	skipnz
  2045     07C6  2FBC               	goto	l2124
  2046     07C7  2FC8               	goto	l2130
  2047     07C8                     l2130:
  2048                           
  2049                           ;main.c: 287:     sw1_pos = (PORTCbits.RC4 << 1) + PORTCbits.RC3;
  2050     07C8  0E0E               	swapf	14,w	;volatile
  2051     07C9  3901               	andlw	1
  2052     07CA  0141               	movlb	1	; select bank1
  2053     07CB  00A0               	movwf	??_check_sw_state^(0+128)
  2054     07CC  3001               	movlw	1
  2055     07CD                     u1815:
  2056     07CD  35A0               	lslf	??_check_sw_state^(0+128),f
  2057     07CE  0B89               	decfsz	9,f
  2058     07CF  2FCD               	goto	u1815
  2059     07D0  0140               	movlb	0	; select bank0
  2060     07D1  0C0E               	rrf	14,w	;volatile
  2061     07D2  0141               	movlb	1	; select bank1
  2062     07D3  00A1               	movwf	(??_check_sw_state+1)^(0+128)
  2063     07D4  0CA1               	rrf	(??_check_sw_state+1)^(0+128),f
  2064     07D5  0C21               	rrf	(??_check_sw_state+1)^(0+128),w
  2065     07D6  3901               	andlw	1
  2066     07D7  0720               	addwf	??_check_sw_state^(0+128),w
  2067     07D8  00EA               	movwf	_sw1_pos^(0+128)
  2068                           
  2069                           ;main.c: 288:     sw2_pos = (PORTCbits.RC6 << 1) + PORTCbits.RC7;
  2070     07D9  0140               	movlb	0	; select bank0
  2071     07DA  0E0E               	swapf	14,w	;volatile
  2072     07DB  0C89               	rrf	9,f
  2073     07DC  0C89               	rrf	9,f
  2074     07DD  3901               	andlw	1
  2075     07DE  0141               	movlb	1	; select bank1
  2076     07DF  00A0               	movwf	??_check_sw_state^(0+128)
  2077     07E0  3001               	movlw	1
  2078     07E1                     u1825:
  2079     07E1  35A0               	lslf	??_check_sw_state^(0+128),f
  2080     07E2  0B89               	decfsz	9,f
  2081     07E3  2FE1               	goto	u1825
  2082     07E4  0140               	movlb	0	; select bank0
  2083     07E5  0D0E               	rlf	14,w	;volatile
  2084     07E6  0D0E               	rlf	14,w	;volatile
  2085     07E7  3901               	andlw	1
  2086     07E8  0141               	movlb	1	; select bank1
  2087     07E9  0720               	addwf	??_check_sw_state^(0+128),w
  2088     07EA  00E9               	movwf	_sw2_pos^(0+128)
  2089     07EB                     l2132:
  2090                           
  2091                           ;main.c: 290:     sw3_pos = 3;
  2092     07EB  3003               	movlw	3
  2093     07EC  00E8               	movwf	_sw3_pos^(0+128)
  2094     07ED                     l2134:
  2095                           
  2096                           ;main.c: 291:     sw4_pos = (PORTBbits.RB5 << 1) + PORTBbits.RB4;
  2097     07ED  0140               	movlb	0	; select bank0
  2098     07EE  0E0D               	swapf	13,w	;volatile
  2099     07EF  0C89               	rrf	9,f
  2100     07F0  3901               	andlw	1
  2101     07F1  0141               	movlb	1	; select bank1
  2102     07F2  00A0               	movwf	??_check_sw_state^(0+128)
  2103     07F3  3001               	movlw	1
  2104     07F4                     u1835:
  2105     07F4  35A0               	lslf	??_check_sw_state^(0+128),f
  2106     07F5  0B89               	decfsz	9,f
  2107     07F6  2FF4               	goto	u1835
  2108     07F7  0140               	movlb	0	; select bank0
  2109     07F8  0E0D               	swapf	13,w	;volatile
  2110     07F9  3901               	andlw	1
  2111     07FA  0141               	movlb	1	; select bank1
  2112     07FB  0720               	addwf	??_check_sw_state^(0+128),w
  2113     07FC  00E7               	movwf	_sw4_pos^(0+128)
  2114     07FD                     l259:
  2115     07FD  0008               	return
  2116     07FE                     __end_of_check_sw_state:
  2117                           
  2118                           	psect	text4
  2119     0BDE                     __ptext4:	
  2120 ;; *************** function _ccp1_enable *****************
  2121 ;; Defined at:
  2122 ;;		line 408 in file "main.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 3
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150     0BDE                     _ccp1_enable:	
  2151                           ;psect for function _ccp1_enable
  2152                           
  2153     0BDE                     l2818:	
  2154                           ;incstack = 0
  2155                           ; Regs used in _ccp1_enable: [wreg]
  2156                           
  2157                           
  2158                           ;main.c: 409:     CCP1IE = 0;
  2159     0BDE  014E               	movlb	14	; select bank14
  2160     0BDF  1397               	bcf	23,7	;volatile
  2161                           
  2162                           ;main.c: 410:     CCP1IF = 0;
  2163     0BE0  138D               	bcf	13,7	;volatile
  2164     0BE1                     l2820:
  2165                           
  2166                           ;main.c: 411:     CCP1CON = 0x84;
  2167     0BE1  3084               	movlw	132
  2168     0BE2  0146               	movlb	6	; select bank6
  2169     0BE3  008E               	movwf	14	;volatile
  2170     0BE4                     l2822:
  2171                           
  2172                           ;main.c: 412:     CCP1IE = 1;
  2173     0BE4  014E               	movlb	14	; select bank14
  2174     0BE5  1797               	bsf	23,7	;volatile
  2175     0BE6                     l301:
  2176     0BE6  0008               	return
  2177     0BE7                     __end_of_ccp1_enable:
  2178                           
  2179                           	psect	text5
  2180     03BB                     __ptext5:	
  2181 ;; *************** function _calc_map *****************
  2182 ;; Defined at:
  2183 ;;		line 218 in file "main.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  temp1           3   30[BANK1 ] unsigned um
  2188 ;;  temp            3   27[BANK1 ] unsigned um
  2189 ;;  p4y             2   41[BANK1 ] unsigned short 
  2190 ;;  p3y             2   39[BANK1 ] unsigned short 
  2191 ;;  p2y             2   37[BANK1 ] unsigned short 
  2192 ;;  p1y             2   35[BANK1 ] unsigned short 
  2193 ;;  a               1   47[BANK1 ] unsigned char 
  2194 ;;  p4x             1   46[BANK1 ] unsigned char 
  2195 ;;  p3x             1   45[BANK1 ] unsigned char 
  2196 ;;  p2x             1   44[BANK1 ] unsigned char 
  2197 ;;  p1x             1   43[BANK1 ] unsigned char 
  2198 ;;  coeff_p3_p4     1   34[BANK1 ] unsigned char 
  2199 ;;  coeff_p1_p2     1   33[BANK1 ] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;Total ram usage:       33 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 4
  2216 ;; This function calls:
  2217 ;;		___lwdiv
  2218 ;;		___tmul
  2219 ;;		___wmul
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225     03BB                     _calc_map:	
  2226                           ;psect for function _calc_map
  2227                           
  2228     03BB                     l2730:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _calc_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2231                           
  2232                           
  2233                           ;main.c: 219:     uint8_t p1x, p2x, p3x, p4x;;main.c: 220:     uint16_t p1y, p2y, p3y, p
      +                          4y;;main.c: 221:     uint8_t coeff_p1_p2, coeff_p3_p4;;main.c: 222:     uint8_t a;;main.
      +                          c: 223:     uint24_t temp;;main.c: 224:     uint24_t temp1;;main.c: 226:     p1x = adv_s
      +                          tart_rpm_table[sw1_pos];
  2234     03BB  0141               	movlb	1	; select bank1
  2235     03BC  086A               	movf	_sw1_pos^(0+128),w
  2236     03BD  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  2237     03BE  0084               	movwf	4
  2238     03BF  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  2239     03C0  1803               	skipnc
  2240     03C1  3E01               	addlw	1
  2241     03C2  0085               	movwf	5
  2242     03C3  0800               	movf	0,w	;code access
  2243     03C4  00CB               	movwf	calc_map@p1x^(0+128)
  2244     03C5                     l2732:
  2245                           
  2246                           ;main.c: 227:     p2x = adv_start_rpm_table[sw1_pos] + max_adv_grad_table[sw3_pos];
  2247     03C5  0868               	movf	_sw3_pos^(0+128),w
  2248     03C6  3E16               	addlw	low (_max_adv_grad_table| (0+32768))
  2249     03C7  0084               	movwf	4
  2250     03C8  3090               	movlw	high (_max_adv_grad_table| (0+32768))
  2251     03C9  1803               	skipnc
  2252     03CA  3E01               	addlw	1
  2253     03CB  0085               	movwf	5
  2254     03CC  0800               	movf	0,w	;code access
  2255     03CD  00AF               	movwf	??_calc_map^(0+128)
  2256     03CE  086A               	movf	_sw1_pos^(0+128),w
  2257     03CF  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  2258     03D0  0084               	movwf	4
  2259     03D1  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  2260     03D2  1803               	skipnc
  2261     03D3  3E01               	addlw	1
  2262     03D4  0085               	movwf	5
  2263     03D5  0800               	movf	0,w	;code access
  2264     03D6  072F               	addwf	??_calc_map^(0+128),w
  2265     03D7  00CC               	movwf	calc_map@p2x^(0+128)
  2266     03D8                     l2734:
  2267                           
  2268                           ;main.c: 228:     p3x = (55);
  2269     03D8  3037               	movlw	55
  2270     03D9  00CD               	movwf	calc_map@p3x^(0+128)
  2271     03DA                     l2736:
  2272                           
  2273                           ;main.c: 229:     p4x = (80);
  2274     03DA  3050               	movlw	80
  2275     03DB  00CE               	movwf	calc_map@p4x^(0+128)
  2276     03DC                     l2738:
  2277                           
  2278                           ;main.c: 230:     p1y = (500);
  2279     03DC  30F4               	movlw	244
  2280     03DD  00C3               	movwf	calc_map@p1y^(0+128)
  2281     03DE  3001               	movlw	1
  2282     03DF  00C4               	movwf	(calc_map@p1y^(0+128)+1)
  2283     03E0                     l2740:
  2284                           
  2285                           ;main.c: 231:     p2y = max_adv_table[sw2_pos];
  2286     03E0  0869               	movf	_sw2_pos^(0+128),w
  2287     03E1  00AF               	movwf	??_calc_map^(0+128)
  2288     03E2  01B0               	clrf	(??_calc_map^(0+128)+1)
  2289     03E3  35AF               	lslf	??_calc_map^(0+128),f
  2290     03E4  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2291     03E5  3008               	movlw	low _max_adv_table
  2292     03E6  072F               	addwf	??_calc_map^(0+128),w
  2293     03E7  0084               	movwf	4
  2294     03E8  3010               	movlw	high _max_adv_table
  2295     03E9  3D30               	addwfc	(??_calc_map+1)^(0+128),w
  2296     03EA  3880               	iorlw	128
  2297     03EB  0085               	movwf	5
  2298     03EC  3F00               	moviw [0]fsr0
  2299     03ED  00C5               	movwf	calc_map@p2y^(0+128)
  2300     03EE  3F01               	moviw [1]fsr0
  2301     03EF  00C6               	movwf	(calc_map@p2y+1)^(0+128)
  2302     03F0                     l2742:
  2303                           
  2304                           ;main.c: 232:     p3y = p2y;
  2305     03F0  0846               	movf	(calc_map@p2y+1)^(0+128),w
  2306     03F1  00C8               	movwf	(calc_map@p3y+1)^(0+128)
  2307     03F2  0845               	movf	calc_map@p2y^(0+128),w
  2308     03F3  00C7               	movwf	calc_map@p3y^(0+128)
  2309     03F4                     l2744:
  2310                           
  2311                           ;main.c: 233:     p4y = min_ret_table[sw4_pos];
  2312     03F4  0867               	movf	_sw4_pos^(0+128),w
  2313     03F5  00AF               	movwf	??_calc_map^(0+128)
  2314     03F6  01B0               	clrf	(??_calc_map^(0+128)+1)
  2315     03F7  35AF               	lslf	??_calc_map^(0+128),f
  2316     03F8  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2317     03F9  3000               	movlw	low _min_ret_table
  2318     03FA  072F               	addwf	??_calc_map^(0+128),w
  2319     03FB  0084               	movwf	4
  2320     03FC  3010               	movlw	high _min_ret_table
  2321     03FD  3D30               	addwfc	(??_calc_map+1)^(0+128),w
  2322     03FE  3880               	iorlw	128
  2323     03FF  0085               	movwf	5
  2324     0400  3F00               	moviw [0]fsr0
  2325     0401  00C9               	movwf	calc_map@p4y^(0+128)
  2326     0402  3F01               	moviw [1]fsr0
  2327     0403  00CA               	movwf	(calc_map@p4y+1)^(0+128)
  2328     0404                     l2746:
  2329                           
  2330                           ;main.c: 234:     coeff_p1_p2 = (uint8_t) ((p2y - p1y) / (p2x - p1x));
  2331     0404  084B               	movf	calc_map@p1x^(0+128),w
  2332     0405  024C               	subwf	calc_map@p2x^(0+128),w
  2333     0406  00A0               	movwf	___lwdiv@divisor^(0+128)
  2334     0407  01A1               	clrf	(___lwdiv@divisor^(0+128)+1)
  2335     0408  1C03               	skipc
  2336     0409  03A1               	decf	(___lwdiv@divisor+1)^(0+128),f
  2337     040A  0845               	movf	calc_map@p2y^(0+128),w
  2338     040B  3E0C               	addlw	12
  2339     040C  00A2               	movwf	___lwdiv@dividend^(0+128)
  2340     040D  30FE               	movlw	254
  2341     040E  3D46               	addwfc	(calc_map@p2y+1)^(0+128),w
  2342     040F  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2343     0410  318D  2563  3183   	fcall	___lwdiv
  2344     0413  0141               	movlb	1	; select bank1
  2345     0414  0820               	movf	?___lwdiv^(0+128),w
  2346     0415  00C1               	movwf	calc_map@coeff_p1_p2^(0+128)
  2347     0416                     l2748:
  2348                           
  2349                           ;main.c: 235:     coeff_p3_p4 = (uint8_t) ((p3y - p4y) / (p4x - p3x));
  2350     0416  3019               	movlw	25
  2351     0417  00A0               	movwf	___lwdiv@divisor^(0+128)
  2352     0418  3000               	movlw	0
  2353     0419  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  2354     041A  0849               	movf	calc_map@p4y^(0+128),w
  2355     041B  0247               	subwf	calc_map@p3y^(0+128),w
  2356     041C  00A2               	movwf	___lwdiv@dividend^(0+128)
  2357     041D  084A               	movf	(calc_map@p4y+1)^(0+128),w
  2358     041E  3B48               	subwfb	(calc_map@p3y+1)^(0+128),w
  2359     041F  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2360     0420  318D  2563  3183   	fcall	___lwdiv
  2361     0423  0141               	movlb	1	; select bank1
  2362     0424  0820               	movf	?___lwdiv^(0+128),w
  2363     0425  00C2               	movwf	calc_map@coeff_p3_p4^(0+128)
  2364     0426                     l2750:
  2365                           
  2366                           ;main.c: 238:     for (a = 15; a <= p1x; a++) {
  2367     0426  300F               	movlw	15
  2368     0427  00CF               	movwf	calc_map@a^(0+128)
  2369     0428  2C40               	goto	l2756
  2370     0429                     l2752:
  2371                           
  2372                           ;main.c: 239:         IG_table[a] = p1y;
  2373     0429  084F               	movf	calc_map@a^(0+128),w
  2374     042A  00AF               	movwf	??_calc_map^(0+128)
  2375     042B  01B0               	clrf	(??_calc_map^(0+128)+1)
  2376     042C  35AF               	lslf	??_calc_map^(0+128),f
  2377     042D  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2378     042E  3067               	movlw	103
  2379     042F  00B1               	movwf	(??_calc_map+2)^(0+128)
  2380     0430  3022               	movlw	34
  2381     0431  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2382     0432  082F               	movf	??_calc_map^(0+128),w
  2383     0433  0731               	addwf	(??_calc_map+2)^(0+128),w
  2384     0434  0086               	movwf	6
  2385     0435  0830               	movf	(??_calc_map+1)^(0+128),w
  2386     0436  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2387     0437  0087               	movwf	7
  2388     0438  0843               	movf	calc_map@p1y^(0+128),w
  2389     0439  3FC0               	movwi [0]fsr1
  2390     043A  0844               	movf	(calc_map@p1y+1)^(0+128),w
  2391     043B  3FC1               	movwi [1]fsr1
  2392     043C                     l2754:
  2393                           
  2394                           ;main.c: 240:     }
  2395     043C  3001               	movlw	1
  2396     043D  00AF               	movwf	??_calc_map^(0+128)
  2397     043E  082F               	movf	??_calc_map^(0+128),w
  2398     043F  07CF               	addwf	calc_map@a^(0+128),f
  2399     0440                     l2756:
  2400     0440  084F               	movf	calc_map@a^(0+128),w
  2401     0441  024B               	subwf	calc_map@p1x^(0+128),w
  2402     0442  1803               	skipnc
  2403     0443  2C45               	goto	u2521
  2404     0444  2C46               	goto	u2520
  2405     0445                     u2521:
  2406     0445  2C29               	goto	l2752
  2407     0446                     u2520:
  2408     0446                     l2758:
  2409                           
  2410                           ;main.c: 241:     for (a = p1x + 1; a <= p2x; a++) {
  2411     0446  084B               	movf	calc_map@p1x^(0+128),w
  2412     0447  3E01               	addlw	1
  2413     0448  00CF               	movwf	calc_map@a^(0+128)
  2414     0449  2C7B               	goto	l2764
  2415     044A                     l2760:
  2416                           
  2417                           ;main.c: 242:         IG_table[a] = coeff_p1_p2 + IG_table[a - 1];
  2418     044A  084F               	movf	calc_map@a^(0+128),w
  2419     044B  00AF               	movwf	??_calc_map^(0+128)
  2420     044C  01B0               	clrf	(??_calc_map^(0+128)+1)
  2421     044D  35AF               	lslf	??_calc_map^(0+128),f
  2422     044E  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2423     044F  3065               	movlw	101
  2424     0450  00B1               	movwf	(??_calc_map+2)^(0+128)
  2425     0451  3022               	movlw	34
  2426     0452  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2427     0453  082F               	movf	??_calc_map^(0+128),w
  2428     0454  0731               	addwf	(??_calc_map+2)^(0+128),w
  2429     0455  0086               	movwf	6
  2430     0456  0830               	movf	(??_calc_map+1)^(0+128),w
  2431     0457  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2432     0458  0087               	movwf	7
  2433     0459  3F40               	moviw [0]fsr1
  2434     045A  00B3               	movwf	(??_calc_map+4)^(0+128)
  2435     045B  3F41               	moviw [1]fsr1
  2436     045C  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2437     045D  0841               	movf	calc_map@coeff_p1_p2^(0+128),w
  2438     045E  0733               	addwf	(??_calc_map+4)^(0+128),w
  2439     045F  00B5               	movwf	(??_calc_map+6)^(0+128)
  2440     0460  0834               	movf	(??_calc_map+5)^(0+128),w
  2441     0461  1803               	skipnc
  2442     0462  0A34               	incf	(??_calc_map+5)^(0+128),w
  2443     0463  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2444     0464  084F               	movf	calc_map@a^(0+128),w
  2445     0465  00B7               	movwf	(??_calc_map+8)^(0+128)
  2446     0466  01B8               	clrf	((??_calc_map+8)^(0+128)+1)
  2447     0467  35B7               	lslf	(??_calc_map+8)^(0+128),f
  2448     0468  0DB8               	rlf	((??_calc_map+8)^(0+128)+1),f
  2449     0469  3067               	movlw	103
  2450     046A  00B9               	movwf	(??_calc_map+10)^(0+128)
  2451     046B  3022               	movlw	34
  2452     046C  00BA               	movwf	((??_calc_map+10)^(0+128)+1)
  2453     046D  0837               	movf	(??_calc_map+8)^(0+128),w
  2454     046E  0739               	addwf	(??_calc_map+10)^(0+128),w
  2455     046F  0086               	movwf	6
  2456     0470  0838               	movf	(??_calc_map+9)^(0+128),w
  2457     0471  3D3A               	addwfc	(??_calc_map+11)^(0+128),w
  2458     0472  0087               	movwf	7
  2459     0473  0835               	movf	(??_calc_map+6)^(0+128),w
  2460     0474  3FC0               	movwi [0]fsr1
  2461     0475  0836               	movf	((??_calc_map+6)^(0+128)+1),w
  2462     0476  3FC1               	movwi [1]fsr1
  2463     0477                     l2762:
  2464                           
  2465                           ;main.c: 243:     }
  2466     0477  3001               	movlw	1
  2467     0478  00AF               	movwf	??_calc_map^(0+128)
  2468     0479  082F               	movf	??_calc_map^(0+128),w
  2469     047A  07CF               	addwf	calc_map@a^(0+128),f
  2470     047B                     l2764:
  2471     047B  084F               	movf	calc_map@a^(0+128),w
  2472     047C  024C               	subwf	calc_map@p2x^(0+128),w
  2473     047D  1803               	skipnc
  2474     047E  2C80               	goto	u2531
  2475     047F  2C81               	goto	u2530
  2476     0480                     u2531:
  2477     0480  2C4A               	goto	l2760
  2478     0481                     u2530:
  2479     0481                     l2766:
  2480                           
  2481                           ;main.c: 244:     for (a = p2x + 1; a <= p3x; a++) {
  2482     0481  084C               	movf	calc_map@p2x^(0+128),w
  2483     0482  3E01               	addlw	1
  2484     0483  00CF               	movwf	calc_map@a^(0+128)
  2485     0484  2C9C               	goto	l2772
  2486     0485                     l2768:
  2487                           
  2488                           ;main.c: 245:         IG_table[a] = p3y;
  2489     0485  084F               	movf	calc_map@a^(0+128),w
  2490     0486  00AF               	movwf	??_calc_map^(0+128)
  2491     0487  01B0               	clrf	(??_calc_map^(0+128)+1)
  2492     0488  35AF               	lslf	??_calc_map^(0+128),f
  2493     0489  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2494     048A  3067               	movlw	103
  2495     048B  00B1               	movwf	(??_calc_map+2)^(0+128)
  2496     048C  3022               	movlw	34
  2497     048D  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2498     048E  082F               	movf	??_calc_map^(0+128),w
  2499     048F  0731               	addwf	(??_calc_map+2)^(0+128),w
  2500     0490  0086               	movwf	6
  2501     0491  0830               	movf	(??_calc_map+1)^(0+128),w
  2502     0492  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2503     0493  0087               	movwf	7
  2504     0494  0847               	movf	calc_map@p3y^(0+128),w
  2505     0495  3FC0               	movwi [0]fsr1
  2506     0496  0848               	movf	(calc_map@p3y+1)^(0+128),w
  2507     0497  3FC1               	movwi [1]fsr1
  2508     0498                     l2770:
  2509                           
  2510                           ;main.c: 246:     }
  2511     0498  3001               	movlw	1
  2512     0499  00AF               	movwf	??_calc_map^(0+128)
  2513     049A  082F               	movf	??_calc_map^(0+128),w
  2514     049B  07CF               	addwf	calc_map@a^(0+128),f
  2515     049C                     l2772:
  2516     049C  084F               	movf	calc_map@a^(0+128),w
  2517     049D  024D               	subwf	calc_map@p3x^(0+128),w
  2518     049E  1803               	skipnc
  2519     049F  2CA1               	goto	u2541
  2520     04A0  2CA2               	goto	u2540
  2521     04A1                     u2541:
  2522     04A1  2C85               	goto	l2768
  2523     04A2                     u2540:
  2524     04A2                     l2774:
  2525                           
  2526                           ;main.c: 247:     for (a = p3x + 1; a <= p4x; a++) {
  2527     04A2  084D               	movf	calc_map@p3x^(0+128),w
  2528     04A3  3E01               	addlw	1
  2529     04A4  00CF               	movwf	calc_map@a^(0+128)
  2530     04A5  2CD7               	goto	l2780
  2531     04A6                     l2776:
  2532                           
  2533                           ;main.c: 248:         IG_table[a] = IG_table[a - 1] - coeff_p3_p4;
  2534     04A6  084F               	movf	calc_map@a^(0+128),w
  2535     04A7  00AF               	movwf	??_calc_map^(0+128)
  2536     04A8  01B0               	clrf	(??_calc_map^(0+128)+1)
  2537     04A9  35AF               	lslf	??_calc_map^(0+128),f
  2538     04AA  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2539     04AB  3065               	movlw	101
  2540     04AC  00B1               	movwf	(??_calc_map+2)^(0+128)
  2541     04AD  3022               	movlw	34
  2542     04AE  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2543     04AF  082F               	movf	??_calc_map^(0+128),w
  2544     04B0  0731               	addwf	(??_calc_map+2)^(0+128),w
  2545     04B1  0086               	movwf	6
  2546     04B2  0830               	movf	(??_calc_map+1)^(0+128),w
  2547     04B3  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2548     04B4  0087               	movwf	7
  2549     04B5  3F40               	moviw [0]fsr1
  2550     04B6  00B3               	movwf	(??_calc_map+4)^(0+128)
  2551     04B7  3F41               	moviw [1]fsr1
  2552     04B8  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2553     04B9  0834               	movf	(??_calc_map+5)^(0+128),w
  2554     04BA  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2555     04BB  0842               	movf	calc_map@coeff_p3_p4^(0+128),w
  2556     04BC  0233               	subwf	(??_calc_map+4)^(0+128),w
  2557     04BD  00B5               	movwf	(??_calc_map+6)^(0+128)
  2558     04BE  1C03               	skipc
  2559     04BF  03B6               	decf	((??_calc_map+6)^(0+128)+1),f
  2560     04C0  084F               	movf	calc_map@a^(0+128),w
  2561     04C1  00B7               	movwf	(??_calc_map+8)^(0+128)
  2562     04C2  01B8               	clrf	((??_calc_map+8)^(0+128)+1)
  2563     04C3  35B7               	lslf	(??_calc_map+8)^(0+128),f
  2564     04C4  0DB8               	rlf	((??_calc_map+8)^(0+128)+1),f
  2565     04C5  3067               	movlw	103
  2566     04C6  00B9               	movwf	(??_calc_map+10)^(0+128)
  2567     04C7  3022               	movlw	34
  2568     04C8  00BA               	movwf	((??_calc_map+10)^(0+128)+1)
  2569     04C9  0837               	movf	(??_calc_map+8)^(0+128),w
  2570     04CA  0739               	addwf	(??_calc_map+10)^(0+128),w
  2571     04CB  0086               	movwf	6
  2572     04CC  0838               	movf	(??_calc_map+9)^(0+128),w
  2573     04CD  3D3A               	addwfc	(??_calc_map+11)^(0+128),w
  2574     04CE  0087               	movwf	7
  2575     04CF  0835               	movf	(??_calc_map+6)^(0+128),w
  2576     04D0  3FC0               	movwi [0]fsr1
  2577     04D1  0836               	movf	((??_calc_map+6)^(0+128)+1),w
  2578     04D2  3FC1               	movwi [1]fsr1
  2579     04D3                     l2778:
  2580                           
  2581                           ;main.c: 249:     }
  2582     04D3  3001               	movlw	1
  2583     04D4  00AF               	movwf	??_calc_map^(0+128)
  2584     04D5  082F               	movf	??_calc_map^(0+128),w
  2585     04D6  07CF               	addwf	calc_map@a^(0+128),f
  2586     04D7                     l2780:
  2587     04D7  084F               	movf	calc_map@a^(0+128),w
  2588     04D8  024E               	subwf	calc_map@p4x^(0+128),w
  2589     04D9  1803               	skipnc
  2590     04DA  2CDC               	goto	u2551
  2591     04DB  2CDD               	goto	u2550
  2592     04DC                     u2551:
  2593     04DC  2CA6               	goto	l2776
  2594     04DD                     u2550:
  2595     04DD                     l2782:
  2596                           
  2597                           ;main.c: 250:     for (a = p4x + 1; a <= 130; a++) {
  2598     04DD  084E               	movf	calc_map@p4x^(0+128),w
  2599     04DE  3E01               	addlw	1
  2600     04DF  00CF               	movwf	calc_map@a^(0+128)
  2601     04E0                     l2784:
  2602     04E0  3083               	movlw	131
  2603     04E1  024F               	subwf	calc_map@a^(0+128),w
  2604     04E2  1C03               	skipc
  2605     04E3  2CE5               	goto	u2561
  2606     04E4  2CE6               	goto	u2560
  2607     04E5                     u2561:
  2608     04E5  2CE7               	goto	l2788
  2609     04E6                     u2560:
  2610     04E6  2CFF               	goto	l2794
  2611     04E7                     l2788:
  2612                           
  2613                           ;main.c: 251:         IG_table[a] = p4y;
  2614     04E7  084F               	movf	calc_map@a^(0+128),w
  2615     04E8  00AF               	movwf	??_calc_map^(0+128)
  2616     04E9  01B0               	clrf	(??_calc_map^(0+128)+1)
  2617     04EA  35AF               	lslf	??_calc_map^(0+128),f
  2618     04EB  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2619     04EC  3067               	movlw	103
  2620     04ED  00B1               	movwf	(??_calc_map+2)^(0+128)
  2621     04EE  3022               	movlw	34
  2622     04EF  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2623     04F0  082F               	movf	??_calc_map^(0+128),w
  2624     04F1  0731               	addwf	(??_calc_map+2)^(0+128),w
  2625     04F2  0086               	movwf	6
  2626     04F3  0830               	movf	(??_calc_map+1)^(0+128),w
  2627     04F4  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2628     04F5  0087               	movwf	7
  2629     04F6  0849               	movf	calc_map@p4y^(0+128),w
  2630     04F7  3FC0               	movwi [0]fsr1
  2631     04F8  084A               	movf	(calc_map@p4y+1)^(0+128),w
  2632     04F9  3FC1               	movwi [1]fsr1
  2633     04FA                     l2790:
  2634                           
  2635                           ;main.c: 252:     }
  2636     04FA  3001               	movlw	1
  2637     04FB  00AF               	movwf	??_calc_map^(0+128)
  2638     04FC  082F               	movf	??_calc_map^(0+128),w
  2639     04FD  07CF               	addwf	calc_map@a^(0+128),f
  2640     04FE  2CE0               	goto	l2784
  2641     04FF                     l2794:
  2642                           
  2643                           ;main.c: 254:     for (a = 15; a <= 130; a++) {
  2644     04FF  300F               	movlw	15
  2645     0500  00CF               	movwf	calc_map@a^(0+128)
  2646     0501                     l2798:
  2647                           
  2648                           ;main.c: 255:         deg_table[a] = (uint8_t) (IG_table[a] / 100);
  2649     0501  3064               	movlw	100
  2650     0502  00A0               	movwf	___lwdiv@divisor^(0+128)
  2651     0503  3000               	movlw	0
  2652     0504  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  2653     0505  084F               	movf	calc_map@a^(0+128),w
  2654     0506  00AF               	movwf	??_calc_map^(0+128)
  2655     0507  01B0               	clrf	(??_calc_map^(0+128)+1)
  2656     0508  35AF               	lslf	??_calc_map^(0+128),f
  2657     0509  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2658     050A  3067               	movlw	103
  2659     050B  00B1               	movwf	(??_calc_map+2)^(0+128)
  2660     050C  3022               	movlw	34
  2661     050D  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2662     050E  082F               	movf	??_calc_map^(0+128),w
  2663     050F  0731               	addwf	(??_calc_map+2)^(0+128),w
  2664     0510  0086               	movwf	6
  2665     0511  0830               	movf	(??_calc_map+1)^(0+128),w
  2666     0512  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2667     0513  0087               	movwf	7
  2668     0514  3F40               	moviw [0]fsr1
  2669     0515  00A2               	movwf	___lwdiv@dividend^(0+128)
  2670     0516  3F41               	moviw [1]fsr1
  2671     0517  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2672     0518  318D  2563  3183   	fcall	___lwdiv
  2673     051B  0141               	movlb	1	; select bank1
  2674     051C  0820               	movf	?___lwdiv^(0+128),w
  2675     051D  00B3               	movwf	(??_calc_map+4)^(0+128)
  2676     051E  084F               	movf	calc_map@a^(0+128),w
  2677     051F  3E6D               	addlw	109
  2678     0520  00B4               	movwf	(??_calc_map+5)^(0+128)
  2679     0521  01B5               	clrf	((??_calc_map+5)^(0+128)+1)
  2680     0522  3023               	movlw	35
  2681     0523  3DB5               	addwfc	((??_calc_map+5)^(0+128)+1),f
  2682     0524  0834               	movf	(??_calc_map+5)^(0+128),w
  2683     0525  0086               	movwf	6
  2684     0526  0835               	movf	(??_calc_map+6)^(0+128),w
  2685     0527  0087               	movwf	7
  2686     0528  0833               	movf	(??_calc_map+4)^(0+128),w
  2687     0529  0081               	movwf	1
  2688     052A                     l2800:
  2689                           
  2690                           ;main.c: 256:     }
  2691     052A  3001               	movlw	1
  2692     052B  00AF               	movwf	??_calc_map^(0+128)
  2693     052C  082F               	movf	??_calc_map^(0+128),w
  2694     052D  07CF               	addwf	calc_map@a^(0+128),f
  2695     052E                     l2802:
  2696     052E  3083               	movlw	131
  2697     052F  024F               	subwf	calc_map@a^(0+128),w
  2698     0530  1C03               	skipc
  2699     0531  2D33               	goto	u2571
  2700     0532  2D34               	goto	u2570
  2701     0533                     u2571:
  2702     0533  2D01               	goto	l2798
  2703     0534                     u2570:
  2704     0534                     l2804:
  2705                           
  2706                           ;main.c: 258:     for (a = 15; a <= 130; a++) {
  2707     0534  300F               	movlw	15
  2708     0535  00CF               	movwf	calc_map@a^(0+128)
  2709     0536                     l2808:
  2710                           
  2711                           ;main.c: 259:         temp1 = (((3500) - IG_table[a]) >> 1);
  2712     0536  084F               	movf	calc_map@a^(0+128),w
  2713     0537  00AF               	movwf	??_calc_map^(0+128)
  2714     0538  01B0               	clrf	(??_calc_map^(0+128)+1)
  2715     0539  35AF               	lslf	??_calc_map^(0+128),f
  2716     053A  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2717     053B  3067               	movlw	103
  2718     053C  00B1               	movwf	(??_calc_map+2)^(0+128)
  2719     053D  3022               	movlw	34
  2720     053E  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2721     053F  082F               	movf	??_calc_map^(0+128),w
  2722     0540  0731               	addwf	(??_calc_map+2)^(0+128),w
  2723     0541  0086               	movwf	6
  2724     0542  0830               	movf	(??_calc_map+1)^(0+128),w
  2725     0543  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2726     0544  0087               	movwf	7
  2727     0545  30AC               	movlw	172
  2728     0546  00B3               	movwf	(??_calc_map+4)^(0+128)
  2729     0547  300D               	movlw	13
  2730     0548  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2731     0549  3F40               	moviw [0]fsr1
  2732     054A  0233               	subwf	(??_calc_map+4)^(0+128),w
  2733     054B  00B5               	movwf	(??_calc_map+6)^(0+128)
  2734     054C  3F41               	moviw [1]fsr1
  2735     054D  3B34               	subwfb	(??_calc_map+5)^(0+128),w
  2736     054E  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2737     054F  36B6               	lsrf	((??_calc_map+6)^(0+128)+1),f
  2738     0550  0CB5               	rrf	(??_calc_map+6)^(0+128),f
  2739     0551  0835               	movf	(??_calc_map+6)^(0+128),w
  2740     0552  00BE               	movwf	calc_map@temp1^(0+128)
  2741     0553  0836               	movf	(??_calc_map+7)^(0+128),w
  2742     0554  00BF               	movwf	(calc_map@temp1+1)^(0+128)
  2743     0555  01C0               	clrf	(calc_map@temp1+2)^(0+128)
  2744     0556                     l2810:
  2745                           
  2746                           ;main.c: 260:         temp = ((deg2time_coeff[a] * temp1) >> 10);
  2747     0556  084F               	movf	calc_map@a^(0+128),w
  2748     0557  00AF               	movwf	??_calc_map^(0+128)
  2749     0558  01B0               	clrf	(??_calc_map^(0+128)+1)
  2750     0559  082F               	movf	??_calc_map^(0+128),w
  2751     055A  00A0               	movwf	___wmul@multiplier^(0+128)
  2752     055B  0830               	movf	(??_calc_map+1)^(0+128),w
  2753     055C  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  2754     055D  3003               	movlw	3
  2755     055E  00A2               	movwf	___wmul@multiplicand^(0+128)
  2756     055F  3000               	movlw	0
  2757     0560  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  2758     0561  318C  24AF  3183   	fcall	___wmul
  2759     0564  30DE               	movlw	222
  2760     0565  0141               	movlb	1	; select bank1
  2761     0566  00B1               	movwf	(??_calc_map+2)^(0+128)
  2762     0567  3020               	movlw	32
  2763     0568  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2764     0569  0820               	movf	?___wmul^(0+128),w
  2765     056A  0731               	addwf	(??_calc_map+2)^(0+128),w
  2766     056B  0086               	movwf	6
  2767     056C  0821               	movf	(?___wmul+1)^(0+128),w
  2768     056D  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2769     056E  0087               	movwf	7
  2770     056F  3F40               	moviw [0]fsr1
  2771     0570  00A6               	movwf	___tmul@multiplier^(0+128)
  2772     0571  3F41               	moviw [1]fsr1
  2773     0572  00A7               	movwf	(___tmul@multiplier+1)^(0+128)
  2774     0573  3F42               	moviw [2]fsr1
  2775     0574  00A8               	movwf	(___tmul@multiplier+2)^(0+128)
  2776     0575  083E               	movf	calc_map@temp1^(0+128),w
  2777     0576  00A9               	movwf	___tmul@multiplicand^(0+128)
  2778     0577  083F               	movf	(calc_map@temp1+1)^(0+128),w
  2779     0578  00AA               	movwf	(___tmul@multiplicand+1)^(0+128)
  2780     0579  0840               	movf	(calc_map@temp1+2)^(0+128),w
  2781     057A  00AB               	movwf	(___tmul@multiplicand+2)^(0+128)
  2782     057B  318C  24CF  3183   	fcall	___tmul
  2783     057E  0141               	movlb	1	; select bank1
  2784     057F  0826               	movf	?___tmul^(0+128),w
  2785     0580  00B3               	movwf	(??_calc_map+4)^(0+128)
  2786     0581  0827               	movf	(?___tmul+1)^(0+128),w
  2787     0582  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2788     0583  0828               	movf	(?___tmul+2)^(0+128),w
  2789     0584  00B5               	movwf	((??_calc_map+4)^(0+128)+2)
  2790     0585  300A               	movlw	10
  2791     0586                     u2585:
  2792     0586  36B5               	lsrf	((??_calc_map+4)^(0+128)+2),f
  2793     0587  0CB4               	rrf	((??_calc_map+4)^(0+128)+1),f
  2794     0588  0CB3               	rrf	(??_calc_map+4)^(0+128),f
  2795     0589                     u2580:
  2796     0589  0B89               	decfsz	9,f
  2797     058A  2D86               	goto	u2585
  2798     058B  0833               	movf	(??_calc_map+4)^(0+128),w
  2799     058C  00BB               	movwf	calc_map@temp^(0+128)
  2800     058D  0834               	movf	(??_calc_map+5)^(0+128),w
  2801     058E  00BC               	movwf	(calc_map@temp+1)^(0+128)
  2802     058F  0835               	movf	(??_calc_map+6)^(0+128),w
  2803     0590  00BD               	movwf	(calc_map@temp+2)^(0+128)
  2804     0591                     l2812:
  2805                           
  2806                           ;main.c: 261:         IG_table[a] = temp;
  2807     0591  084F               	movf	calc_map@a^(0+128),w
  2808     0592  00AF               	movwf	??_calc_map^(0+128)
  2809     0593  01B0               	clrf	(??_calc_map^(0+128)+1)
  2810     0594  35AF               	lslf	??_calc_map^(0+128),f
  2811     0595  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2812     0596  3067               	movlw	103
  2813     0597  00B1               	movwf	(??_calc_map+2)^(0+128)
  2814     0598  3022               	movlw	34
  2815     0599  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2816     059A  082F               	movf	??_calc_map^(0+128),w
  2817     059B  0731               	addwf	(??_calc_map+2)^(0+128),w
  2818     059C  0086               	movwf	6
  2819     059D  0830               	movf	(??_calc_map+1)^(0+128),w
  2820     059E  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2821     059F  0087               	movwf	7
  2822     05A0  083B               	movf	calc_map@temp^(0+128),w
  2823     05A1  3FC0               	movwi [0]fsr1
  2824     05A2  083C               	movf	(calc_map@temp+1)^(0+128),w
  2825     05A3  3FC1               	movwi [1]fsr1
  2826     05A4                     l2814:
  2827                           
  2828                           ;main.c: 262:     }
  2829     05A4  3001               	movlw	1
  2830     05A5  00AF               	movwf	??_calc_map^(0+128)
  2831     05A6  082F               	movf	??_calc_map^(0+128),w
  2832     05A7  07CF               	addwf	calc_map@a^(0+128),f
  2833     05A8                     l2816:
  2834     05A8  3083               	movlw	131
  2835     05A9  024F               	subwf	calc_map@a^(0+128),w
  2836     05AA  1C03               	skipc
  2837     05AB  2DAD               	goto	u2591
  2838     05AC  2DAE               	goto	u2590
  2839     05AD                     u2591:
  2840     05AD  2D36               	goto	l2808
  2841     05AE                     u2590:
  2842     05AE                     l248:
  2843     05AE  0008               	return
  2844     05AF                     __end_of_calc_map:
  2845                           
  2846                           	psect	text6
  2847     0CAF                     __ptext6:	
  2848 ;; *************** function ___wmul *****************
  2849 ;; Defined at:
  2850 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2853 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  product         2    4[BANK1 ] unsigned int 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2    0[BANK1 ] unsigned int 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2865 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2868 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2869 ;;Total ram usage:        6 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 3
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_calc_map
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879     0CAF                     ___wmul:	
  2880                           ;psect for function ___wmul
  2881                           
  2882     0CAF                     l2614:	
  2883                           ;incstack = 0
  2884                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2885                           
  2886     0CAF  0141               	movlb	1	; select bank1
  2887     0CB0  01A4               	clrf	___wmul@product^(0+128)
  2888     0CB1  01A5               	clrf	(___wmul@product+1)^(0+128)
  2889     0CB2                     l2616:
  2890     0CB2  1C20               	btfss	___wmul@multiplier^(0+128),0
  2891     0CB3  2CB5               	goto	u2441
  2892     0CB4  2CB6               	goto	u2440
  2893     0CB5                     u2441:
  2894     0CB5  2CBA               	goto	l381
  2895     0CB6                     u2440:
  2896     0CB6                     l2618:
  2897     0CB6  0822               	movf	___wmul@multiplicand^(0+128),w
  2898     0CB7  07A4               	addwf	___wmul@product^(0+128),f
  2899     0CB8  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  2900     0CB9  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  2901     0CBA                     l381:
  2902     0CBA  3001               	movlw	1
  2903     0CBB                     u2455:
  2904     0CBB  35A2               	lslf	___wmul@multiplicand^(0+128),f
  2905     0CBC  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2906     0CBD  0B89               	decfsz	9,f
  2907     0CBE  2CBB               	goto	u2455
  2908     0CBF                     l2620:
  2909     0CBF  3001               	movlw	1
  2910     0CC0                     u2465:
  2911     0CC0  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  2912     0CC1  0CA0               	rrf	___wmul@multiplier^(0+128),f
  2913     0CC2  0B89               	decfsz	9,f
  2914     0CC3  2CC0               	goto	u2465
  2915     0CC4                     l2622:
  2916     0CC4  0820               	movf	___wmul@multiplier^(0+128),w
  2917     0CC5  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  2918     0CC6  1D03               	btfss	3,2
  2919     0CC7  2CC9               	goto	u2471
  2920     0CC8  2CCA               	goto	u2470
  2921     0CC9                     u2471:
  2922     0CC9  2CB2               	goto	l2616
  2923     0CCA                     u2470:
  2924     0CCA                     l2624:
  2925     0CCA  0825               	movf	(___wmul@product+1)^(0+128),w
  2926     0CCB  00A1               	movwf	(?___wmul+1)^(0+128)
  2927     0CCC  0824               	movf	___wmul@product^(0+128),w
  2928     0CCD  00A0               	movwf	?___wmul^(0+128)
  2929     0CCE                     l383:
  2930     0CCE  0008               	return
  2931     0CCF                     __end_of___wmul:
  2932                           
  2933                           	psect	text7
  2934     0CCF                     __ptext7:	
  2935 ;; *************** function ___tmul *****************
  2936 ;; Defined at:
  2937 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul24.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  multiplier      3    6[BANK1 ] unsigned um
  2940 ;;  multiplicand    3    9[BANK1 ] unsigned um
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  product         3   12[BANK1 ] unsigned um
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  3    6[BANK1 ] unsigned um
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2952 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;Total ram usage:        9 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; Hardware stack levels required when called: 3
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_calc_map
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966     0CCF                     ___tmul:	
  2967                           ;psect for function ___tmul
  2968                           
  2969     0CCF                     l2628:	
  2970                           ;incstack = 0
  2971                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  2972                           
  2973     0CCF  3000               	movlw	0
  2974     0CD0  0141               	movlb	1	; select bank1
  2975     0CD1  00AC               	movwf	___tmul@product^(0+128)
  2976     0CD2  3000               	movlw	0
  2977     0CD3  00AD               	movwf	(___tmul@product+1)^(0+128)
  2978     0CD4  3000               	movlw	0
  2979     0CD5  00AE               	movwf	(___tmul@product+2)^(0+128)
  2980     0CD6                     l2630:
  2981     0CD6  1C26               	btfss	___tmul@multiplier^(0+128),0
  2982     0CD7  2CD9               	goto	u2481
  2983     0CD8  2CDA               	goto	u2480
  2984     0CD9                     u2481:
  2985     0CD9  2CE0               	goto	l2634
  2986     0CDA                     u2480:
  2987     0CDA                     l2632:
  2988     0CDA  0829               	movf	___tmul@multiplicand^(0+128),w
  2989     0CDB  07AC               	addwf	___tmul@product^(0+128),f
  2990     0CDC  082A               	movf	(___tmul@multiplicand+1)^(0+128),w
  2991     0CDD  3DAD               	addwfc	(___tmul@product+1)^(0+128),f
  2992     0CDE  082B               	movf	(___tmul@multiplicand+2)^(0+128),w
  2993     0CDF  3DAE               	addwfc	(___tmul@product+2)^(0+128),f
  2994     0CE0                     l2634:
  2995     0CE0  3001               	movlw	1
  2996     0CE1                     u2495:
  2997     0CE1  35A9               	lslf	___tmul@multiplicand^(0+128),f
  2998     0CE2  0DAA               	rlf	(___tmul@multiplicand+1)^(0+128),f
  2999     0CE3  0DAB               	rlf	(___tmul@multiplicand+2)^(0+128),f
  3000     0CE4  0B89               	decfsz	9,f
  3001     0CE5  2CE1               	goto	u2495
  3002     0CE6                     l2636:
  3003     0CE6  3001               	movlw	1
  3004     0CE7                     u2505:
  3005     0CE7  36A8               	lsrf	(___tmul@multiplier+2)^(0+128),f
  3006     0CE8  0CA7               	rrf	(___tmul@multiplier+1)^(0+128),f
  3007     0CE9  0CA6               	rrf	___tmul@multiplier^(0+128),f
  3008     0CEA  0B89               	decfsz	9,f
  3009     0CEB  2CE7               	goto	u2505
  3010     0CEC  0828               	movf	(___tmul@multiplier+2)^(0+128),w
  3011     0CED  0427               	iorwf	(___tmul@multiplier+1)^(0+128),w
  3012     0CEE  0426               	iorwf	___tmul@multiplier^(0+128),w
  3013     0CEF  1D03               	skipz
  3014     0CF0  2CF2               	goto	u2511
  3015     0CF1  2CF3               	goto	u2510
  3016     0CF2                     u2511:
  3017     0CF2  2CD6               	goto	l2630
  3018     0CF3                     u2510:
  3019     0CF3                     l2638:
  3020     0CF3  082C               	movf	___tmul@product^(0+128),w
  3021     0CF4  00A6               	movwf	?___tmul^(0+128)
  3022     0CF5  082D               	movf	(___tmul@product+1)^(0+128),w
  3023     0CF6  00A7               	movwf	(?___tmul+1)^(0+128)
  3024     0CF7  082E               	movf	(___tmul@product+2)^(0+128),w
  3025     0CF8  00A8               	movwf	(?___tmul+2)^(0+128)
  3026     0CF9                     l389:
  3027     0CF9  0008               	return
  3028     0CFA                     __end_of___tmul:
  3029                           
  3030                           	psect	text8
  3031     0D63                     __ptext8:	
  3032 ;; *************** function ___lwdiv *****************
  3033 ;; Defined at:
  3034 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  divisor         2    0[BANK1 ] unsigned int 
  3037 ;;  dividend        2    2[BANK1 ] unsigned int 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  quotient        2    5[BANK1 ] unsigned int 
  3040 ;;  counter         1    7[BANK1 ] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  2    0[BANK1 ] unsigned int 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3050 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;Total ram usage:        8 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 3
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_calc_map
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064     0D63                     ___lwdiv:	
  3065                           ;psect for function ___lwdiv
  3066                           
  3067     0D63                     l1938:	
  3068                           ;incstack = 0
  3069                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3070                           
  3071     0D63  0141               	movlb	1	; select bank1
  3072     0D64  01A5               	clrf	___lwdiv@quotient^(0+128)
  3073     0D65  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  3074     0D66                     l1940:
  3075     0D66  0820               	movf	___lwdiv@divisor^(0+128),w
  3076     0D67  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3077     0D68  1903               	btfsc	3,2
  3078     0D69  2D6B               	goto	u1591
  3079     0D6A  2D6C               	goto	u1590
  3080     0D6B                     u1591:
  3081     0D6B  2D9B               	goto	l1960
  3082     0D6C                     u1590:
  3083     0D6C                     l1942:
  3084     0D6C  01A7               	clrf	___lwdiv@counter^(0+128)
  3085     0D6D  0AA7               	incf	___lwdiv@counter^(0+128),f
  3086     0D6E  2D78               	goto	l1948
  3087     0D6F                     l1944:
  3088     0D6F  3001               	movlw	1
  3089     0D70                     u1605:
  3090     0D70  35A0               	lslf	___lwdiv@divisor^(0+128),f
  3091     0D71  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3092     0D72  0B89               	decfsz	9,f
  3093     0D73  2D70               	goto	u1605
  3094     0D74                     l1946:
  3095     0D74  3001               	movlw	1
  3096     0D75  00A4               	movwf	??___lwdiv^(0+128)
  3097     0D76  0824               	movf	??___lwdiv^(0+128),w
  3098     0D77  07A7               	addwf	___lwdiv@counter^(0+128),f
  3099     0D78                     l1948:
  3100     0D78  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  3101     0D79  2D7B               	goto	u1611
  3102     0D7A  2D7C               	goto	u1610
  3103     0D7B                     u1611:
  3104     0D7B  2D6F               	goto	l1944
  3105     0D7C                     u1610:
  3106     0D7C                     l1950:
  3107     0D7C  3001               	movlw	1
  3108     0D7D                     u1625:
  3109     0D7D  35A5               	lslf	___lwdiv@quotient^(0+128),f
  3110     0D7E  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3111     0D7F  0B89               	decfsz	9,f
  3112     0D80  2D7D               	goto	u1625
  3113     0D81  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3114     0D82  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3115     0D83  1D03               	skipz
  3116     0D84  2D87               	goto	u1635
  3117     0D85  0820               	movf	___lwdiv@divisor^(0+128),w
  3118     0D86  0222               	subwf	___lwdiv@dividend^(0+128),w
  3119     0D87                     u1635:
  3120     0D87  1C03               	skipc
  3121     0D88  2D8A               	goto	u1631
  3122     0D89  2D8B               	goto	u1630
  3123     0D8A                     u1631:
  3124     0D8A  2D90               	goto	l1956
  3125     0D8B                     u1630:
  3126     0D8B                     l1952:
  3127     0D8B  0820               	movf	___lwdiv@divisor^(0+128),w
  3128     0D8C  02A2               	subwf	___lwdiv@dividend^(0+128),f
  3129     0D8D  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3130     0D8E  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  3131     0D8F                     l1954:
  3132     0D8F  1425               	bsf	___lwdiv@quotient^(0+128),0
  3133     0D90                     l1956:
  3134     0D90  3001               	movlw	1
  3135     0D91                     u1645:
  3136     0D91  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  3137     0D92  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  3138     0D93  0B89               	decfsz	9,f
  3139     0D94  2D91               	goto	u1645
  3140     0D95                     l1958:
  3141     0D95  3001               	movlw	1
  3142     0D96  02A7               	subwf	___lwdiv@counter^(0+128),f
  3143     0D97  1D03               	btfss	3,2
  3144     0D98  2D9A               	goto	u1651
  3145     0D99  2D9B               	goto	u1650
  3146     0D9A                     u1651:
  3147     0D9A  2D7C               	goto	l1950
  3148     0D9B                     u1650:
  3149     0D9B                     l1960:
  3150     0D9B  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  3151     0D9C  00A1               	movwf	(?___lwdiv+1)^(0+128)
  3152     0D9D  0825               	movf	___lwdiv@quotient^(0+128),w
  3153     0D9E  00A0               	movwf	?___lwdiv^(0+128)
  3154     0D9F                     l661:
  3155     0D9F  0008               	return
  3156     0DA0                     __end_of___lwdiv:
  3157                           
  3158                           	psect	text9
  3159     0738                     __ptext9:	
  3160 ;; *************** function _Write_table *****************
  3161 ;; Defined at:
  3162 ;;		line 178 in file "main.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  tx_data         6   53[BANK1 ] unsigned char [6]
  3167 ;;  a               1   59[BANK1 ] unsigned char 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3178 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3179 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3180 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3181 ;;Total ram usage:        9 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 8
  3184 ;; This function calls:
  3185 ;;		_WriteString
  3186 ;;		_sprintf
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192     0738                     _Write_table:	
  3193                           ;psect for function _Write_table
  3194                           
  3195     0738                     l2824:	
  3196                           ;incstack = 0
  3197                           ; Regs used in _Write_table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3198                           
  3199                           
  3200                           ;main.c: 179:     uint8_t tx_data[6], a;;main.c: 181:     tx_buf[0] = rpm;
  3201     0738  0141               	movlb	1	; select bank1
  3202     0739  0866               	movf	_rpm^(0+128),w
  3203     073A  00D3               	movwf	??_Write_table^(0+128)
  3204     073B  01D4               	clrf	(??_Write_table^(0+128)+1)
  3205     073C  0853               	movf	??_Write_table^(0+128),w
  3206     073D  0140               	movlb	0	; select bank0
  3207     073E  00C8               	movwf	_tx_buf
  3208     073F  0141               	movlb	1	; select bank1
  3209     0740  0854               	movf	(??_Write_table+1)^(0+128),w
  3210     0741  0140               	movlb	0	; select bank0
  3211     0742  00C9               	movwf	_tx_buf+1
  3212     0743                     l2826:
  3213                           
  3214                           ;main.c: 182:     tx_buf[1] = deg_table[rpm];
  3215     0743  0141               	movlb	1	; select bank1
  3216     0744  0866               	movf	_rpm^(0+128),w
  3217     0745  3E6D               	addlw	109
  3218     0746  0086               	movwf	6
  3219     0747  0187               	clrf	7
  3220     0748  3023               	movlw	35
  3221     0749  3D87               	addwfc	7,f
  3222     074A  0801               	movf	1,w
  3223     074B  00D3               	movwf	??_Write_table^(0+128)
  3224     074C  01D4               	clrf	(??_Write_table^(0+128)+1)
  3225     074D  0853               	movf	??_Write_table^(0+128),w
  3226     074E  0140               	movlb	0	; select bank0
  3227     074F  00CA               	movwf	_tx_buf+2
  3228     0750  0141               	movlb	1	; select bank1
  3229     0751  0854               	movf	(??_Write_table+1)^(0+128),w
  3230     0752  0140               	movlb	0	; select bank0
  3231     0753  00CB               	movwf	_tx_buf+3
  3232     0754                     l2828:
  3233                           
  3234                           ;main.c: 183:     tx_buf[2] = ig_counter;
  3235     0754  0141               	movlb	1	; select bank1
  3236     0755  0863               	movf	(_ig_counter+1)^(0+128),w
  3237     0756  0140               	movlb	0	; select bank0
  3238     0757  00CD               	movwf	_tx_buf+5
  3239     0758  0141               	movlb	1	; select bank1
  3240     0759  0862               	movf	_ig_counter^(0+128),w
  3241     075A  0140               	movlb	0	; select bank0
  3242     075B  00CC               	movwf	_tx_buf+4
  3243     075C                     l2830:
  3244                           
  3245                           ;main.c: 184:     tx_buf[3] = pu1_2_period_count;
  3246     075C  0141               	movlb	1	; select bank1
  3247     075D  0861               	movf	(_pu1_2_period_count+1)^(0+128),w
  3248     075E  0140               	movlb	0	; select bank0
  3249     075F  00CF               	movwf	_tx_buf+7
  3250     0760  0141               	movlb	1	; select bank1
  3251     0761  0860               	movf	_pu1_2_period_count^(0+128),w
  3252     0762  0140               	movlb	0	; select bank0
  3253     0763  00CE               	movwf	_tx_buf+6
  3254     0764                     l2832:
  3255                           
  3256                           ;main.c: 185:     tx_buf[4] = PORTAbits.RA0;
  3257     0764  080C               	movf	12,w	;volatile
  3258     0765  3901               	andlw	1
  3259     0766  0141               	movlb	1	; select bank1
  3260     0767  00D3               	movwf	??_Write_table^(0+128)
  3261     0768  01D4               	clrf	(??_Write_table^(0+128)+1)
  3262     0769  0853               	movf	??_Write_table^(0+128),w
  3263     076A  0140               	movlb	0	; select bank0
  3264     076B  00D0               	movwf	_tx_buf+8
  3265     076C  0141               	movlb	1	; select bank1
  3266     076D  0854               	movf	(??_Write_table+1)^(0+128),w
  3267     076E  0140               	movlb	0	; select bank0
  3268     076F  00D1               	movwf	_tx_buf+9
  3269     0770                     l2834:
  3270                           
  3271                           ;main.c: 186:     tx_buf[5] = EG_state;
  3272     0770  0141               	movlb	1	; select bank1
  3273     0771  0865               	movf	_EG_state^(0+128),w
  3274     0772  00D3               	movwf	??_Write_table^(0+128)
  3275     0773  01D4               	clrf	(??_Write_table^(0+128)+1)
  3276     0774  0853               	movf	??_Write_table^(0+128),w
  3277     0775  0140               	movlb	0	; select bank0
  3278     0776  00D2               	movwf	_tx_buf+10
  3279     0777  0141               	movlb	1	; select bank1
  3280     0778  0854               	movf	(??_Write_table+1)^(0+128),w
  3281     0779  0140               	movlb	0	; select bank0
  3282     077A  00D3               	movwf	_tx_buf+11
  3283     077B                     l2836:
  3284                           
  3285                           ;main.c: 187:     for (a = 0; a <= 5; a++) {
  3286     077B  0141               	movlb	1	; select bank1
  3287     077C  01DB               	clrf	Write_table@a^(0+128)
  3288     077D                     l2842:
  3289                           
  3290                           ;main.c: 188:         sprintf(tx_data, "%d,", tx_buf[a]);
  3291     077D  3012               	movlw	low (STR_1| (0+32768))
  3292     077E  00C1               	movwf	sprintf@fmt^(0+128)
  3293     077F  3090               	movlw	high (STR_1| (0+32768))
  3294     0780  00C2               	movwf	(sprintf@fmt^(0+128)+1)
  3295     0781  355B               	lslf	Write_table@a^(0+128),w
  3296     0782  3E48               	addlw	(low (_tx_buf| 0))& (0+255)
  3297     0783  0086               	movwf	6
  3298     0784  0187               	clrf	7
  3299     0785  3F40               	moviw [0]fsr1
  3300     0786  00C3               	movwf	(?_sprintf^(0+128)+2)
  3301     0787  3F41               	moviw [1]fsr1
  3302     0788  00C4               	movwf	((?_sprintf+1)^(0+128)+2)
  3303     0789  30D5               	movlw	(low (Write_table@tx_data| 0))& (0+255)
  3304     078A  318C  2473  3187   	fcall	_sprintf
  3305     078D                     l2844:
  3306                           
  3307                           ;main.c: 189:         WriteString(tx_data);
  3308     078D  30D5               	movlw	low Write_table@tx_data
  3309     078E  0141               	movlb	1	; select bank1
  3310     078F  00A1               	movwf	WriteString@str^(0+128)
  3311     0790  3000               	movlw	high Write_table@tx_data
  3312     0791  00A2               	movwf	(WriteString@str+1)^(0+128)
  3313     0792  318C  243E  3187   	fcall	_WriteString
  3314     0795                     l2846:
  3315                           
  3316                           ;main.c: 190:     }
  3317     0795  3001               	movlw	1
  3318     0796  0141               	movlb	1	; select bank1
  3319     0797  00D3               	movwf	??_Write_table^(0+128)
  3320     0798  0853               	movf	??_Write_table^(0+128),w
  3321     0799  07DB               	addwf	Write_table@a^(0+128),f
  3322     079A                     l2848:
  3323     079A  3006               	movlw	6
  3324     079B  025B               	subwf	Write_table@a^(0+128),w
  3325     079C  1C03               	skipc
  3326     079D  2F9F               	goto	u2601
  3327     079E  2FA0               	goto	u2600
  3328     079F                     u2601:
  3329     079F  2F7D               	goto	l2842
  3330     07A0                     u2600:
  3331     07A0                     l2850:
  3332                           
  3333                           ;main.c: 191:     WriteString("\r\n");
  3334     07A0  301E               	movlw	low (STR_2| (0+32768))
  3335     07A1  00A1               	movwf	WriteString@str^(0+128)
  3336     07A2  3090               	movlw	high (STR_2| (0+32768))
  3337     07A3  00A2               	movwf	(WriteString@str^(0+128)+1)
  3338     07A4  318C  243E  3187   	fcall	_WriteString
  3339     07A7                     l215:
  3340     07A7  0008               	return
  3341     07A8                     __end_of_Write_table:
  3342                           
  3343                           	psect	text10
  3344     0C73                     __ptext10:	
  3345 ;; *************** function _sprintf *****************
  3346 ;; Defined at:
  3347 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  s               1    wreg     PTR unsigned char 
  3350 ;;		 -> Write_table@tx_data(6), 
  3351 ;;  fmt             2   33[BANK1 ] PTR const unsigned char 
  3352 ;;		 -> STR_1(4), 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  s               1   39[BANK1 ] PTR unsigned char 
  3355 ;;		 -> Write_table@tx_data(6), 
  3356 ;;  f              11   40[BANK1 ] struct _IO_FILE
  3357 ;;  ret             2    0        int 
  3358 ;;  ap              1   38[BANK1 ] PTR void [1]
  3359 ;;		 -> ?_sprintf(2), 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  2   33[BANK1 ] int 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3369 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;Total ram usage:       18 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 7
  3376 ;; This function calls:
  3377 ;;		_vfprintf
  3378 ;; This function is called by:
  3379 ;;		_Write_table
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383     0C73                     _sprintf:	
  3384                           ;psect for function _sprintf
  3385                           
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3389                           ;sprintf@s stored from wreg
  3390     0C73  0141               	movlb	1	; select bank1
  3391     0C74  00C7               	movwf	sprintf@s^(0+128)
  3392     0C75                     l2590:
  3393     0C75  30C3               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3394     0C76  00C6               	movwf	sprintf@ap^(0+128)
  3395     0C77  0847               	movf	sprintf@s^(0+128),w
  3396     0C78  00C8               	movwf	sprintf@f^(0+128)
  3397     0C79                     l2592:
  3398     0C79  01CA               	clrf	(sprintf@f^(0+128)+2)
  3399     0C7A  01CB               	clrf	((sprintf@f+1)^(0+128)+2)
  3400     0C7B                     l2594:
  3401     0C7B  01D1               	clrf	(sprintf@f^(0+128)+9)
  3402     0C7C  01D2               	clrf	((sprintf@f+1)^(0+128)+9)
  3403     0C7D                     l2596:
  3404     0C7D  0842               	movf	(sprintf@fmt+1)^(0+128),w
  3405     0C7E  00BB               	movwf	(vfprintf@fmt+1)^(0+128)
  3406     0C7F  0841               	movf	sprintf@fmt^(0+128),w
  3407     0C80  00BA               	movwf	vfprintf@fmt^(0+128)
  3408     0C81  30C6               	movlw	(low (sprintf@ap| 0))& (0+255)
  3409     0C82  00BC               	movwf	vfprintf@ap^(0+128)
  3410     0C83  30C8               	movlw	(low (sprintf@f| 0))& (0+255)
  3411     0C84  318C  2457  318C   	fcall	_vfprintf
  3412     0C87                     l2598:
  3413     0C87  0141               	movlb	1	; select bank1
  3414     0C88  084A               	movf	(sprintf@f^(0+128)+2),w
  3415     0C89  0747               	addwf	sprintf@s^(0+128),w
  3416     0C8A  00C5               	movwf	??_sprintf^(0+128)
  3417     0C8B  0845               	movf	??_sprintf^(0+128),w
  3418     0C8C  0086               	movwf	6
  3419     0C8D  0187               	clrf	7
  3420     0C8E  0181               	clrf	1
  3421     0C8F                     l844:
  3422     0C8F  0008               	return
  3423     0C90                     __end_of_sprintf:
  3424                           
  3425                           	psect	text11
  3426     0C57                     __ptext11:	
  3427 ;; *************** function _vfprintf *****************
  3428 ;; Defined at:
  3429 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  fp              1    wreg     PTR struct _IO_FILE
  3432 ;;		 -> sprintf@f(11), 
  3433 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  3434 ;;		 -> STR_1(4), 
  3435 ;;  ap              1   28[BANK1 ] PTR PTR void 
  3436 ;;		 -> sprintf@ap(1), 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  3439 ;;		 -> sprintf@f(11), 
  3440 ;;  cfmt            2   31[BANK1 ] PTR unsigned char 
  3441 ;;		 -> STR_1(4), 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2   26[BANK1 ] int 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3451 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;Total ram usage:        7 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 6
  3458 ;; This function calls:
  3459 ;;		_vfpfcnvrt
  3460 ;; This function is called by:
  3461 ;;		_sprintf
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465     0C57                     _vfprintf:	
  3466                           ;psect for function _vfprintf
  3467                           
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3471                           ;vfprintf@fp stored from wreg
  3472     0C57  0141               	movlb	1	; select bank1
  3473     0C58  00BE               	movwf	vfprintf@fp^(0+128)
  3474     0C59                     l2580:
  3475                           
  3476                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3477     0C59  083B               	movf	(vfprintf@fmt+1)^(0+128),w
  3478     0C5A  00C0               	movwf	(vfprintf@cfmt+1)^(0+128)
  3479     0C5B  083A               	movf	vfprintf@fmt^(0+128),w
  3480     0C5C  00BF               	movwf	vfprintf@cfmt^(0+128)
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3483     0C5D  2C66               	goto	l2584
  3484     0C5E                     l2582:
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3487     0C5E  30BF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3488     0C5F  00AB               	movwf	vfpfcnvrt@fmt^(0+128)
  3489     0C60  083C               	movf	vfprintf@ap^(0+128),w
  3490     0C61  00AC               	movwf	vfpfcnvrt@ap^(0+128)
  3491     0C62  083E               	movf	vfprintf@fp^(0+128),w
  3492     0C63  318F  2710  318C   	fcall	_vfpfcnvrt
  3493     0C66                     l2584:
  3494                           
  3495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3496     0C66  0141               	movlb	1	; select bank1
  3497     0C67  083F               	movf	vfprintf@cfmt^(0+128),w
  3498     0C68  0084               	movwf	4
  3499     0C69  0840               	movf	(vfprintf@cfmt+1)^(0+128),w
  3500     0C6A  0085               	movwf	5
  3501     0C6B  0012               	moviw fsr0++
  3502     0C6C  1D03               	btfss	3,2
  3503     0C6D  2C6F               	goto	u2421
  3504     0C6E  2C70               	goto	u2420
  3505     0C6F                     u2421:
  3506     0C6F  2C5E               	goto	l2582
  3507     0C70                     u2420:
  3508     0C70                     l2586:
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3511     0C70  01BA               	clrf	?_vfprintf^(0+128)
  3512     0C71  01BB               	clrf	(?_vfprintf+1)^(0+128)
  3513     0C72                     l888:
  3514     0C72  0008               	return
  3515     0C73                     __end_of_vfprintf:
  3516                           
  3517                           	psect	text12
  3518     0F10                     __ptext12:	
  3519 ;; *************** function _vfpfcnvrt *****************
  3520 ;; Defined at:
  3521 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  fp              1    wreg     PTR struct _IO_FILE
  3524 ;;		 -> sprintf@f(11), 
  3525 ;;  fmt             1   11[BANK1 ] PTR PTR unsigned char 
  3526 ;;		 -> vfprintf@cfmt(2), 
  3527 ;;  ap              1   12[BANK1 ] PTR PTR void 
  3528 ;;		 -> sprintf@ap(1), 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  fp              1   18[BANK1 ] PTR struct _IO_FILE
  3531 ;;		 -> sprintf@f(11), 
  3532 ;;  convarg         4   21[BANK1 ] struct .
  3533 ;;  cp              2   19[BANK1 ] PTR unsigned char 
  3534 ;;		 -> STR_1(4), 
  3535 ;;  c               1   25[BANK1 ] unsigned char 
  3536 ;;  done            1   17[BANK1 ] _Bool 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3546 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;Total ram usage:       15 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 5
  3553 ;; This function calls:
  3554 ;;		___awdiv
  3555 ;;		___awmod
  3556 ;;		_abs
  3557 ;;		_fputc
  3558 ;; This function is called by:
  3559 ;;		_vfprintf
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563     0F10                     _vfpfcnvrt:	
  3564                           ;psect for function _vfpfcnvrt
  3565                           
  3566                           
  3567                           ;incstack = 0
  3568                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3569                           ;vfpfcnvrt@fp stored from wreg
  3570     0F10  0141               	movlb	1	; select bank1
  3571     0F11  00B2               	movwf	vfpfcnvrt@fp^(0+128)
  3572     0F12                     l2524:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3575     0F12  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3576     0F13  0086               	movwf	6
  3577     0F14  0187               	clrf	7
  3578     0F15  3F40               	moviw [0]fsr1
  3579     0F16  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3580     0F17  3F41               	moviw [1]fsr1
  3581     0F18  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3582     0F19  082D               	movf	??_vfpfcnvrt^(0+128),w
  3583     0F1A  0084               	movwf	4
  3584     0F1B  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3585     0F1C  0085               	movwf	5
  3586     0F1D  0012               	moviw fsr0++
  3587     0F1E  3A25               	xorlw	37
  3588     0F1F  1D03               	btfss	3,2
  3589     0F20  2F22               	goto	u2311
  3590     0F21  2F23               	goto	u2310
  3591     0F22                     u2311:
  3592     0F22  2FE7               	goto	l2570
  3593     0F23                     u2310:
  3594     0F23                     l2526:
  3595                           
  3596                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3597     0F23  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3598     0F24  0086               	movwf	6
  3599     0F25  0187               	clrf	7
  3600     0F26  3001               	movlw	1
  3601     0F27  0781               	addwf	1,f
  3602     0F28  3141               	addfsr 1,1
  3603     0F29  1803               	skipnc
  3604     0F2A  0A81               	incf	1,f
  3605     0F2B                     l2528:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3608     0F2B  01DC               	clrf	_width^(0+128)
  3609     0F2C  01DD               	clrf	(_width+1)^(0+128)
  3610     0F2D  1003               	clrc
  3611     0F2E  3000               	movlw	0
  3612     0F2F  1803               	btfsc	3,0
  3613     0F30  3001               	movlw	1
  3614     0F31  00E4               	movwf	_flags^(0+128)
  3615     0F32                     l2530:
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3618     0F32  30FF               	movlw	255
  3619     0F33  00DE               	movwf	_prec^(0+128)
  3620     0F34  30FF               	movlw	255
  3621     0F35  00DF               	movwf	(_prec^(0+128)+1)
  3622     0F36                     l2532:
  3623                           
  3624                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3625     0F36  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3626     0F37  0086               	movwf	6
  3627     0F38  0187               	clrf	7
  3628     0F39  3F40               	moviw [0]fsr1
  3629     0F3A  00B3               	movwf	vfpfcnvrt@cp^(0+128)
  3630     0F3B  3F41               	moviw [1]fsr1
  3631     0F3C  00B4               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  3632     0F3D                     l2534:
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3635     0F3D  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3636     0F3E  0084               	movwf	4
  3637     0F3F  0834               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3638     0F40  0085               	movwf	5
  3639     0F41  0012               	moviw fsr0++
  3640     0F42  3A64               	xorlw	100
  3641     0F43  1903               	btfsc	3,2
  3642     0F44  2F46               	goto	u2321
  3643     0F45  2F47               	goto	u2320
  3644     0F46                     u2321:
  3645     0F46  2F51               	goto	l2538
  3646     0F47                     u2320:
  3647     0F47                     l2536:
  3648     0F47  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3649     0F48  0084               	movwf	4
  3650     0F49  0834               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3651     0F4A  0085               	movwf	5
  3652     0F4B  0012               	moviw fsr0++
  3653     0F4C  3A69               	xorlw	105
  3654     0F4D  1D03               	btfss	3,2
  3655     0F4E  2F50               	goto	u2331
  3656     0F4F  2F51               	goto	u2330
  3657     0F50                     u2331:
  3658     0F50  2FDD               	goto	l2566
  3659     0F51                     u2330:
  3660     0F51                     l2538:
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3663     0F51  082C               	movf	vfpfcnvrt@ap^(0+128),w
  3664     0F52  0086               	movwf	6
  3665     0F53  0187               	clrf	7
  3666     0F54  0801               	movf	1,w
  3667     0F55  0084               	movwf	4
  3668     0F56  0185               	clrf	5
  3669     0F57  3002               	movlw	2
  3670     0F58  0781               	addwf	1,f
  3671     0F59  3F00               	moviw [0]fsr0
  3672     0F5A  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  3673     0F5B  3F01               	moviw [1]fsr0
  3674     0F5C  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3675     0F5D                     l2540:
  3676                           
  3677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3678     0F5D  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3679     0F5E  3E01               	addlw	1
  3680     0F5F  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3681     0F60  3000               	movlw	0
  3682     0F61  3D34               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  3683     0F62  00AE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  3684     0F63  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3685     0F64  0086               	movwf	6
  3686     0F65  0187               	clrf	7
  3687     0F66  082D               	movf	??_vfpfcnvrt^(0+128),w
  3688     0F67  3FC0               	movwi [0]fsr1
  3689     0F68  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3690     0F69  3FC1               	movwi [1]fsr1
  3691     0F6A                     l2542:
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3694     0F6A  3020               	movlw	32
  3695     0F6B  00B9               	movwf	vfpfcnvrt@c^(0+128)
  3696     0F6C                     l2544:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3699     0F6C  1BB6               	btfsc	(vfpfcnvrt@convarg+1)^(0+128),7
  3700     0F6D  2F6F               	goto	u2341
  3701     0F6E  2F71               	goto	u2340
  3702     0F6F                     u2341:
  3703     0F6F  3001               	movlw	1
  3704     0F70  2F72               	goto	u2350
  3705     0F71                     u2340:
  3706     0F71  3000               	movlw	0
  3707     0F72                     u2350:
  3708     0F72  00B1               	movwf	vfpfcnvrt@done^(0+128)
  3709     0F73                     l2546:
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3712     0F73  3001               	movlw	1
  3713     0F74  02B9               	subwf	vfpfcnvrt@c^(0+128),f
  3714     0F75  0839               	movf	vfpfcnvrt@c^(0+128),w
  3715     0F76  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3716     0F77  0086               	movwf	6
  3717     0F78  3001               	movlw	1	; select bank2/3
  3718     0F79  0087               	movwf	7
  3719     0F7A  300A               	movlw	10
  3720     0F7B  00A0               	movwf	___awmod@divisor^(0+128)
  3721     0F7C  3000               	movlw	0
  3722     0F7D  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  3723     0F7E  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3724     0F7F  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  3725     0F80  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3726     0F81  00A2               	movwf	___awmod@dividend^(0+128)
  3727     0F82  318D  25F2  318F   	fcall	___awmod
  3728     0F85  0141               	movlb	1	; select bank1
  3729     0F86  0821               	movf	(?___awmod+1)^(0+128),w
  3730     0F87  00A8               	movwf	(abs@a+1)^(0+128)
  3731     0F88  0820               	movf	?___awmod^(0+128),w
  3732     0F89  00A7               	movwf	abs@a^(0+128)
  3733     0F8A  318C  2415  318F   	fcall	_abs
  3734     0F8D  0141               	movlb	1	; select bank1
  3735     0F8E  0827               	movf	?_abs^(0+128),w
  3736     0F8F  3E30               	addlw	48
  3737     0F90  0081               	movwf	1
  3738     0F91                     l2548:
  3739                           
  3740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3741     0F91  300A               	movlw	10
  3742     0F92  00A0               	movwf	___awdiv@divisor^(0+128)
  3743     0F93  3000               	movlw	0
  3744     0F94  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3745     0F95  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3746     0F96  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3747     0F97  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3748     0F98  00A2               	movwf	___awdiv@dividend^(0+128)
  3749     0F99  318E  2646  318F   	fcall	___awdiv
  3750     0F9C  0141               	movlb	1	; select bank1
  3751     0F9D  0821               	movf	(?___awdiv+1)^(0+128),w
  3752     0F9E  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3753     0F9F  0820               	movf	?___awdiv^(0+128),w
  3754     0FA0  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  3755     0FA1                     l2550:
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3758     0FA1  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3759     0FA2  0436               	iorwf	(vfpfcnvrt@convarg+1)^(0+128),w
  3760     0FA3  1903               	btfsc	3,2
  3761     0FA4  2FA6               	goto	u2361
  3762     0FA5  2FA7               	goto	u2360
  3763     0FA6                     u2361:
  3764     0FA6  2FAC               	goto	l2554
  3765     0FA7                     u2360:
  3766     0FA7                     l2552:
  3767     0FA7  0839               	movf	vfpfcnvrt@c^(0+128),w
  3768     0FA8  1D03               	btfss	3,2
  3769     0FA9  2FAB               	goto	u2371
  3770     0FAA  2FAC               	goto	u2370
  3771     0FAB                     u2371:
  3772     0FAB  2F73               	goto	l2546
  3773     0FAC                     u2370:
  3774     0FAC                     l2554:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3777     0FAC  0839               	movf	vfpfcnvrt@c^(0+128),w
  3778     0FAD  1903               	btfsc	3,2
  3779     0FAE  2FB0               	goto	u2381
  3780     0FAF  2FB1               	goto	u2380
  3781     0FB0                     u2381:
  3782     0FB0  2FD6               	goto	l2564
  3783     0FB1                     u2380:
  3784     0FB1                     l2556:
  3785     0FB1  0831               	movf	vfpfcnvrt@done^(0+128),w
  3786     0FB2  1903               	btfsc	3,2
  3787     0FB3  2FB5               	goto	u2391
  3788     0FB4  2FB6               	goto	u2390
  3789     0FB5                     u2391:
  3790     0FB5  2FD6               	goto	l2564
  3791     0FB6                     u2390:
  3792     0FB6                     l2558:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3795     0FB6  3001               	movlw	1
  3796     0FB7  02B9               	subwf	vfpfcnvrt@c^(0+128),f
  3797     0FB8  0839               	movf	vfpfcnvrt@c^(0+128),w
  3798     0FB9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3799     0FBA  0086               	movwf	6
  3800     0FBB  3001               	movlw	1	; select bank2/3
  3801     0FBC  0087               	movwf	7
  3802     0FBD  302D               	movlw	45
  3803     0FBE  0081               	movwf	1
  3804     0FBF  2FD6               	goto	l2564
  3805     0FC0                     l2560:
  3806                           
  3807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3808     0FC0  0839               	movf	vfpfcnvrt@c^(0+128),w
  3809     0FC1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3810     0FC2  0086               	movwf	6
  3811     0FC3  3001               	movlw	1	; select bank2/3
  3812     0FC4  0087               	movwf	7
  3813     0FC5  0801               	movf	1,w
  3814     0FC6  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3815     0FC7  01AE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  3816     0FC8  082D               	movf	??_vfpfcnvrt^(0+128),w
  3817     0FC9  00A0               	movwf	fputc@c^(0+128)
  3818     0FCA  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3819     0FCB  00A1               	movwf	(fputc@c+1)^(0+128)
  3820     0FCC  0832               	movf	vfpfcnvrt@fp^(0+128),w
  3821     0FCD  00A2               	movwf	fputc@fp^(0+128)
  3822     0FCE  318D  25A0  318F   	fcall	_fputc
  3823     0FD1                     l2562:
  3824     0FD1  3001               	movlw	1
  3825     0FD2  0141               	movlb	1	; select bank1
  3826     0FD3  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3827     0FD4  082D               	movf	??_vfpfcnvrt^(0+128),w
  3828     0FD5  07B9               	addwf	vfpfcnvrt@c^(0+128),f
  3829     0FD6                     l2564:
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3832     0FD6  3020               	movlw	32
  3833     0FD7  0639               	xorwf	vfpfcnvrt@c^(0+128),w
  3834     0FD8  1D03               	btfss	3,2
  3835     0FD9  2FDB               	goto	u2401
  3836     0FDA  2FDC               	goto	u2400
  3837     0FDB                     u2401:
  3838     0FDB  2FC0               	goto	l2560
  3839     0FDC                     u2400:
  3840     0FDC  2FFF               	goto	l882
  3841     0FDD                     l2566:
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3844     0FDD  0141               	movlb	1	; select bank1
  3845     0FDE  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3846     0FDF  0086               	movwf	6
  3847     0FE0  0187               	clrf	7
  3848     0FE1  3001               	movlw	1
  3849     0FE2  0781               	addwf	1,f
  3850     0FE3  3141               	addfsr 1,1
  3851     0FE4  1803               	skipnc
  3852     0FE5  0A81               	incf	1,f
  3853     0FE6  2FFF               	goto	l882
  3854     0FE7                     l2570:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3857     0FE7  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3858     0FE8  0086               	movwf	6
  3859     0FE9  0187               	clrf	7
  3860     0FEA  3F40               	moviw [0]fsr1
  3861     0FEB  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3862     0FEC  3F41               	moviw [1]fsr1
  3863     0FED  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3864     0FEE  082D               	movf	??_vfpfcnvrt^(0+128),w
  3865     0FEF  0084               	movwf	4
  3866     0FF0  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3867     0FF1  0085               	movwf	5
  3868     0FF2  0800               	movf	0,w	;code access
  3869     0FF3  00AF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3870     0FF4  01B0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3871     0FF5  082F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3872     0FF6  00A0               	movwf	fputc@c^(0+128)
  3873     0FF7  0830               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3874     0FF8  00A1               	movwf	(fputc@c+1)^(0+128)
  3875     0FF9  0832               	movf	vfpfcnvrt@fp^(0+128),w
  3876     0FFA  00A2               	movwf	fputc@fp^(0+128)
  3877     0FFB  318D  25A0  318F   	fcall	_fputc
  3878     0FFE  2FDD               	goto	l2566
  3879     0FFF                     l882:
  3880     0FFF  0008               	return
  3881     1000                     __end_of_vfpfcnvrt:
  3882                           
  3883                           	psect	text13
  3884     0DA0                     __ptext13:	
  3885 ;; *************** function _fputc *****************
  3886 ;; Defined at:
  3887 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  c               2    0[BANK1 ] int 
  3890 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3891 ;;		 -> sprintf@f(11), 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  2    0[BANK1 ] int 
  3896 ;; Registers used:
  3897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3903 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3906 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3907 ;;Total ram usage:        8 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 4
  3910 ;; This function calls:
  3911 ;;		_putch
  3912 ;; This function is called by:
  3913 ;;		_vfpfcnvrt
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917     0DA0                     _fputc:	
  3918                           ;psect for function _fputc
  3919                           
  3920     0DA0                     l2508:	
  3921                           ;incstack = 0
  3922                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3923                           
  3924     0DA0  0141               	movlb	1	; select bank1
  3925     0DA1  0822               	movf	fputc@fp^(0+128),w
  3926     0DA2  1903               	btfsc	3,2
  3927     0DA3  2DA5               	goto	u2271
  3928     0DA4  2DA6               	goto	u2270
  3929     0DA5                     u2271:
  3930     0DA5  2DAB               	goto	l2512
  3931     0DA6                     u2270:
  3932     0DA6                     l2510:
  3933     0DA6  0822               	movf	fputc@fp^(0+128),w
  3934     0DA7  1D03               	btfss	3,2
  3935     0DA8  2DAA               	goto	u2281
  3936     0DA9  2DAB               	goto	u2280
  3937     0DAA                     u2281:
  3938     0DAA  2DB0               	goto	l2514
  3939     0DAB                     u2280:
  3940     0DAB                     l2512:
  3941     0DAB  0820               	movf	fputc@c^(0+128),w
  3942     0DAC  3187  27FE  318D   	fcall	_putch
  3943     0DAF  2DF1               	goto	l907
  3944     0DB0                     l2514:
  3945     0DB0  0822               	movf	fputc@fp^(0+128),w
  3946     0DB1  3E09               	addlw	9
  3947     0DB2  0086               	movwf	6
  3948     0DB3  0187               	clrf	7
  3949     0DB4  0016               	moviw fsr1++
  3950     0DB5  0401               	iorwf	1,w
  3951     0DB6  1903               	btfsc	3,2
  3952     0DB7  2DB9               	goto	u2291
  3953     0DB8  2DBA               	goto	u2290
  3954     0DB9                     u2291:
  3955     0DB9  2DD8               	goto	l2518
  3956     0DBA                     u2290:
  3957     0DBA                     l2516:
  3958     0DBA  0822               	movf	fputc@fp^(0+128),w
  3959     0DBB  3E09               	addlw	9
  3960     0DBC  0086               	movwf	6
  3961     0DBD  0187               	clrf	7
  3962     0DBE  3F40               	moviw [0]fsr1
  3963     0DBF  00A3               	movwf	??_fputc^(0+128)
  3964     0DC0  3F41               	moviw [1]fsr1
  3965     0DC1  00A4               	movwf	(??_fputc^(0+128)+1)
  3966     0DC2  0822               	movf	fputc@fp^(0+128),w
  3967     0DC3  3E02               	addlw	2
  3968     0DC4  0086               	movwf	6
  3969     0DC5  0187               	clrf	7
  3970     0DC6  3F40               	moviw [0]fsr1
  3971     0DC7  00A5               	movwf	(??_fputc+2)^(0+128)
  3972     0DC8  3F41               	moviw [1]fsr1
  3973     0DC9  00A6               	movwf	((??_fputc+2)^(0+128)+1)
  3974     0DCA  0826               	movf	(??_fputc+3)^(0+128),w
  3975     0DCB  3A80               	xorlw	128
  3976     0DCC  00A7               	movwf	(??_fputc+4)^(0+128)
  3977     0DCD  0824               	movf	(??_fputc+1)^(0+128),w
  3978     0DCE  3A80               	xorlw	128
  3979     0DCF  0227               	subwf	(??_fputc+4)^(0+128),w
  3980     0DD0  1D03               	skipz
  3981     0DD1  2DD4               	goto	u2305
  3982     0DD2  0823               	movf	??_fputc^(0+128),w
  3983     0DD3  0225               	subwf	(??_fputc+2)^(0+128),w
  3984     0DD4                     u2305:
  3985     0DD4  1803               	skipnc
  3986     0DD5  2DD7               	goto	u2301
  3987     0DD6  2DD8               	goto	u2300
  3988     0DD7                     u2301:
  3989     0DD7  2DF1               	goto	l907
  3990     0DD8                     u2300:
  3991     0DD8                     l2518:
  3992     0DD8  0141               	movlb	1	; select bank1
  3993     0DD9  0822               	movf	fputc@fp^(0+128),w
  3994     0DDA  0086               	movwf	6
  3995     0DDB  0187               	clrf	7
  3996     0DDC  0822               	movf	fputc@fp^(0+128),w
  3997     0DDD  3E02               	addlw	2
  3998     0DDE  0084               	movwf	4
  3999     0DDF  0185               	clrf	5
  4000     0DE0  0800               	movf	0,w
  4001     0DE1  0701               	addwf	1,w
  4002     0DE2  00A3               	movwf	??_fputc^(0+128)
  4003     0DE3  0823               	movf	??_fputc^(0+128),w
  4004     0DE4  0086               	movwf	6
  4005     0DE5  0187               	clrf	7
  4006     0DE6  0820               	movf	fputc@c^(0+128),w
  4007     0DE7  0081               	movwf	1
  4008     0DE8                     l2520:
  4009     0DE8  0822               	movf	fputc@fp^(0+128),w
  4010     0DE9  3E02               	addlw	2
  4011     0DEA  0086               	movwf	6
  4012     0DEB  0187               	clrf	7
  4013     0DEC  3001               	movlw	1
  4014     0DED  0781               	addwf	1,f
  4015     0DEE  3141               	addfsr 1,1
  4016     0DEF  1803               	skipnc
  4017     0DF0  0A81               	incf	1,f
  4018     0DF1                     l907:
  4019     0DF1  0008               	return
  4020     0DF2                     __end_of_fputc:
  4021                           
  4022                           	psect	text14
  4023     07FE                     __ptext14:	
  4024 ;; *************** function _putch *****************
  4025 ;; Defined at:
  4026 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  c               1    wreg     unsigned char 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  c               1    0[COMMON] unsigned char 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; Hardware stack levels required when called: 3
  4047 ;; This function calls:
  4048 ;;		Nothing
  4049 ;; This function is called by:
  4050 ;;		_fputc
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054     07FE                     _putch:	
  4055                           ;psect for function _putch
  4056                           
  4057     07FE                     l918:	
  4058                           ;incstack = 0
  4059                           ; Regs used in _putch: [wreg]
  4060                           
  4061     07FE  0008               	return
  4062     07FF                     __end_of_putch:
  4063                           
  4064                           	psect	text15
  4065     0C15                     __ptext15:	
  4066 ;; *************** function _abs *****************
  4067 ;; Defined at:
  4068 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  a               2    7[BANK1 ] int 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  2    7[BANK1 ] int 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4082 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;Total ram usage:        4 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 3
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_vfpfcnvrt
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096     0C15                     _abs:	
  4097                           ;psect for function _abs
  4098                           
  4099     0C15                     l1812:	
  4100                           ;incstack = 0
  4101                           ; Regs used in _abs: [wreg+status,2+status,0]
  4102                           
  4103     0C15  0141               	movlb	1	; select bank1
  4104     0C16  1BA8               	btfsc	(abs@a+1)^(0+128),7
  4105     0C17  2C19               	goto	u1371
  4106     0C18  2C1A               	goto	u1370
  4107     0C19                     u1371:
  4108     0C19  2C1B               	goto	l1816
  4109     0C1A                     u1370:
  4110     0C1A                     l1814:
  4111     0C1A  2C26               	goto	l895
  4112     0C1B                     l1816:
  4113     0C1B  0927               	comf	abs@a^(0+128),w
  4114     0C1C  00A9               	movwf	??_abs^(0+128)
  4115     0C1D  0928               	comf	(abs@a+1)^(0+128),w
  4116     0C1E  00AA               	movwf	(??_abs^(0+128)+1)
  4117     0C1F  0AA9               	incf	??_abs^(0+128),f
  4118     0C20  1903               	skipnz
  4119     0C21  0AAA               	incf	(??_abs^(0+128)+1),f
  4120     0C22  0829               	movf	??_abs^(0+128),w
  4121     0C23  00A7               	movwf	?_abs^(0+128)
  4122     0C24  082A               	movf	(??_abs+1)^(0+128),w
  4123     0C25  00A8               	movwf	(?_abs+1)^(0+128)
  4124     0C26                     l895:
  4125     0C26  0008               	return
  4126     0C27                     __end_of_abs:
  4127                           
  4128                           	psect	text16
  4129     0DF2                     __ptext16:	
  4130 ;; *************** function ___awmod *****************
  4131 ;; Defined at:
  4132 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  divisor         2    0[BANK1 ] int 
  4135 ;;  dividend        2    2[BANK1 ] int 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  sign            1    6[BANK1 ] unsigned char 
  4138 ;;  counter         1    5[BANK1 ] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  2    0[BANK1 ] int 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4148 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;Total ram usage:        7 bytes
  4153 ;; Hardware stack levels used: 1
  4154 ;; Hardware stack levels required when called: 3
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_vfpfcnvrt
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162     0DF2                     ___awmod:	
  4163                           ;psect for function ___awmod
  4164                           
  4165     0DF2                     l1758:	
  4166                           ;incstack = 0
  4167                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4168                           
  4169     0DF2  0141               	movlb	1	; select bank1
  4170     0DF3  01A6               	clrf	___awmod@sign^(0+128)
  4171     0DF4                     l1760:
  4172     0DF4  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  4173     0DF5  2DF7               	goto	u1241
  4174     0DF6  2DF8               	goto	u1240
  4175     0DF7                     u1241:
  4176     0DF7  2DFF               	goto	l1766
  4177     0DF8                     u1240:
  4178     0DF8                     l1762:
  4179     0DF8  09A2               	comf	___awmod@dividend^(0+128),f
  4180     0DF9  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4181     0DFA  0AA2               	incf	___awmod@dividend^(0+128),f
  4182     0DFB  1903               	skipnz
  4183     0DFC  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4184     0DFD                     l1764:
  4185     0DFD  01A6               	clrf	___awmod@sign^(0+128)
  4186     0DFE  0AA6               	incf	___awmod@sign^(0+128),f
  4187     0DFF                     l1766:
  4188     0DFF  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4189     0E00  2E02               	goto	u1251
  4190     0E01  2E03               	goto	u1250
  4191     0E02                     u1251:
  4192     0E02  2E08               	goto	l1770
  4193     0E03                     u1250:
  4194     0E03                     l1768:
  4195     0E03  09A0               	comf	___awmod@divisor^(0+128),f
  4196     0E04  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  4197     0E05  0AA0               	incf	___awmod@divisor^(0+128),f
  4198     0E06  1903               	skipnz
  4199     0E07  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  4200     0E08                     l1770:
  4201     0E08  0820               	movf	___awmod@divisor^(0+128),w
  4202     0E09  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  4203     0E0A  1903               	btfsc	3,2
  4204     0E0B  2E0D               	goto	u1261
  4205     0E0C  2E0E               	goto	u1260
  4206     0E0D                     u1261:
  4207     0E0D  2E37               	goto	l1788
  4208     0E0E                     u1260:
  4209     0E0E                     l1772:
  4210     0E0E  01A5               	clrf	___awmod@counter^(0+128)
  4211     0E0F  0AA5               	incf	___awmod@counter^(0+128),f
  4212     0E10  2E1A               	goto	l1778
  4213     0E11                     l1774:
  4214     0E11  3001               	movlw	1
  4215     0E12                     u1275:
  4216     0E12  35A0               	lslf	___awmod@divisor^(0+128),f
  4217     0E13  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  4218     0E14  0B89               	decfsz	9,f
  4219     0E15  2E12               	goto	u1275
  4220     0E16                     l1776:
  4221     0E16  3001               	movlw	1
  4222     0E17  00A4               	movwf	??___awmod^(0+128)
  4223     0E18  0824               	movf	??___awmod^(0+128),w
  4224     0E19  07A5               	addwf	___awmod@counter^(0+128),f
  4225     0E1A                     l1778:
  4226     0E1A  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4227     0E1B  2E1D               	goto	u1281
  4228     0E1C  2E1E               	goto	u1280
  4229     0E1D                     u1281:
  4230     0E1D  2E11               	goto	l1774
  4231     0E1E                     u1280:
  4232     0E1E                     l1780:
  4233     0E1E  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4234     0E1F  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  4235     0E20  1D03               	skipz
  4236     0E21  2E24               	goto	u1295
  4237     0E22  0820               	movf	___awmod@divisor^(0+128),w
  4238     0E23  0222               	subwf	___awmod@dividend^(0+128),w
  4239     0E24                     u1295:
  4240     0E24  1C03               	skipc
  4241     0E25  2E27               	goto	u1291
  4242     0E26  2E28               	goto	u1290
  4243     0E27                     u1291:
  4244     0E27  2E2C               	goto	l1784
  4245     0E28                     u1290:
  4246     0E28                     l1782:
  4247     0E28  0820               	movf	___awmod@divisor^(0+128),w
  4248     0E29  02A2               	subwf	___awmod@dividend^(0+128),f
  4249     0E2A  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4250     0E2B  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
  4251     0E2C                     l1784:
  4252     0E2C  3001               	movlw	1
  4253     0E2D                     u1305:
  4254     0E2D  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
  4255     0E2E  0CA0               	rrf	___awmod@divisor^(0+128),f
  4256     0E2F  0B89               	decfsz	9,f
  4257     0E30  2E2D               	goto	u1305
  4258     0E31                     l1786:
  4259     0E31  3001               	movlw	1
  4260     0E32  02A5               	subwf	___awmod@counter^(0+128),f
  4261     0E33  1D03               	btfss	3,2
  4262     0E34  2E36               	goto	u1311
  4263     0E35  2E37               	goto	u1310
  4264     0E36                     u1311:
  4265     0E36  2E1E               	goto	l1780
  4266     0E37                     u1310:
  4267     0E37                     l1788:
  4268     0E37  0826               	movf	___awmod@sign^(0+128),w
  4269     0E38  1903               	btfsc	3,2
  4270     0E39  2E3B               	goto	u1321
  4271     0E3A  2E3C               	goto	u1320
  4272     0E3B                     u1321:
  4273     0E3B  2E41               	goto	l1792
  4274     0E3C                     u1320:
  4275     0E3C                     l1790:
  4276     0E3C  09A2               	comf	___awmod@dividend^(0+128),f
  4277     0E3D  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4278     0E3E  0AA2               	incf	___awmod@dividend^(0+128),f
  4279     0E3F  1903               	skipnz
  4280     0E40  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4281     0E41                     l1792:
  4282     0E41  0823               	movf	(___awmod@dividend+1)^(0+128),w
  4283     0E42  00A1               	movwf	(?___awmod+1)^(0+128)
  4284     0E43  0822               	movf	___awmod@dividend^(0+128),w
  4285     0E44  00A0               	movwf	?___awmod^(0+128)
  4286     0E45                     l547:
  4287     0E45  0008               	return
  4288     0E46                     __end_of___awmod:
  4289                           
  4290                           	psect	text17
  4291     0E46                     __ptext17:	
  4292 ;; *************** function ___awdiv *****************
  4293 ;; Defined at:
  4294 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  divisor         2    0[BANK1 ] int 
  4297 ;;  dividend        2    2[BANK1 ] int 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  quotient        2    7[BANK1 ] int 
  4300 ;;  sign            1    6[BANK1 ] unsigned char 
  4301 ;;  counter         1    5[BANK1 ] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  2    0[BANK1 ] int 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2, status,0
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4311 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;Total ram usage:        9 bytes
  4316 ;; Hardware stack levels used: 1
  4317 ;; Hardware stack levels required when called: 3
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_vfpfcnvrt
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325     0E46                     ___awdiv:	
  4326                           ;psect for function ___awdiv
  4327                           
  4328     0E46                     l1714:	
  4329                           ;incstack = 0
  4330                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4331                           
  4332     0E46  0141               	movlb	1	; select bank1
  4333     0E47  01A6               	clrf	___awdiv@sign^(0+128)
  4334     0E48                     l1716:
  4335     0E48  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4336     0E49  2E4B               	goto	u1141
  4337     0E4A  2E4C               	goto	u1140
  4338     0E4B                     u1141:
  4339     0E4B  2E53               	goto	l1722
  4340     0E4C                     u1140:
  4341     0E4C                     l1718:
  4342     0E4C  09A0               	comf	___awdiv@divisor^(0+128),f
  4343     0E4D  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4344     0E4E  0AA0               	incf	___awdiv@divisor^(0+128),f
  4345     0E4F  1903               	skipnz
  4346     0E50  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4347     0E51                     l1720:
  4348     0E51  01A6               	clrf	___awdiv@sign^(0+128)
  4349     0E52  0AA6               	incf	___awdiv@sign^(0+128),f
  4350     0E53                     l1722:
  4351     0E53  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4352     0E54  2E56               	goto	u1151
  4353     0E55  2E57               	goto	u1150
  4354     0E56                     u1151:
  4355     0E56  2E60               	goto	l1728
  4356     0E57                     u1150:
  4357     0E57                     l1724:
  4358     0E57  09A2               	comf	___awdiv@dividend^(0+128),f
  4359     0E58  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4360     0E59  0AA2               	incf	___awdiv@dividend^(0+128),f
  4361     0E5A  1903               	skipnz
  4362     0E5B  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4363     0E5C                     l1726:
  4364     0E5C  3001               	movlw	1
  4365     0E5D  00A4               	movwf	??___awdiv^(0+128)
  4366     0E5E  0824               	movf	??___awdiv^(0+128),w
  4367     0E5F  06A6               	xorwf	___awdiv@sign^(0+128),f
  4368     0E60                     l1728:
  4369     0E60  01A7               	clrf	___awdiv@quotient^(0+128)
  4370     0E61  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  4371     0E62                     l1730:
  4372     0E62  0820               	movf	___awdiv@divisor^(0+128),w
  4373     0E63  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4374     0E64  1903               	btfsc	3,2
  4375     0E65  2E67               	goto	u1161
  4376     0E66  2E68               	goto	u1160
  4377     0E67                     u1161:
  4378     0E67  2E97               	goto	l1750
  4379     0E68                     u1160:
  4380     0E68                     l1732:
  4381     0E68  01A5               	clrf	___awdiv@counter^(0+128)
  4382     0E69  0AA5               	incf	___awdiv@counter^(0+128),f
  4383     0E6A  2E74               	goto	l1738
  4384     0E6B                     l1734:
  4385     0E6B  3001               	movlw	1
  4386     0E6C                     u1175:
  4387     0E6C  35A0               	lslf	___awdiv@divisor^(0+128),f
  4388     0E6D  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4389     0E6E  0B89               	decfsz	9,f
  4390     0E6F  2E6C               	goto	u1175
  4391     0E70                     l1736:
  4392     0E70  3001               	movlw	1
  4393     0E71  00A4               	movwf	??___awdiv^(0+128)
  4394     0E72  0824               	movf	??___awdiv^(0+128),w
  4395     0E73  07A5               	addwf	___awdiv@counter^(0+128),f
  4396     0E74                     l1738:
  4397     0E74  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4398     0E75  2E77               	goto	u1181
  4399     0E76  2E78               	goto	u1180
  4400     0E77                     u1181:
  4401     0E77  2E6B               	goto	l1734
  4402     0E78                     u1180:
  4403     0E78                     l1740:
  4404     0E78  3001               	movlw	1
  4405     0E79                     u1195:
  4406     0E79  35A7               	lslf	___awdiv@quotient^(0+128),f
  4407     0E7A  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  4408     0E7B  0B89               	decfsz	9,f
  4409     0E7C  2E79               	goto	u1195
  4410     0E7D  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4411     0E7E  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4412     0E7F  1D03               	skipz
  4413     0E80  2E83               	goto	u1205
  4414     0E81  0820               	movf	___awdiv@divisor^(0+128),w
  4415     0E82  0222               	subwf	___awdiv@dividend^(0+128),w
  4416     0E83                     u1205:
  4417     0E83  1C03               	skipc
  4418     0E84  2E86               	goto	u1201
  4419     0E85  2E87               	goto	u1200
  4420     0E86                     u1201:
  4421     0E86  2E8C               	goto	l1746
  4422     0E87                     u1200:
  4423     0E87                     l1742:
  4424     0E87  0820               	movf	___awdiv@divisor^(0+128),w
  4425     0E88  02A2               	subwf	___awdiv@dividend^(0+128),f
  4426     0E89  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4427     0E8A  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
  4428     0E8B                     l1744:
  4429     0E8B  1427               	bsf	___awdiv@quotient^(0+128),0
  4430     0E8C                     l1746:
  4431     0E8C  3001               	movlw	1
  4432     0E8D                     u1215:
  4433     0E8D  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
  4434     0E8E  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4435     0E8F  0B89               	decfsz	9,f
  4436     0E90  2E8D               	goto	u1215
  4437     0E91                     l1748:
  4438     0E91  3001               	movlw	1
  4439     0E92  02A5               	subwf	___awdiv@counter^(0+128),f
  4440     0E93  1D03               	btfss	3,2
  4441     0E94  2E96               	goto	u1221
  4442     0E95  2E97               	goto	u1220
  4443     0E96                     u1221:
  4444     0E96  2E78               	goto	l1740
  4445     0E97                     u1220:
  4446     0E97                     l1750:
  4447     0E97  0826               	movf	___awdiv@sign^(0+128),w
  4448     0E98  1903               	btfsc	3,2
  4449     0E99  2E9B               	goto	u1231
  4450     0E9A  2E9C               	goto	u1230
  4451     0E9B                     u1231:
  4452     0E9B  2EA1               	goto	l1754
  4453     0E9C                     u1230:
  4454     0E9C                     l1752:
  4455     0E9C  09A7               	comf	___awdiv@quotient^(0+128),f
  4456     0E9D  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  4457     0E9E  0AA7               	incf	___awdiv@quotient^(0+128),f
  4458     0E9F  1903               	skipnz
  4459     0EA0  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  4460     0EA1                     l1754:
  4461     0EA1  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  4462     0EA2  00A1               	movwf	(?___awdiv+1)^(0+128)
  4463     0EA3  0827               	movf	___awdiv@quotient^(0+128),w
  4464     0EA4  00A0               	movwf	?___awdiv^(0+128)
  4465     0EA5                     l534:
  4466     0EA5  0008               	return
  4467     0EA6                     __end_of___awdiv:
  4468                           
  4469                           	psect	text18
  4470     0C3E                     __ptext18:	
  4471 ;; *************** function _WriteString *****************
  4472 ;; Defined at:
  4473 ;;		line 207 in file "main.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  4476 ;;		 -> STR_2(3), Write_table@tx_data(6), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4488 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;Total ram usage:        3 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 4
  4495 ;; This function calls:
  4496 ;;		_Write_Byte
  4497 ;; This function is called by:
  4498 ;;		_Write_table
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502     0C3E                     _WriteString:	
  4503                           ;psect for function _WriteString
  4504                           
  4505     0C3E                     l2602:	
  4506                           ;incstack = 0
  4507                           ; Regs used in _WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4508                           
  4509                           
  4510                           ;main.c: 208:     while (*str) {
  4511     0C3E  2C4C               	goto	l2608
  4512     0C3F                     l2604:
  4513                           
  4514                           ;main.c: 209:         Write_Byte(*str);
  4515     0C3F  0821               	movf	WriteString@str^(0+128),w
  4516     0C40  0084               	movwf	4
  4517     0C41  0822               	movf	(WriteString@str+1)^(0+128),w
  4518     0C42  0085               	movwf	5
  4519     0C43  0800               	movf	0,w	;code access
  4520     0C44  318B  23F1  318C   	fcall	_Write_Byte
  4521     0C47                     l2606:
  4522                           
  4523                           ;main.c: 210:         str++;
  4524     0C47  3001               	movlw	1
  4525     0C48  0141               	movlb	1	; select bank1
  4526     0C49  07A1               	addwf	WriteString@str^(0+128),f
  4527     0C4A  3000               	movlw	0
  4528     0C4B  3DA2               	addwfc	(WriteString@str+1)^(0+128),f
  4529     0C4C                     l2608:
  4530                           
  4531                           ;main.c: 208:     while (*str) {
  4532     0C4C  0141               	movlb	1	; select bank1
  4533     0C4D  0821               	movf	WriteString@str^(0+128),w
  4534     0C4E  0084               	movwf	4
  4535     0C4F  0822               	movf	(WriteString@str+1)^(0+128),w
  4536     0C50  0085               	movwf	5
  4537     0C51  0012               	moviw fsr0++
  4538     0C52  1D03               	btfss	3,2
  4539     0C53  2C55               	goto	u2431
  4540     0C54  2C56               	goto	u2430
  4541     0C55                     u2431:
  4542     0C55  2C3F               	goto	l2604
  4543     0C56                     u2430:
  4544     0C56                     l227:
  4545     0C56  0008               	return
  4546     0C57                     __end_of_WriteString:
  4547                           
  4548                           	psect	text19
  4549     0BF1                     __ptext19:	
  4550 ;; *************** function _Write_Byte *****************
  4551 ;; Defined at:
  4552 ;;		line 198 in file "main.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  chr             1    wreg     unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  chr             1    0[BANK1 ] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;Total ram usage:        1 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; Hardware stack levels required when called: 3
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_WriteString
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580     0BF1                     _Write_Byte:	
  4581                           ;psect for function _Write_Byte
  4582                           
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in _Write_Byte: [wreg]
  4586                           ;Write_Byte@chr stored from wreg
  4587     0BF1  0141               	movlb	1	; select bank1
  4588     0BF2  00A0               	movwf	Write_Byte@chr^(0+128)
  4589     0BF3                     l2576:
  4590     0BF3                     l218:	
  4591                           ;main.c: 199:     while (!TRMT);
  4592                           
  4593     0BF3  0142               	movlb	2	; select bank2
  4594     0BF4  1C9E               	btfss	30,1	;volatile
  4595     0BF5  2BF7               	goto	u2411
  4596     0BF6  2BF8               	goto	u2410
  4597     0BF7                     u2411:
  4598     0BF7  2BF3               	goto	l218
  4599     0BF8                     u2410:
  4600     0BF8                     l2578:
  4601                           
  4602                           ;main.c: 200:     TX1REG = chr;
  4603     0BF8  0141               	movlb	1	; select bank1
  4604     0BF9  0820               	movf	Write_Byte@chr^(0+128),w
  4605     0BFA  0142               	movlb	2	; select bank2
  4606     0BFB  009A               	movwf	26	;volatile
  4607     0BFC                     l221:
  4608     0BFC  0008               	return
  4609     0BFD                     __end_of_Write_Byte:
  4610                           
  4611                           	psect	intentry
  4612     0004                     __pintentry:	
  4613 ;; *************** function _InterruptManager *****************
  4614 ;; Defined at:
  4615 ;;		line 298 in file "main.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  t1_count        2   12[COMMON] unsigned short 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;Total ram usage:        6 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 2
  4636 ;; This function calls:
  4637 ;;		_ccp1_disable
  4638 ;;		_ccp2_enable
  4639 ;;		_ignition_disable
  4640 ;;		i1___lwdiv
  4641 ;;		i1_calc_map
  4642 ;;		i1_ccp1_enable
  4643 ;;		i1_ccp2_disable
  4644 ;; This function is called by:
  4645 ;;		Interrupt level 1
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649     0004                     _InterruptManager:
  4650                           
  4651                           ;incstack = 0
  4652     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4653                           
  4654                           ; Regs used in _InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4655     0005  3180               	pagesel	$
  4656     0006                     i1l2376:
  4657                           
  4658                           ;main.c: 299:     uint16_t t1_count;;main.c: 301:     if (CCP1IF) {
  4659     0006  014E               	movlb	14	; select bank14
  4660     0007  1F8D               	btfss	13,7	;volatile
  4661     0008  280A               	goto	u201_21
  4662     0009  280B               	goto	u201_20
  4663     000A                     u201_21:
  4664     000A  28F3               	goto	i1l2464
  4665     000B                     u201_20:
  4666     000B                     i1l2378:
  4667                           
  4668                           ;main.c: 302:         if (EG_state == EG_RUN) {
  4669     000B  0141               	movlb	1	; select bank1
  4670     000C  0365               	decf	_EG_state^(0+128),w
  4671     000D  1D03               	btfss	3,2
  4672     000E  2810               	goto	u202_21
  4673     000F  2811               	goto	u202_20
  4674     0010                     u202_21:
  4675     0010  28E4               	goto	i1l2454
  4676     0011                     u202_20:
  4677     0011                     i1l2380:
  4678                           
  4679                           ;main.c: 303:             TMR1ON = 0;
  4680     0011  0144               	movlb	4	; select bank4
  4681     0012  100E               	bcf	14,0	;volatile
  4682     0013                     i1l2382:
  4683                           
  4684                           ;main.c: 304:             TMR1H = 0x00;
  4685     0013  018D               	clrf	13	;volatile
  4686                           
  4687                           ;main.c: 305:             TMR1L = 0x00;
  4688     0014  018C               	clrf	12	;volatile
  4689     0015                     i1l2384:
  4690                           
  4691                           ;main.c: 306:             TMR1ON = 1;
  4692     0015  140E               	bsf	14,0	;volatile
  4693     0016                     i1l2386:
  4694                           
  4695                           ;main.c: 307:             ccp1_disable();
  4696     0016  318B  23BD  3180   	fcall	_ccp1_disable
  4697     0019                     i1l2388:
  4698                           
  4699                           ;main.c: 309:             rpm = (uint8_t) (numerator_rpm / (CCPR1 >> 4));
  4700     0019  0146               	movlb	6	; select bank6
  4701     001A  0E0C               	swapf	12,w	;volatile
  4702     001B  390F               	andlw	15
  4703     001C  00F0               	movwf	i1___lwdiv@divisor
  4704     001D  0E0D               	swapf	13,w	;volatile
  4705     001E  39F0               	andlw	240
  4706     001F  04F0               	iorwf	i1___lwdiv@divisor,f
  4707     0020  0E0D               	swapf	13,w	;volatile
  4708     0021  390F               	andlw	15
  4709     0022  00F1               	movwf	i1___lwdiv@divisor+1
  4710     0023  307C               	movlw	124
  4711     0024  00F2               	movwf	i1___lwdiv@dividend
  4712     0025  3092               	movlw	146
  4713     0026  00F3               	movwf	i1___lwdiv@dividend+1
  4714     0027  318D  2527  3180   	fcall	i1___lwdiv
  4715     002A  0870               	movf	?i1___lwdiv,w
  4716     002B  0141               	movlb	1	; select bank1
  4717     002C  00E6               	movwf	_rpm^(0+128)
  4718     002D                     i1l2390:
  4719                           
  4720                           ;main.c: 311:             if ((rpm > (15))&&(rpm <= (130))) {
  4721     002D  3010               	movlw	16
  4722     002E  0266               	subwf	_rpm^(0+128),w
  4723     002F  1C03               	skipc
  4724     0030  2832               	goto	u203_21
  4725     0031  2833               	goto	u203_20
  4726     0032                     u203_21:
  4727     0032  287E               	goto	i1l2412
  4728     0033                     u203_20:
  4729     0033                     i1l2392:
  4730     0033  3083               	movlw	131
  4731     0034  0266               	subwf	_rpm^(0+128),w
  4732     0035  1803               	skipnc
  4733     0036  2838               	goto	u204_21
  4734     0037  2839               	goto	u204_20
  4735     0038                     u204_21:
  4736     0038  287E               	goto	i1l2412
  4737     0039                     u204_20:
  4738     0039                     i1l2394:
  4739                           
  4740                           ;main.c: 312:                 ig_counter = IG_table[rpm];
  4741     0039  0866               	movf	_rpm^(0+128),w
  4742     003A  0140               	movlb	0	; select bank0
  4743     003B  00C4               	movwf	??_InterruptManager
  4744     003C  01C5               	clrf	??_InterruptManager+1
  4745     003D  35C4               	lslf	??_InterruptManager,f
  4746     003E  0DC5               	rlf	??_InterruptManager+1,f
  4747     003F  3067               	movlw	103
  4748     0040  00C6               	movwf	??_InterruptManager+2
  4749     0041  3022               	movlw	34
  4750     0042  00C7               	movwf	??_InterruptManager+3
  4751     0043  0844               	movf	??_InterruptManager,w
  4752     0044  0746               	addwf	??_InterruptManager+2,w
  4753     0045  0086               	movwf	6
  4754     0046  0845               	movf	??_InterruptManager+1,w
  4755     0047  3D47               	addwfc	??_InterruptManager+3,w
  4756     0048  0087               	movwf	7
  4757     0049  3F40               	moviw [0]fsr1
  4758     004A  0141               	movlb	1	; select bank1
  4759     004B  00E2               	movwf	_ig_counter^(0+128)
  4760     004C  3F41               	moviw [1]fsr1
  4761     004D  00E3               	movwf	(_ig_counter+1)^(0+128)
  4762     004E                     i1l2396:
  4763                           
  4764                           ;main.c: 313:                 LATC2 = (0);
  4765     004E  0140               	movlb	0	; select bank0
  4766     004F  111A               	bcf	26,2	;volatile
  4767     0050                     i1l2398:
  4768                           
  4769                           ;main.c: 314:                 if ((ig_counter - 15) > TMR1) {
  4770     0050  0141               	movlb	1	; select bank1
  4771     0051  0862               	movf	_ig_counter^(0+128),w
  4772     0052  3EF1               	addlw	241
  4773     0053  0140               	movlb	0	; select bank0
  4774     0054  00C4               	movwf	??_InterruptManager
  4775     0055  30FF               	movlw	255
  4776     0056  0141               	movlb	1	; select bank1
  4777     0057  3D63               	addwfc	(_ig_counter+1)^(0+128),w
  4778     0058  0140               	movlb	0	; select bank0
  4779     0059  00C5               	movwf	??_InterruptManager+1
  4780     005A  0845               	movf	??_InterruptManager+1,w
  4781     005B  0144               	movlb	4	; select bank4
  4782     005C  020D               	subwf	13,w	;volatile
  4783     005D  1D03               	skipz
  4784     005E  2863               	goto	u205_25
  4785     005F  0140               	movlb	0	; select bank0
  4786     0060  0844               	movf	??_InterruptManager,w
  4787     0061  0144               	movlb	4	; select bank4
  4788     0062  020C               	subwf	12,w	;volatile
  4789     0063                     u205_25:
  4790     0063  1803               	skipnc
  4791     0064  2866               	goto	u205_21
  4792     0065  2867               	goto	u205_20
  4793     0066                     u205_21:
  4794     0066  2873               	goto	i1l2404
  4795     0067                     u205_20:
  4796     0067                     i1l2400:
  4797                           
  4798                           ;main.c: 315:                     CCPR2 = ig_counter;
  4799     0067  0141               	movlb	1	; select bank1
  4800     0068  0863               	movf	(_ig_counter+1)^(0+128),w
  4801     0069  0146               	movlb	6	; select bank6
  4802     006A  0091               	movwf	17	;volatile
  4803     006B  0141               	movlb	1	; select bank1
  4804     006C  0862               	movf	_ig_counter^(0+128),w
  4805     006D  0146               	movlb	6	; select bank6
  4806     006E  0090               	movwf	16	;volatile
  4807     006F                     i1l2402:
  4808                           
  4809                           ;main.c: 316:                     ccp2_enable();
  4810     006F  318B  23CC  3180   	fcall	_ccp2_enable
  4811                           
  4812                           ;main.c: 317:                 } else {
  4813     0072  2883               	goto	i1l2416
  4814     0073                     i1l2404:
  4815                           
  4816                           ;main.c: 318:                     ccp2_disable();
  4817     0073  318B  23C2  3180   	fcall	i1_ccp2_disable
  4818     0076                     i1l2406:
  4819                           
  4820                           ;main.c: 319:                     LATC1 = (1);
  4821     0076  0140               	movlb	0	; select bank0
  4822     0077  149A               	bsf	26,1	;volatile
  4823     0078                     i1l2408:
  4824                           
  4825                           ;main.c: 320:                     _delay((unsigned long)((60)*(32000000/4000000.0)));
  4826     0078  30A0               	movlw	160
  4827     0079                     u261_27:
  4828     0079  0B89               	decfsz	9,f
  4829     007A  2879               	goto	u261_27
  4830     007B                     i1l2410:
  4831                           
  4832                           ;main.c: 321:                     LATC1 = (0);
  4833     007B  0140               	movlb	0	; select bank0
  4834     007C  109A               	bcf	26,1	;volatile
  4835     007D  2883               	goto	i1l2416
  4836     007E                     i1l2412:
  4837                           
  4838                           ;main.c: 325:                 ccp2_disable();
  4839     007E  318B  23C2  3180   	fcall	i1_ccp2_disable
  4840     0081                     i1l2414:
  4841                           
  4842                           ;main.c: 326:                 LATC2 = (0);
  4843     0081  0140               	movlb	0	; select bank0
  4844     0082  111A               	bcf	26,2	;volatile
  4845     0083                     i1l2416:
  4846                           
  4847                           ;main.c: 330:             if (revlimit_state == REVLIMIT_ENABLE) {
  4848     0083  0140               	movlb	0	; select bank0
  4849     0084  0856               	movf	_revlimit_state,w
  4850     0085  1D03               	btfss	3,2
  4851     0086  2888               	goto	u206_21
  4852     0087  2889               	goto	u206_20
  4853     0088                     u206_21:
  4854     0088  28B7               	goto	i1l2434
  4855     0089                     u206_20:
  4856     0089                     i1l2418:
  4857                           
  4858                           ;main.c: 331:                 if (rpm > (97)) {
  4859     0089  3062               	movlw	98
  4860     008A  0141               	movlb	1	; select bank1
  4861     008B  0266               	subwf	_rpm^(0+128),w
  4862     008C  1C03               	skipc
  4863     008D  288F               	goto	u207_21
  4864     008E  2890               	goto	u207_20
  4865     008F                     u207_21:
  4866     008F  289E               	goto	i1l2424
  4867     0090                     u207_20:
  4868     0090                     i1l2420:
  4869                           
  4870                           ;main.c: 332:                     orev_counter++;
  4871     0090  3001               	movlw	1
  4872     0091  0140               	movlb	0	; select bank0
  4873     0092  00C4               	movwf	??_InterruptManager
  4874     0093  0844               	movf	??_InterruptManager,w
  4875     0094  07D8               	addwf	_orev_counter,f
  4876                           
  4877                           ;main.c: 333:                     if (orev_counter == 1) ignition_disable();
  4878     0095  0358               	decf	_orev_counter,w
  4879     0096  1D03               	btfss	3,2
  4880     0097  2899               	goto	u208_21
  4881     0098  289A               	goto	u208_20
  4882     0099                     u208_21:
  4883     0099  28B7               	goto	i1l2434
  4884     009A                     u208_20:
  4885     009A                     i1l2422:
  4886     009A  318B  23E7  3180   	fcall	_ignition_disable
  4887     009D  28B7               	goto	i1l2434
  4888     009E                     i1l2424:
  4889     009E  3063               	movlw	99
  4890     009F  0266               	subwf	_rpm^(0+128),w
  4891     00A0  1C03               	skipc
  4892     00A1  28A3               	goto	u209_21
  4893     00A2  28A4               	goto	u209_20
  4894     00A3                     u209_21:
  4895     00A3  28B0               	goto	i1l2430
  4896     00A4                     u209_20:
  4897     00A4                     i1l2426:
  4898                           
  4899                           ;main.c: 335:                     orev_counter++;
  4900     00A4  3001               	movlw	1
  4901     00A5  0140               	movlb	0	; select bank0
  4902     00A6  00C4               	movwf	??_InterruptManager
  4903     00A7  0844               	movf	??_InterruptManager,w
  4904     00A8  07D8               	addwf	_orev_counter,f
  4905                           
  4906                           ;main.c: 336:                     if (orev_counter == 2) ignition_disable();
  4907     00A9  3002               	movlw	2
  4908     00AA  0658               	xorwf	_orev_counter,w
  4909     00AB  1D03               	btfss	3,2
  4910     00AC  28AE               	goto	u210_21
  4911     00AD  28AF               	goto	u210_20
  4912     00AE                     u210_21:
  4913     00AE  28B7               	goto	i1l273
  4914     00AF                     u210_20:
  4915     00AF  289A               	goto	i1l2422
  4916     00B0                     i1l2430:
  4917     00B0  3064               	movlw	100
  4918     00B1  0266               	subwf	_rpm^(0+128),w
  4919     00B2  1C03               	skipc
  4920     00B3  28B5               	goto	u211_21
  4921     00B4  28B6               	goto	u211_20
  4922     00B5                     u211_21:
  4923     00B5  28B7               	goto	i1l273
  4924     00B6                     u211_20:
  4925     00B6  289A               	goto	i1l2422
  4926     00B7                     i1l273:
  4927     00B7                     i1l2434:
  4928                           
  4929                           ;main.c: 341:             if (pwj_state == PWJ_ENABLE) {
  4930     00B7  0140               	movlb	0	; select bank0
  4931     00B8  0855               	movf	_pwj_state,w
  4932     00B9  1D03               	btfss	3,2
  4933     00BA  28BC               	goto	u212_21
  4934     00BB  28BD               	goto	u212_20
  4935     00BC                     u212_21:
  4936     00BC  28D0               	goto	i1l2444
  4937     00BD                     u212_20:
  4938     00BD                     i1l2436:
  4939                           
  4940                           ;main.c: 342:                 if (rpm > (85)) LATA0 = 1;
  4941     00BD  3056               	movlw	86
  4942     00BE  0141               	movlb	1	; select bank1
  4943     00BF  0266               	subwf	_rpm^(0+128),w
  4944     00C0  1C03               	skipc
  4945     00C1  28C3               	goto	u213_21
  4946     00C2  28C4               	goto	u213_20
  4947     00C3                     u213_21:
  4948     00C3  28C7               	goto	i1l2440
  4949     00C4                     u213_20:
  4950     00C4                     i1l2438:
  4951     00C4  0140               	movlb	0	; select bank0
  4952     00C5  1418               	bsf	24,0	;volatile
  4953     00C6  28E4               	goto	i1l2454
  4954     00C7                     i1l2440:
  4955     00C7  3053               	movlw	83
  4956     00C8  0266               	subwf	_rpm^(0+128),w
  4957     00C9  1803               	skipnc
  4958     00CA  28CC               	goto	u214_21
  4959     00CB  28CD               	goto	u214_20
  4960     00CC                     u214_21:
  4961     00CC  28E4               	goto	i1l282
  4962     00CD                     u214_20:
  4963     00CD                     i1l2442:
  4964     00CD  0140               	movlb	0	; select bank0
  4965     00CE  1018               	bcf	24,0	;volatile
  4966     00CF  28E4               	goto	i1l2454
  4967     00D0                     i1l2444:
  4968     00D0  0355               	decf	_pwj_state,w
  4969     00D1  1D03               	btfss	3,2
  4970     00D2  28D4               	goto	u215_21
  4971     00D3  28D5               	goto	u215_20
  4972     00D4                     u215_21:
  4973     00D4  28E4               	goto	i1l2454
  4974     00D5                     u215_20:
  4975     00D5                     i1l2446:
  4976                           
  4977                           ;main.c: 345:                 if (rpm > (30)) LATA0 = 1;
  4978     00D5  301F               	movlw	31
  4979     00D6  0141               	movlb	1	; select bank1
  4980     00D7  0266               	subwf	_rpm^(0+128),w
  4981     00D8  1C03               	skipc
  4982     00D9  28DB               	goto	u216_21
  4983     00DA  28DC               	goto	u216_20
  4984     00DB                     u216_21:
  4985     00DB  28DD               	goto	i1l2450
  4986     00DC                     u216_20:
  4987     00DC  28C4               	goto	i1l2438
  4988     00DD                     i1l2450:
  4989     00DD  301C               	movlw	28
  4990     00DE  0266               	subwf	_rpm^(0+128),w
  4991     00DF  1803               	skipnc
  4992     00E0  28E2               	goto	u217_21
  4993     00E1  28E3               	goto	u217_20
  4994     00E2                     u217_21:
  4995     00E2  28E4               	goto	i1l2454
  4996     00E3                     u217_20:
  4997     00E3  28CD               	goto	i1l2442
  4998     00E4                     i1l282:
  4999     00E4                     i1l2454:
  5000                           
  5001                           ;main.c: 350:         if (EG_state == EG_LOW) {
  5002     00E4  0141               	movlb	1	; select bank1
  5003     00E5  0865               	movf	_EG_state^(0+128),w
  5004     00E6  1D03               	btfss	3,2
  5005     00E7  28E9               	goto	u218_21
  5006     00E8  28EA               	goto	u218_20
  5007     00E9                     u218_21:
  5008     00E9  28F1               	goto	i1l2462
  5009     00EA                     u218_20:
  5010     00EA                     i1l2456:
  5011                           
  5012                           ;main.c: 351:             TMR1 = 0;
  5013     00EA  0144               	movlb	4	; select bank4
  5014     00EB  018C               	clrf	12	;volatile
  5015     00EC  018D               	clrf	13	;volatile
  5016     00ED                     i1l2458:
  5017                           
  5018                           ;main.c: 352:             TMR1ON = 1;
  5019     00ED  140E               	bsf	14,0	;volatile
  5020     00EE                     i1l2460:
  5021                           
  5022                           ;main.c: 353:             EG_state = EG_RUN;
  5023     00EE  0141               	movlb	1	; select bank1
  5024     00EF  01E5               	clrf	_EG_state^(0+128)
  5025     00F0  0AE5               	incf	_EG_state^(0+128),f
  5026     00F1                     i1l2462:
  5027                           
  5028                           ;main.c: 355:         CCP1IF = 0;
  5029     00F1  014E               	movlb	14	; select bank14
  5030     00F2  138D               	bcf	13,7	;volatile
  5031     00F3                     i1l2464:
  5032                           
  5033                           ;main.c: 358:     if (CCP2IF) {
  5034     00F3  1F8E               	btfss	14,7	;volatile
  5035     00F4  28F6               	goto	u219_21
  5036     00F5  28F7               	goto	u219_20
  5037     00F6                     u219_21:
  5038     00F6  290C               	goto	i1l2476
  5039     00F7                     u219_20:
  5040     00F7                     i1l2466:
  5041                           
  5042                           ;main.c: 359:         _delay((unsigned long)((60)*(32000000/4000000.0)));
  5043     00F7  30A0               	movlw	160
  5044     00F8                     u262_27:
  5045     00F8  0B89               	decfsz	9,f
  5046     00F9  28F8               	goto	u262_27
  5047     00FA                     i1l2468:
  5048                           
  5049                           ;main.c: 360:         ccp2_disable();
  5050     00FA  318B  23C2  3180   	fcall	i1_ccp2_disable
  5051     00FD                     i1l2470:
  5052                           
  5053                           ;main.c: 361:         LATC1 = 0;
  5054     00FD  0140               	movlb	0	; select bank0
  5055     00FE  109A               	bcf	26,1	;volatile
  5056                           
  5057                           ;main.c: 362:         ccp1_enable();
  5058     00FF  318B  23D5  3180   	fcall	i1_ccp1_enable
  5059     0102                     i1l2472:
  5060                           
  5061                           ;main.c: 363:         if (rpm < 30) calc_map();
  5062     0102  301E               	movlw	30
  5063     0103  0141               	movlb	1	; select bank1
  5064     0104  0266               	subwf	_rpm^(0+128),w
  5065     0105  1803               	skipnc
  5066     0106  2908               	goto	u220_21
  5067     0107  2909               	goto	u220_20
  5068     0108                     u220_21:
  5069     0108  290C               	goto	i1l2476
  5070     0109                     u220_20:
  5071     0109                     i1l2474:
  5072     0109  3181  21BE  3180   	fcall	i1_calc_map
  5073     010C                     i1l2476:
  5074                           
  5075                           ;main.c: 367:     if (IOCAF2) {
  5076     010C  017E               	movlb	62	; select bank62
  5077     010D  1D3F               	btfss	63,2	;volatile
  5078     010E  2910               	goto	u221_21
  5079     010F  2911               	goto	u221_20
  5080     0110                     u221_21:
  5081     0110  2954               	goto	i1l2494
  5082     0111                     u221_20:
  5083     0111                     i1l2478:
  5084                           
  5085                           ;main.c: 368:         if (EG_state == EG_RUN) {
  5086     0111  0141               	movlb	1	; select bank1
  5087     0112  0365               	decf	_EG_state^(0+128),w
  5088     0113  1D03               	btfss	3,2
  5089     0114  2916               	goto	u222_21
  5090     0115  2917               	goto	u222_20
  5091     0116                     u222_21:
  5092     0116  2952               	goto	i1l2492
  5093     0117                     u222_20:
  5094     0117                     i1l2480:
  5095                           
  5096                           ;main.c: 369:             pu1_2_period_count = TMR1;
  5097     0117  0144               	movlb	4	; select bank4
  5098     0118  080D               	movf	13,w	;volatile
  5099     0119  0141               	movlb	1	; select bank1
  5100     011A  00E1               	movwf	(_pu1_2_period_count+1)^(0+128)
  5101     011B  0144               	movlb	4	; select bank4
  5102     011C  080C               	movf	12,w	;volatile
  5103     011D  0141               	movlb	1	; select bank1
  5104     011E  00E0               	movwf	_pu1_2_period_count^(0+128)
  5105                           
  5106                           ;main.c: 370:             if ((rpm < 25)&&((t1_count - pu1_2_period_count)<(pu1_2_period
      +                          _count << 2))) {
  5107     011F  3019               	movlw	25
  5108     0120  0266               	subwf	_rpm^(0+128),w
  5109     0121  1803               	skipnc
  5110     0122  2924               	goto	u223_21
  5111     0123  2925               	goto	u223_20
  5112     0124                     u223_21:
  5113     0124  2945               	goto	i1l2486
  5114     0125                     u223_20:
  5115     0125                     i1l2482:
  5116     0125  0861               	movf	(_pu1_2_period_count+1)^(0+128),w
  5117     0126  0140               	movlb	0	; select bank0
  5118     0127  00C5               	movwf	??_InterruptManager+1
  5119     0128  0141               	movlb	1	; select bank1
  5120     0129  0860               	movf	_pu1_2_period_count^(0+128),w
  5121     012A  0140               	movlb	0	; select bank0
  5122     012B  00C4               	movwf	??_InterruptManager
  5123     012C  35C4               	lslf	??_InterruptManager,f
  5124     012D  0DC5               	rlf	??_InterruptManager+1,f
  5125     012E  35C4               	lslf	??_InterruptManager,f
  5126     012F  0DC5               	rlf	??_InterruptManager+1,f
  5127     0130  0141               	movlb	1	; select bank1
  5128     0131  0860               	movf	_pu1_2_period_count^(0+128),w
  5129     0132  027C               	subwf	InterruptManager@t1_count,w
  5130     0133  0140               	movlb	0	; select bank0
  5131     0134  00C6               	movwf	??_InterruptManager+2
  5132     0135  0141               	movlb	1	; select bank1
  5133     0136  0861               	movf	(_pu1_2_period_count+1)^(0+128),w
  5134     0137  3B7D               	subwfb	InterruptManager@t1_count+1,w
  5135     0138  0140               	movlb	0	; select bank0
  5136     0139  00C7               	movwf	??_InterruptManager+3
  5137     013A  0845               	movf	??_InterruptManager+1,w
  5138     013B  0247               	subwf	??_InterruptManager+3,w
  5139     013C  1D03               	skipz
  5140     013D  2940               	goto	u224_25
  5141     013E  0844               	movf	??_InterruptManager,w
  5142     013F  0246               	subwf	??_InterruptManager+2,w
  5143     0140                     u224_25:
  5144     0140  1803               	skipnc
  5145     0141  2943               	goto	u224_21
  5146     0142  2944               	goto	u224_20
  5147     0143                     u224_21:
  5148     0143  2945               	goto	i1l2486
  5149     0144                     u224_20:
  5150     0144                     i1l2484:
  5151                           
  5152                           ;main.c: 371:                 LATC2 = (1);
  5153     0144  151A               	bsf	26,2	;volatile
  5154     0145                     i1l2486:
  5155                           
  5156                           ;main.c: 373:             ccp1_enable();
  5157     0145  318B  23D5  3180   	fcall	i1_ccp1_enable
  5158     0148                     i1l2488:
  5159                           
  5160                           ;main.c: 374:             if (rpm < 40) calc_map();
  5161     0148  3028               	movlw	40
  5162     0149  0141               	movlb	1	; select bank1
  5163     014A  0266               	subwf	_rpm^(0+128),w
  5164     014B  1803               	skipnc
  5165     014C  294E               	goto	u225_21
  5166     014D  294F               	goto	u225_20
  5167     014E                     u225_21:
  5168     014E  2952               	goto	i1l2492
  5169     014F                     u225_20:
  5170     014F                     i1l2490:
  5171     014F  3181  21BE  3180   	fcall	i1_calc_map
  5172     0152                     i1l2492:
  5173                           
  5174                           ;main.c: 376:         IOCAF2 = 0;
  5175     0152  017E               	movlb	62	; select bank62
  5176     0153  113F               	bcf	63,2	;volatile
  5177     0154                     i1l2494:
  5178                           
  5179                           ;main.c: 379:     if (TMR1IF) {
  5180     0154  014E               	movlb	14	; select bank14
  5181     0155  1E8D               	btfss	13,5	;volatile
  5182     0156  2958               	goto	u226_21
  5183     0157  2959               	goto	u226_20
  5184     0158                     u226_21:
  5185     0158  296D               	goto	i1l294
  5186     0159                     u226_20:
  5187     0159                     i1l2496:
  5188                           
  5189                           ;main.c: 380:         EG_state = EG_LOW;
  5190     0159  0141               	movlb	1	; select bank1
  5191     015A  01E5               	clrf	_EG_state^(0+128)
  5192     015B                     i1l2498:
  5193                           
  5194                           ;main.c: 381:         TMR1ON = 0;
  5195     015B  0144               	movlb	4	; select bank4
  5196     015C  100E               	bcf	14,0	;volatile
  5197                           
  5198                           ;main.c: 382:         TMR1 = 0;
  5199     015D  018C               	clrf	12	;volatile
  5200     015E  018D               	clrf	13	;volatile
  5201                           
  5202                           ;main.c: 383:         CCPR1 = 0;
  5203     015F  0146               	movlb	6	; select bank6
  5204     0160  018C               	clrf	12	;volatile
  5205     0161  018D               	clrf	13	;volatile
  5206                           
  5207                           ;main.c: 384:         CCPR2 = 0;
  5208     0162  0190               	clrf	16	;volatile
  5209     0163  0191               	clrf	17	;volatile
  5210     0164                     i1l2500:
  5211                           
  5212                           ;main.c: 385:         TMR1IF = 0;
  5213     0164  014E               	movlb	14	; select bank14
  5214     0165  128D               	bcf	13,5	;volatile
  5215     0166                     i1l2502:
  5216                           
  5217                           ;main.c: 386:         LATA0 = 0;
  5218     0166  0140               	movlb	0	; select bank0
  5219     0167  1018               	bcf	24,0	;volatile
  5220     0168                     i1l2504:
  5221                           
  5222                           ;main.c: 387:         ccp2_disable();
  5223     0168  318B  23C2  3180   	fcall	i1_ccp2_disable
  5224     016B                     i1l2506:
  5225                           
  5226                           ;main.c: 388:         LATC1 = 0;
  5227     016B  0140               	movlb	0	; select bank0
  5228     016C  109A               	bcf	26,1	;volatile
  5229     016D                     i1l294:	
  5230                           ;main.c: 389:     }
  5231                           
  5232     016D  0064               	clrwdt	;# 
  5233     016E                     i1l295:
  5234     016E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5235     016F  0009               	retfie
  5236     0170                     __end_of_InterruptManager:
  5237                           
  5238                           	psect	text21
  5239     01BE                     __ptext21:	
  5240 ;; *************** function i1_calc_map *****************
  5241 ;; Defined at:
  5242 ;;		line 218 in file "main.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  temp1           3   18[BANK0 ] unsigned um
  5247 ;;  temp            3   15[BANK0 ] unsigned um
  5248 ;;  p4y             2   29[BANK0 ] unsigned short 
  5249 ;;  p3y             2   27[BANK0 ] unsigned short 
  5250 ;;  p2y             2   25[BANK0 ] unsigned short 
  5251 ;;  p1y             2   23[BANK0 ] unsigned short 
  5252 ;;  a               1   35[BANK0 ] unsigned char 
  5253 ;;  p4x             1   34[BANK0 ] unsigned char 
  5254 ;;  p3x             1   33[BANK0 ] unsigned char 
  5255 ;;  p2x             1   32[BANK0 ] unsigned char 
  5256 ;;  p1x             1   31[BANK0 ] unsigned char 
  5257 ;;  coeff_p3_p4     1   22[BANK0 ] unsigned char 
  5258 ;;  coeff_p1_p2     1   21[BANK0 ] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;Total ram usage:       33 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 1
  5275 ;; This function calls:
  5276 ;;		i1___lwdiv
  5277 ;;		i1___tmul
  5278 ;;		i1___wmul
  5279 ;; This function is called by:
  5280 ;;		_InterruptManager
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284     01BE                     i1_calc_map:	
  5285                           ;psect for function i1_calc_map
  5286                           
  5287     01BE                     i1l2276:	
  5288                           ;incstack = 0
  5289                           ; Regs used in i1_calc_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5290                           
  5291                           
  5292                           ;main.c: 219:     uint8_t p1x, p2x, p3x, p4x;;main.c: 220:     uint16_t p1y, p2y, p3y, p
      +                          4y;;main.c: 221:     uint8_t coeff_p1_p2, coeff_p3_p4;;main.c: 222:     uint8_t a;;main.
      +                          c: 223:     uint24_t temp;;main.c: 224:     uint24_t temp1;;main.c: 226:     p1x = adv_s
      +                          tart_rpm_table[sw1_pos];
  5293     01BE  0141               	movlb	1	; select bank1
  5294     01BF  086A               	movf	_sw1_pos^(0+128),w
  5295     01C0  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  5296     01C1  0084               	movwf	4
  5297     01C2  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  5298     01C3  1803               	skipnc
  5299     01C4  3E01               	addlw	1
  5300     01C5  0085               	movwf	5
  5301     01C6  0800               	movf	0,w	;code access
  5302     01C7  0140               	movlb	0	; select bank0
  5303     01C8  00BF               	movwf	i1calc_map@p1x
  5304     01C9                     i1l2278:
  5305                           
  5306                           ;main.c: 227:     p2x = adv_start_rpm_table[sw1_pos] + max_adv_grad_table[sw3_pos];
  5307     01C9  0141               	movlb	1	; select bank1
  5308     01CA  0868               	movf	_sw3_pos^(0+128),w
  5309     01CB  3E16               	addlw	low (_max_adv_grad_table| (0+32768))
  5310     01CC  0084               	movwf	4
  5311     01CD  3090               	movlw	high (_max_adv_grad_table| (0+32768))
  5312     01CE  1803               	skipnc
  5313     01CF  3E01               	addlw	1
  5314     01D0  0085               	movwf	5
  5315     01D1  0800               	movf	0,w	;code access
  5316     01D2  0140               	movlb	0	; select bank0
  5317     01D3  00A3               	movwf	??i1_calc_map
  5318     01D4  0141               	movlb	1	; select bank1
  5319     01D5  086A               	movf	_sw1_pos^(0+128),w
  5320     01D6  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  5321     01D7  0084               	movwf	4
  5322     01D8  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  5323     01D9  1803               	skipnc
  5324     01DA  3E01               	addlw	1
  5325     01DB  0085               	movwf	5
  5326     01DC  0800               	movf	0,w	;code access
  5327     01DD  0140               	movlb	0	; select bank0
  5328     01DE  0723               	addwf	??i1_calc_map,w
  5329     01DF  00C0               	movwf	i1calc_map@p2x
  5330     01E0                     i1l2280:
  5331                           
  5332                           ;main.c: 228:     p3x = (55);
  5333     01E0  3037               	movlw	55
  5334     01E1  00C1               	movwf	i1calc_map@p3x
  5335     01E2                     i1l2282:
  5336                           
  5337                           ;main.c: 229:     p4x = (80);
  5338     01E2  3050               	movlw	80
  5339     01E3  00C2               	movwf	i1calc_map@p4x
  5340     01E4                     i1l2284:
  5341                           
  5342                           ;main.c: 230:     p1y = (500);
  5343     01E4  30F4               	movlw	244
  5344     01E5  00B7               	movwf	i1calc_map@p1y
  5345     01E6  3001               	movlw	1
  5346     01E7  00B8               	movwf	i1calc_map@p1y+1
  5347     01E8                     i1l2286:
  5348                           
  5349                           ;main.c: 231:     p2y = max_adv_table[sw2_pos];
  5350     01E8  0141               	movlb	1	; select bank1
  5351     01E9  0869               	movf	_sw2_pos^(0+128),w
  5352     01EA  0140               	movlb	0	; select bank0
  5353     01EB  00A3               	movwf	??i1_calc_map
  5354     01EC  01A4               	clrf	??i1_calc_map+1
  5355     01ED  35A3               	lslf	??i1_calc_map,f
  5356     01EE  0DA4               	rlf	??i1_calc_map+1,f
  5357     01EF  3008               	movlw	low _max_adv_table
  5358     01F0  0723               	addwf	??i1_calc_map,w
  5359     01F1  0084               	movwf	4
  5360     01F2  3010               	movlw	high _max_adv_table
  5361     01F3  3D24               	addwfc	??i1_calc_map+1,w
  5362     01F4  3880               	iorlw	128
  5363     01F5  0085               	movwf	5
  5364     01F6  3F00               	moviw [0]fsr0
  5365     01F7  00B9               	movwf	i1calc_map@p2y
  5366     01F8  3F01               	moviw [1]fsr0
  5367     01F9  00BA               	movwf	i1calc_map@p2y+1
  5368     01FA                     i1l2288:
  5369                           
  5370                           ;main.c: 232:     p3y = p2y;
  5371     01FA  083A               	movf	i1calc_map@p2y+1,w
  5372     01FB  00BC               	movwf	i1calc_map@p3y+1
  5373     01FC  0839               	movf	i1calc_map@p2y,w
  5374     01FD  00BB               	movwf	i1calc_map@p3y
  5375     01FE                     i1l2290:
  5376                           
  5377                           ;main.c: 233:     p4y = min_ret_table[sw4_pos];
  5378     01FE  0141               	movlb	1	; select bank1
  5379     01FF  0867               	movf	_sw4_pos^(0+128),w
  5380     0200  0140               	movlb	0	; select bank0
  5381     0201  00A3               	movwf	??i1_calc_map
  5382     0202  01A4               	clrf	??i1_calc_map+1
  5383     0203  35A3               	lslf	??i1_calc_map,f
  5384     0204  0DA4               	rlf	??i1_calc_map+1,f
  5385     0205  3000               	movlw	low _min_ret_table
  5386     0206  0723               	addwf	??i1_calc_map,w
  5387     0207  0084               	movwf	4
  5388     0208  3010               	movlw	high _min_ret_table
  5389     0209  3D24               	addwfc	??i1_calc_map+1,w
  5390     020A  3880               	iorlw	128
  5391     020B  0085               	movwf	5
  5392     020C  3F00               	moviw [0]fsr0
  5393     020D  00BD               	movwf	i1calc_map@p4y
  5394     020E  3F01               	moviw [1]fsr0
  5395     020F  00BE               	movwf	i1calc_map@p4y+1
  5396     0210                     i1l2292:
  5397                           
  5398                           ;main.c: 234:     coeff_p1_p2 = (uint8_t) ((p2y - p1y) / (p2x - p1x));
  5399     0210  083F               	movf	i1calc_map@p1x,w
  5400     0211  0240               	subwf	i1calc_map@p2x,w
  5401     0212  00F0               	movwf	i1___lwdiv@divisor
  5402     0213  01F1               	clrf	i1___lwdiv@divisor+1
  5403     0214  1C03               	skipc
  5404     0215  03F1               	decf	i1___lwdiv@divisor+1,f
  5405     0216  0839               	movf	i1calc_map@p2y,w
  5406     0217  3E0C               	addlw	12
  5407     0218  00F2               	movwf	i1___lwdiv@dividend
  5408     0219  30FE               	movlw	254
  5409     021A  3D3A               	addwfc	i1calc_map@p2y+1,w
  5410     021B  00F3               	movwf	i1___lwdiv@dividend+1
  5411     021C  318D  2527  3181   	fcall	i1___lwdiv
  5412     021F  0870               	movf	?i1___lwdiv,w
  5413     0220  0140               	movlb	0	; select bank0
  5414     0221  00B5               	movwf	i1calc_map@coeff_p1_p2
  5415     0222                     i1l2294:
  5416                           
  5417                           ;main.c: 235:     coeff_p3_p4 = (uint8_t) ((p3y - p4y) / (p4x - p3x));
  5418     0222  3019               	movlw	25
  5419     0223  00F0               	movwf	i1___lwdiv@divisor
  5420     0224  3000               	movlw	0
  5421     0225  00F1               	movwf	i1___lwdiv@divisor+1
  5422     0226  083D               	movf	i1calc_map@p4y,w
  5423     0227  023B               	subwf	i1calc_map@p3y,w
  5424     0228  00F2               	movwf	i1___lwdiv@dividend
  5425     0229  083E               	movf	i1calc_map@p4y+1,w
  5426     022A  3B3C               	subwfb	i1calc_map@p3y+1,w
  5427     022B  00F3               	movwf	i1___lwdiv@dividend+1
  5428     022C  318D  2527  3181   	fcall	i1___lwdiv
  5429     022F  0870               	movf	?i1___lwdiv,w
  5430     0230  0140               	movlb	0	; select bank0
  5431     0231  00B6               	movwf	i1calc_map@coeff_p3_p4
  5432     0232                     i1l2296:
  5433                           
  5434                           ;main.c: 238:     for (a = 15; a <= p1x; a++) {
  5435     0232  300F               	movlw	15
  5436     0233  00C3               	movwf	i1calc_map@a
  5437     0234  2A4C               	goto	i1l2302
  5438     0235                     i1l2298:
  5439                           
  5440                           ;main.c: 239:         IG_table[a] = p1y;
  5441     0235  0843               	movf	i1calc_map@a,w
  5442     0236  00A3               	movwf	??i1_calc_map
  5443     0237  01A4               	clrf	??i1_calc_map+1
  5444     0238  35A3               	lslf	??i1_calc_map,f
  5445     0239  0DA4               	rlf	??i1_calc_map+1,f
  5446     023A  3067               	movlw	103
  5447     023B  00A5               	movwf	??i1_calc_map+2
  5448     023C  3022               	movlw	34
  5449     023D  00A6               	movwf	??i1_calc_map+3
  5450     023E  0823               	movf	??i1_calc_map,w
  5451     023F  0725               	addwf	??i1_calc_map+2,w
  5452     0240  0086               	movwf	6
  5453     0241  0824               	movf	??i1_calc_map+1,w
  5454     0242  3D26               	addwfc	??i1_calc_map+3,w
  5455     0243  0087               	movwf	7
  5456     0244  0837               	movf	i1calc_map@p1y,w
  5457     0245  3FC0               	movwi [0]fsr1
  5458     0246  0838               	movf	i1calc_map@p1y+1,w
  5459     0247  3FC1               	movwi [1]fsr1
  5460     0248                     i1l2300:
  5461                           
  5462                           ;main.c: 240:     }
  5463     0248  3001               	movlw	1
  5464     0249  00A3               	movwf	??i1_calc_map
  5465     024A  0823               	movf	??i1_calc_map,w
  5466     024B  07C3               	addwf	i1calc_map@a,f
  5467     024C                     i1l2302:
  5468     024C  0843               	movf	i1calc_map@a,w
  5469     024D  023F               	subwf	i1calc_map@p1x,w
  5470     024E  1803               	skipnc
  5471     024F  2A51               	goto	u193_21
  5472     0250  2A52               	goto	u193_20
  5473     0251                     u193_21:
  5474     0251  2A35               	goto	i1l2298
  5475     0252                     u193_20:
  5476     0252                     i1l2304:
  5477                           
  5478                           ;main.c: 241:     for (a = p1x + 1; a <= p2x; a++) {
  5479     0252  083F               	movf	i1calc_map@p1x,w
  5480     0253  3E01               	addlw	1
  5481     0254  00C3               	movwf	i1calc_map@a
  5482     0255  2A87               	goto	i1l2310
  5483     0256                     i1l2306:
  5484                           
  5485                           ;main.c: 242:         IG_table[a] = coeff_p1_p2 + IG_table[a - 1];
  5486     0256  0843               	movf	i1calc_map@a,w
  5487     0257  00A3               	movwf	??i1_calc_map
  5488     0258  01A4               	clrf	??i1_calc_map+1
  5489     0259  35A3               	lslf	??i1_calc_map,f
  5490     025A  0DA4               	rlf	??i1_calc_map+1,f
  5491     025B  3065               	movlw	101
  5492     025C  00A5               	movwf	??i1_calc_map+2
  5493     025D  3022               	movlw	34
  5494     025E  00A6               	movwf	??i1_calc_map+3
  5495     025F  0823               	movf	??i1_calc_map,w
  5496     0260  0725               	addwf	??i1_calc_map+2,w
  5497     0261  0086               	movwf	6
  5498     0262  0824               	movf	??i1_calc_map+1,w
  5499     0263  3D26               	addwfc	??i1_calc_map+3,w
  5500     0264  0087               	movwf	7
  5501     0265  3F40               	moviw [0]fsr1
  5502     0266  00A7               	movwf	??i1_calc_map+4
  5503     0267  3F41               	moviw [1]fsr1
  5504     0268  00A8               	movwf	??i1_calc_map+5
  5505     0269  0835               	movf	i1calc_map@coeff_p1_p2,w
  5506     026A  0727               	addwf	??i1_calc_map+4,w
  5507     026B  00A9               	movwf	??i1_calc_map+6
  5508     026C  0828               	movf	??i1_calc_map+5,w
  5509     026D  1803               	skipnc
  5510     026E  0A28               	incf	??i1_calc_map+5,w
  5511     026F  00AA               	movwf	??i1_calc_map+7
  5512     0270  0843               	movf	i1calc_map@a,w
  5513     0271  00AB               	movwf	??i1_calc_map+8
  5514     0272  01AC               	clrf	??i1_calc_map+9
  5515     0273  35AB               	lslf	??i1_calc_map+8,f
  5516     0274  0DAC               	rlf	??i1_calc_map+9,f
  5517     0275  3067               	movlw	103
  5518     0276  00AD               	movwf	??i1_calc_map+10
  5519     0277  3022               	movlw	34
  5520     0278  00AE               	movwf	??i1_calc_map+11
  5521     0279  082B               	movf	??i1_calc_map+8,w
  5522     027A  072D               	addwf	??i1_calc_map+10,w
  5523     027B  0086               	movwf	6
  5524     027C  082C               	movf	??i1_calc_map+9,w
  5525     027D  3D2E               	addwfc	??i1_calc_map+11,w
  5526     027E  0087               	movwf	7
  5527     027F  0829               	movf	??i1_calc_map+6,w
  5528     0280  3FC0               	movwi [0]fsr1
  5529     0281  082A               	movf	??i1_calc_map+7,w
  5530     0282  3FC1               	movwi [1]fsr1
  5531     0283                     i1l2308:
  5532                           
  5533                           ;main.c: 243:     }
  5534     0283  3001               	movlw	1
  5535     0284  00A3               	movwf	??i1_calc_map
  5536     0285  0823               	movf	??i1_calc_map,w
  5537     0286  07C3               	addwf	i1calc_map@a,f
  5538     0287                     i1l2310:
  5539     0287  0843               	movf	i1calc_map@a,w
  5540     0288  0240               	subwf	i1calc_map@p2x,w
  5541     0289  1803               	skipnc
  5542     028A  2A8C               	goto	u194_21
  5543     028B  2A8D               	goto	u194_20
  5544     028C                     u194_21:
  5545     028C  2A56               	goto	i1l2306
  5546     028D                     u194_20:
  5547     028D                     i1l2312:
  5548                           
  5549                           ;main.c: 244:     for (a = p2x + 1; a <= p3x; a++) {
  5550     028D  0840               	movf	i1calc_map@p2x,w
  5551     028E  3E01               	addlw	1
  5552     028F  00C3               	movwf	i1calc_map@a
  5553     0290  2AA8               	goto	i1l2318
  5554     0291                     i1l2314:
  5555                           
  5556                           ;main.c: 245:         IG_table[a] = p3y;
  5557     0291  0843               	movf	i1calc_map@a,w
  5558     0292  00A3               	movwf	??i1_calc_map
  5559     0293  01A4               	clrf	??i1_calc_map+1
  5560     0294  35A3               	lslf	??i1_calc_map,f
  5561     0295  0DA4               	rlf	??i1_calc_map+1,f
  5562     0296  3067               	movlw	103
  5563     0297  00A5               	movwf	??i1_calc_map+2
  5564     0298  3022               	movlw	34
  5565     0299  00A6               	movwf	??i1_calc_map+3
  5566     029A  0823               	movf	??i1_calc_map,w
  5567     029B  0725               	addwf	??i1_calc_map+2,w
  5568     029C  0086               	movwf	6
  5569     029D  0824               	movf	??i1_calc_map+1,w
  5570     029E  3D26               	addwfc	??i1_calc_map+3,w
  5571     029F  0087               	movwf	7
  5572     02A0  083B               	movf	i1calc_map@p3y,w
  5573     02A1  3FC0               	movwi [0]fsr1
  5574     02A2  083C               	movf	i1calc_map@p3y+1,w
  5575     02A3  3FC1               	movwi [1]fsr1
  5576     02A4                     i1l2316:
  5577                           
  5578                           ;main.c: 246:     }
  5579     02A4  3001               	movlw	1
  5580     02A5  00A3               	movwf	??i1_calc_map
  5581     02A6  0823               	movf	??i1_calc_map,w
  5582     02A7  07C3               	addwf	i1calc_map@a,f
  5583     02A8                     i1l2318:
  5584     02A8  0843               	movf	i1calc_map@a,w
  5585     02A9  0241               	subwf	i1calc_map@p3x,w
  5586     02AA  1803               	skipnc
  5587     02AB  2AAD               	goto	u195_21
  5588     02AC  2AAE               	goto	u195_20
  5589     02AD                     u195_21:
  5590     02AD  2A91               	goto	i1l2314
  5591     02AE                     u195_20:
  5592     02AE                     i1l2320:
  5593                           
  5594                           ;main.c: 247:     for (a = p3x + 1; a <= p4x; a++) {
  5595     02AE  0841               	movf	i1calc_map@p3x,w
  5596     02AF  3E01               	addlw	1
  5597     02B0  00C3               	movwf	i1calc_map@a
  5598     02B1  2AE3               	goto	i1l2326
  5599     02B2                     i1l2322:
  5600                           
  5601                           ;main.c: 248:         IG_table[a] = IG_table[a - 1] - coeff_p3_p4;
  5602     02B2  0843               	movf	i1calc_map@a,w
  5603     02B3  00A3               	movwf	??i1_calc_map
  5604     02B4  01A4               	clrf	??i1_calc_map+1
  5605     02B5  35A3               	lslf	??i1_calc_map,f
  5606     02B6  0DA4               	rlf	??i1_calc_map+1,f
  5607     02B7  3065               	movlw	101
  5608     02B8  00A5               	movwf	??i1_calc_map+2
  5609     02B9  3022               	movlw	34
  5610     02BA  00A6               	movwf	??i1_calc_map+3
  5611     02BB  0823               	movf	??i1_calc_map,w
  5612     02BC  0725               	addwf	??i1_calc_map+2,w
  5613     02BD  0086               	movwf	6
  5614     02BE  0824               	movf	??i1_calc_map+1,w
  5615     02BF  3D26               	addwfc	??i1_calc_map+3,w
  5616     02C0  0087               	movwf	7
  5617     02C1  3F40               	moviw [0]fsr1
  5618     02C2  00A7               	movwf	??i1_calc_map+4
  5619     02C3  3F41               	moviw [1]fsr1
  5620     02C4  00A8               	movwf	??i1_calc_map+5
  5621     02C5  0828               	movf	??i1_calc_map+5,w
  5622     02C6  00AA               	movwf	??i1_calc_map+7
  5623     02C7  0836               	movf	i1calc_map@coeff_p3_p4,w
  5624     02C8  0227               	subwf	??i1_calc_map+4,w
  5625     02C9  00A9               	movwf	??i1_calc_map+6
  5626     02CA  1C03               	skipc
  5627     02CB  03AA               	decf	??i1_calc_map+7,f
  5628     02CC  0843               	movf	i1calc_map@a,w
  5629     02CD  00AB               	movwf	??i1_calc_map+8
  5630     02CE  01AC               	clrf	??i1_calc_map+9
  5631     02CF  35AB               	lslf	??i1_calc_map+8,f
  5632     02D0  0DAC               	rlf	??i1_calc_map+9,f
  5633     02D1  3067               	movlw	103
  5634     02D2  00AD               	movwf	??i1_calc_map+10
  5635     02D3  3022               	movlw	34
  5636     02D4  00AE               	movwf	??i1_calc_map+11
  5637     02D5  082B               	movf	??i1_calc_map+8,w
  5638     02D6  072D               	addwf	??i1_calc_map+10,w
  5639     02D7  0086               	movwf	6
  5640     02D8  082C               	movf	??i1_calc_map+9,w
  5641     02D9  3D2E               	addwfc	??i1_calc_map+11,w
  5642     02DA  0087               	movwf	7
  5643     02DB  0829               	movf	??i1_calc_map+6,w
  5644     02DC  3FC0               	movwi [0]fsr1
  5645     02DD  082A               	movf	??i1_calc_map+7,w
  5646     02DE  3FC1               	movwi [1]fsr1
  5647     02DF                     i1l2324:
  5648                           
  5649                           ;main.c: 249:     }
  5650     02DF  3001               	movlw	1
  5651     02E0  00A3               	movwf	??i1_calc_map
  5652     02E1  0823               	movf	??i1_calc_map,w
  5653     02E2  07C3               	addwf	i1calc_map@a,f
  5654     02E3                     i1l2326:
  5655     02E3  0843               	movf	i1calc_map@a,w
  5656     02E4  0242               	subwf	i1calc_map@p4x,w
  5657     02E5  1803               	skipnc
  5658     02E6  2AE8               	goto	u196_21
  5659     02E7  2AE9               	goto	u196_20
  5660     02E8                     u196_21:
  5661     02E8  2AB2               	goto	i1l2322
  5662     02E9                     u196_20:
  5663     02E9                     i1l2328:
  5664                           
  5665                           ;main.c: 250:     for (a = p4x + 1; a <= 130; a++) {
  5666     02E9  0842               	movf	i1calc_map@p4x,w
  5667     02EA  3E01               	addlw	1
  5668     02EB  00C3               	movwf	i1calc_map@a
  5669     02EC                     i1l2330:
  5670     02EC  3083               	movlw	131
  5671     02ED  0243               	subwf	i1calc_map@a,w
  5672     02EE  1C03               	skipc
  5673     02EF  2AF1               	goto	u197_21
  5674     02F0  2AF2               	goto	u197_20
  5675     02F1                     u197_21:
  5676     02F1  2AF3               	goto	i1l2334
  5677     02F2                     u197_20:
  5678     02F2  2B0B               	goto	i1l2340
  5679     02F3                     i1l2334:
  5680                           
  5681                           ;main.c: 251:         IG_table[a] = p4y;
  5682     02F3  0843               	movf	i1calc_map@a,w
  5683     02F4  00A3               	movwf	??i1_calc_map
  5684     02F5  01A4               	clrf	??i1_calc_map+1
  5685     02F6  35A3               	lslf	??i1_calc_map,f
  5686     02F7  0DA4               	rlf	??i1_calc_map+1,f
  5687     02F8  3067               	movlw	103
  5688     02F9  00A5               	movwf	??i1_calc_map+2
  5689     02FA  3022               	movlw	34
  5690     02FB  00A6               	movwf	??i1_calc_map+3
  5691     02FC  0823               	movf	??i1_calc_map,w
  5692     02FD  0725               	addwf	??i1_calc_map+2,w
  5693     02FE  0086               	movwf	6
  5694     02FF  0824               	movf	??i1_calc_map+1,w
  5695     0300  3D26               	addwfc	??i1_calc_map+3,w
  5696     0301  0087               	movwf	7
  5697     0302  083D               	movf	i1calc_map@p4y,w
  5698     0303  3FC0               	movwi [0]fsr1
  5699     0304  083E               	movf	i1calc_map@p4y+1,w
  5700     0305  3FC1               	movwi [1]fsr1
  5701     0306                     i1l2336:
  5702                           
  5703                           ;main.c: 252:     }
  5704     0306  3001               	movlw	1
  5705     0307  00A3               	movwf	??i1_calc_map
  5706     0308  0823               	movf	??i1_calc_map,w
  5707     0309  07C3               	addwf	i1calc_map@a,f
  5708     030A  2AEC               	goto	i1l2330
  5709     030B                     i1l2340:
  5710                           
  5711                           ;main.c: 254:     for (a = 15; a <= 130; a++) {
  5712     030B  300F               	movlw	15
  5713     030C  00C3               	movwf	i1calc_map@a
  5714     030D                     i1l2344:
  5715                           
  5716                           ;main.c: 255:         deg_table[a] = (uint8_t) (IG_table[a] / 100);
  5717     030D  3064               	movlw	100
  5718     030E  00F0               	movwf	i1___lwdiv@divisor
  5719     030F  3000               	movlw	0
  5720     0310  00F1               	movwf	i1___lwdiv@divisor+1
  5721     0311  0843               	movf	i1calc_map@a,w
  5722     0312  00A3               	movwf	??i1_calc_map
  5723     0313  01A4               	clrf	??i1_calc_map+1
  5724     0314  35A3               	lslf	??i1_calc_map,f
  5725     0315  0DA4               	rlf	??i1_calc_map+1,f
  5726     0316  3067               	movlw	103
  5727     0317  00A5               	movwf	??i1_calc_map+2
  5728     0318  3022               	movlw	34
  5729     0319  00A6               	movwf	??i1_calc_map+3
  5730     031A  0823               	movf	??i1_calc_map,w
  5731     031B  0725               	addwf	??i1_calc_map+2,w
  5732     031C  0086               	movwf	6
  5733     031D  0824               	movf	??i1_calc_map+1,w
  5734     031E  3D26               	addwfc	??i1_calc_map+3,w
  5735     031F  0087               	movwf	7
  5736     0320  3F40               	moviw [0]fsr1
  5737     0321  00F2               	movwf	i1___lwdiv@dividend
  5738     0322  3F41               	moviw [1]fsr1
  5739     0323  00F3               	movwf	i1___lwdiv@dividend+1
  5740     0324  318D  2527  3181   	fcall	i1___lwdiv
  5741     0327  0870               	movf	?i1___lwdiv,w
  5742     0328  0140               	movlb	0	; select bank0
  5743     0329  00A7               	movwf	??i1_calc_map+4
  5744     032A  0843               	movf	i1calc_map@a,w
  5745     032B  3E6D               	addlw	109
  5746     032C  00A8               	movwf	??i1_calc_map+5
  5747     032D  01A9               	clrf	??i1_calc_map+6
  5748     032E  3023               	movlw	35
  5749     032F  3DA9               	addwfc	??i1_calc_map+6,f
  5750     0330  0828               	movf	??i1_calc_map+5,w
  5751     0331  0086               	movwf	6
  5752     0332  0829               	movf	??i1_calc_map+6,w
  5753     0333  0087               	movwf	7
  5754     0334  0827               	movf	??i1_calc_map+4,w
  5755     0335  0081               	movwf	1
  5756     0336                     i1l2346:
  5757                           
  5758                           ;main.c: 256:     }
  5759     0336  3001               	movlw	1
  5760     0337  00A3               	movwf	??i1_calc_map
  5761     0338  0823               	movf	??i1_calc_map,w
  5762     0339  07C3               	addwf	i1calc_map@a,f
  5763     033A                     i1l2348:
  5764     033A  3083               	movlw	131
  5765     033B  0243               	subwf	i1calc_map@a,w
  5766     033C  1C03               	skipc
  5767     033D  2B3F               	goto	u198_21
  5768     033E  2B40               	goto	u198_20
  5769     033F                     u198_21:
  5770     033F  2B0D               	goto	i1l2344
  5771     0340                     u198_20:
  5772     0340                     i1l2350:
  5773                           
  5774                           ;main.c: 258:     for (a = 15; a <= 130; a++) {
  5775     0340  300F               	movlw	15
  5776     0341  00C3               	movwf	i1calc_map@a
  5777     0342                     i1l2354:
  5778                           
  5779                           ;main.c: 259:         temp1 = (((3500) - IG_table[a]) >> 1);
  5780     0342  0843               	movf	i1calc_map@a,w
  5781     0343  00A3               	movwf	??i1_calc_map
  5782     0344  01A4               	clrf	??i1_calc_map+1
  5783     0345  35A3               	lslf	??i1_calc_map,f
  5784     0346  0DA4               	rlf	??i1_calc_map+1,f
  5785     0347  3067               	movlw	103
  5786     0348  00A5               	movwf	??i1_calc_map+2
  5787     0349  3022               	movlw	34
  5788     034A  00A6               	movwf	??i1_calc_map+3
  5789     034B  0823               	movf	??i1_calc_map,w
  5790     034C  0725               	addwf	??i1_calc_map+2,w
  5791     034D  0086               	movwf	6
  5792     034E  0824               	movf	??i1_calc_map+1,w
  5793     034F  3D26               	addwfc	??i1_calc_map+3,w
  5794     0350  0087               	movwf	7
  5795     0351  30AC               	movlw	172
  5796     0352  00A7               	movwf	??i1_calc_map+4
  5797     0353  300D               	movlw	13
  5798     0354  00A8               	movwf	??i1_calc_map+5
  5799     0355  3F40               	moviw [0]fsr1
  5800     0356  0227               	subwf	??i1_calc_map+4,w
  5801     0357  00A9               	movwf	??i1_calc_map+6
  5802     0358  3F41               	moviw [1]fsr1
  5803     0359  3B28               	subwfb	??i1_calc_map+5,w
  5804     035A  00AA               	movwf	??i1_calc_map+7
  5805     035B  36AA               	lsrf	??i1_calc_map+7,f
  5806     035C  0CA9               	rrf	??i1_calc_map+6,f
  5807     035D  0829               	movf	??i1_calc_map+6,w
  5808     035E  00B2               	movwf	i1calc_map@temp1
  5809     035F  082A               	movf	??i1_calc_map+7,w
  5810     0360  00B3               	movwf	i1calc_map@temp1+1
  5811     0361  01B4               	clrf	i1calc_map@temp1+2
  5812     0362                     i1l2356:
  5813                           
  5814                           ;main.c: 260:         temp = ((deg2time_coeff[a] * temp1) >> 10);
  5815     0362  0843               	movf	i1calc_map@a,w
  5816     0363  00A3               	movwf	??i1_calc_map
  5817     0364  01A4               	clrf	??i1_calc_map+1
  5818     0365  0823               	movf	??i1_calc_map,w
  5819     0366  00F0               	movwf	i1___wmul@multiplier
  5820     0367  0824               	movf	??i1_calc_map+1,w
  5821     0368  00F1               	movwf	i1___wmul@multiplier+1
  5822     0369  3003               	movlw	3
  5823     036A  00F2               	movwf	i1___wmul@multiplicand
  5824     036B  3000               	movlw	0
  5825     036C  00F3               	movwf	i1___wmul@multiplicand+1
  5826     036D  318C  2490  3181   	fcall	i1___wmul
  5827     0370  30DE               	movlw	222
  5828     0371  0140               	movlb	0	; select bank0
  5829     0372  00A5               	movwf	??i1_calc_map+2
  5830     0373  3020               	movlw	32
  5831     0374  00A6               	movwf	??i1_calc_map+3
  5832     0375  0870               	movf	?i1___wmul,w
  5833     0376  0725               	addwf	??i1_calc_map+2,w
  5834     0377  0086               	movwf	6
  5835     0378  0871               	movf	?i1___wmul+1,w
  5836     0379  3D26               	addwfc	??i1_calc_map+3,w
  5837     037A  0087               	movwf	7
  5838     037B  3F40               	moviw [0]fsr1
  5839     037C  00F6               	movwf	i1___tmul@multiplier
  5840     037D  3F41               	moviw [1]fsr1
  5841     037E  00F7               	movwf	i1___tmul@multiplier+1
  5842     037F  3F42               	moviw [2]fsr1
  5843     0380  00F8               	movwf	i1___tmul@multiplier+2
  5844     0381  0832               	movf	i1calc_map@temp1,w
  5845     0382  00F9               	movwf	i1___tmul@multiplicand
  5846     0383  0833               	movf	i1calc_map@temp1+1,w
  5847     0384  00FA               	movwf	i1___tmul@multiplicand+1
  5848     0385  0834               	movf	i1calc_map@temp1+2,w
  5849     0386  00FB               	movwf	i1___tmul@multiplicand+2
  5850     0387  318C  24FA  3181   	fcall	i1___tmul
  5851     038A  0876               	movf	?i1___tmul,w
  5852     038B  0140               	movlb	0	; select bank0
  5853     038C  00A7               	movwf	??i1_calc_map+4
  5854     038D  0877               	movf	?i1___tmul+1,w
  5855     038E  00A8               	movwf	??i1_calc_map+5
  5856     038F  0878               	movf	?i1___tmul+2,w
  5857     0390  00A9               	movwf	??i1_calc_map+6
  5858     0391  300A               	movlw	10
  5859     0392                     u199_25:
  5860     0392  36A9               	lsrf	??i1_calc_map+6,f
  5861     0393  0CA8               	rrf	??i1_calc_map+5,f
  5862     0394  0CA7               	rrf	??i1_calc_map+4,f
  5863     0395                     u199_20:
  5864     0395  0B89               	decfsz	9,f
  5865     0396  2B92               	goto	u199_25
  5866     0397  0827               	movf	??i1_calc_map+4,w
  5867     0398  00AF               	movwf	i1calc_map@temp
  5868     0399  0828               	movf	??i1_calc_map+5,w
  5869     039A  00B0               	movwf	i1calc_map@temp+1
  5870     039B  0829               	movf	??i1_calc_map+6,w
  5871     039C  00B1               	movwf	i1calc_map@temp+2
  5872     039D                     i1l2358:
  5873                           
  5874                           ;main.c: 261:         IG_table[a] = temp;
  5875     039D  0843               	movf	i1calc_map@a,w
  5876     039E  00A3               	movwf	??i1_calc_map
  5877     039F  01A4               	clrf	??i1_calc_map+1
  5878     03A0  35A3               	lslf	??i1_calc_map,f
  5879     03A1  0DA4               	rlf	??i1_calc_map+1,f
  5880     03A2  3067               	movlw	103
  5881     03A3  00A5               	movwf	??i1_calc_map+2
  5882     03A4  3022               	movlw	34
  5883     03A5  00A6               	movwf	??i1_calc_map+3
  5884     03A6  0823               	movf	??i1_calc_map,w
  5885     03A7  0725               	addwf	??i1_calc_map+2,w
  5886     03A8  0086               	movwf	6
  5887     03A9  0824               	movf	??i1_calc_map+1,w
  5888     03AA  3D26               	addwfc	??i1_calc_map+3,w
  5889     03AB  0087               	movwf	7
  5890     03AC  082F               	movf	i1calc_map@temp,w
  5891     03AD  3FC0               	movwi [0]fsr1
  5892     03AE  0830               	movf	i1calc_map@temp+1,w
  5893     03AF  3FC1               	movwi [1]fsr1
  5894     03B0                     i1l2360:
  5895                           
  5896                           ;main.c: 262:     }
  5897     03B0  3001               	movlw	1
  5898     03B1  00A3               	movwf	??i1_calc_map
  5899     03B2  0823               	movf	??i1_calc_map,w
  5900     03B3  07C3               	addwf	i1calc_map@a,f
  5901     03B4                     i1l2362:
  5902     03B4  3083               	movlw	131
  5903     03B5  0243               	subwf	i1calc_map@a,w
  5904     03B6  1C03               	skipc
  5905     03B7  2BB9               	goto	u200_21
  5906     03B8  2BBA               	goto	u200_20
  5907     03B9                     u200_21:
  5908     03B9  2B42               	goto	i1l2354
  5909     03BA                     u200_20:
  5910     03BA                     i1l248:
  5911     03BA  0008               	return
  5912     03BB                     __end_ofi1_calc_map:
  5913                           
  5914                           	psect	text22
  5915     0C90                     __ptext22:	
  5916 ;; *************** function i1___wmul *****************
  5917 ;; Defined at:
  5918 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  multiplier      2    0[COMMON] unsigned int 
  5921 ;;  multiplicand    2    2[COMMON] unsigned int 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  product         2    4[COMMON] unsigned int 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  2    0[COMMON] unsigned int 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;Total ram usage:        6 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		i1_calc_map
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946     0C90                     i1___wmul:	
  5947                           ;psect for function i1___wmul
  5948                           
  5949     0C90                     i1l1974:	
  5950                           ;incstack = 0
  5951                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5952                           
  5953     0C90  01F4               	clrf	i1___wmul@product
  5954     0C91  01F5               	clrf	i1___wmul@product+1
  5955     0C92                     i1l1976:
  5956     0C92  1C70               	btfss	i1___wmul@multiplier,0
  5957     0C93  2C95               	goto	u166_21
  5958     0C94  2C96               	goto	u166_20
  5959     0C95                     u166_21:
  5960     0C95  2C9A               	goto	i1l381
  5961     0C96                     u166_20:
  5962     0C96                     i1l1978:
  5963     0C96  0872               	movf	i1___wmul@multiplicand,w
  5964     0C97  07F4               	addwf	i1___wmul@product,f
  5965     0C98  0873               	movf	i1___wmul@multiplicand+1,w
  5966     0C99  3DF5               	addwfc	i1___wmul@product+1,f
  5967     0C9A                     i1l381:
  5968     0C9A  3001               	movlw	1
  5969     0C9B                     u167_25:
  5970     0C9B  35F2               	lslf	i1___wmul@multiplicand,f
  5971     0C9C  0DF3               	rlf	i1___wmul@multiplicand+1,f
  5972     0C9D  0B89               	decfsz	9,f
  5973     0C9E  2C9B               	goto	u167_25
  5974     0C9F                     i1l1980:
  5975     0C9F  3001               	movlw	1
  5976     0CA0                     u168_25:
  5977     0CA0  36F1               	lsrf	i1___wmul@multiplier+1,f
  5978     0CA1  0CF0               	rrf	i1___wmul@multiplier,f
  5979     0CA2  0B89               	decfsz	9,f
  5980     0CA3  2CA0               	goto	u168_25
  5981     0CA4                     i1l1982:
  5982     0CA4  0870               	movf	i1___wmul@multiplier,w
  5983     0CA5  0471               	iorwf	i1___wmul@multiplier+1,w
  5984     0CA6  1D03               	btfss	3,2
  5985     0CA7  2CA9               	goto	u169_21
  5986     0CA8  2CAA               	goto	u169_20
  5987     0CA9                     u169_21:
  5988     0CA9  2C92               	goto	i1l1976
  5989     0CAA                     u169_20:
  5990     0CAA                     i1l1984:
  5991     0CAA  0875               	movf	i1___wmul@product+1,w
  5992     0CAB  00F1               	movwf	?i1___wmul+1
  5993     0CAC  0874               	movf	i1___wmul@product,w
  5994     0CAD  00F0               	movwf	?i1___wmul
  5995     0CAE                     i1l383:
  5996     0CAE  0008               	return
  5997     0CAF                     __end_ofi1___wmul:
  5998                           
  5999                           	psect	text23
  6000     0CFA                     __ptext23:	
  6001 ;; *************** function i1___tmul *****************
  6002 ;; Defined at:
  6003 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul24.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  multiplier      3    6[COMMON] unsigned um
  6006 ;;  multiplicand    3    9[COMMON] unsigned um
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  product         3    0[BANK0 ] unsigned um
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  3    6[COMMON] unsigned um
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6018 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6019 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6021 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;Total ram usage:        9 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		i1_calc_map
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031     0CFA                     i1___tmul:	
  6032                           ;psect for function i1___tmul
  6033                           
  6034     0CFA                     i1l1988:	
  6035                           ;incstack = 0
  6036                           ; Regs used in i1___tmul: [wreg+status,2+status,0]
  6037                           
  6038     0CFA  3000               	movlw	0
  6039     0CFB  0140               	movlb	0	; select bank0
  6040     0CFC  00A0               	movwf	i1___tmul@product
  6041     0CFD  3000               	movlw	0
  6042     0CFE  00A1               	movwf	i1___tmul@product+1
  6043     0CFF  3000               	movlw	0
  6044     0D00  00A2               	movwf	i1___tmul@product+2
  6045     0D01                     i1l1990:
  6046     0D01  1C76               	btfss	i1___tmul@multiplier,0
  6047     0D02  2D04               	goto	u170_21
  6048     0D03  2D05               	goto	u170_20
  6049     0D04                     u170_21:
  6050     0D04  2D0C               	goto	i1l1994
  6051     0D05                     u170_20:
  6052     0D05                     i1l1992:
  6053     0D05  0879               	movf	i1___tmul@multiplicand,w
  6054     0D06  0140               	movlb	0	; select bank0
  6055     0D07  07A0               	addwf	i1___tmul@product,f
  6056     0D08  087A               	movf	i1___tmul@multiplicand+1,w
  6057     0D09  3DA1               	addwfc	i1___tmul@product+1,f
  6058     0D0A  087B               	movf	i1___tmul@multiplicand+2,w
  6059     0D0B  3DA2               	addwfc	i1___tmul@product+2,f
  6060     0D0C                     i1l1994:
  6061     0D0C  3001               	movlw	1
  6062     0D0D                     u171_25:
  6063     0D0D  35F9               	lslf	i1___tmul@multiplicand,f
  6064     0D0E  0DFA               	rlf	i1___tmul@multiplicand+1,f
  6065     0D0F  0DFB               	rlf	i1___tmul@multiplicand+2,f
  6066     0D10  0B89               	decfsz	9,f
  6067     0D11  2D0D               	goto	u171_25
  6068     0D12                     i1l1996:
  6069     0D12  3001               	movlw	1
  6070     0D13                     u172_25:
  6071     0D13  36F8               	lsrf	i1___tmul@multiplier+2,f
  6072     0D14  0CF7               	rrf	i1___tmul@multiplier+1,f
  6073     0D15  0CF6               	rrf	i1___tmul@multiplier,f
  6074     0D16  0B89               	decfsz	9,f
  6075     0D17  2D13               	goto	u172_25
  6076     0D18  0878               	movf	i1___tmul@multiplier+2,w
  6077     0D19  0477               	iorwf	i1___tmul@multiplier+1,w
  6078     0D1A  0476               	iorwf	i1___tmul@multiplier,w
  6079     0D1B  1D03               	skipz
  6080     0D1C  2D1E               	goto	u173_21
  6081     0D1D  2D1F               	goto	u173_20
  6082     0D1E                     u173_21:
  6083     0D1E  2D01               	goto	i1l1990
  6084     0D1F                     u173_20:
  6085     0D1F                     i1l1998:
  6086     0D1F  0140               	movlb	0	; select bank0
  6087     0D20  0820               	movf	i1___tmul@product,w
  6088     0D21  00F6               	movwf	?i1___tmul
  6089     0D22  0821               	movf	i1___tmul@product+1,w
  6090     0D23  00F7               	movwf	?i1___tmul+1
  6091     0D24  0822               	movf	i1___tmul@product+2,w
  6092     0D25  00F8               	movwf	?i1___tmul+2
  6093     0D26                     i1l389:
  6094     0D26  0008               	return
  6095     0D27                     __end_ofi1___tmul:
  6096                           
  6097                           	psect	text24
  6098     0D27                     __ptext24:	
  6099 ;; *************** function i1___lwdiv *****************
  6100 ;; Defined at:
  6101 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  divisor         2    0[COMMON] unsigned int 
  6104 ;;  dividend        2    2[COMMON] unsigned int 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  quotient        2    5[COMMON] unsigned int 
  6107 ;;  counter         1    7[COMMON] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  2    0[COMMON] unsigned int 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;Total ram usage:        8 bytes
  6122 ;; Hardware stack levels used: 1
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_InterruptManager
  6127 ;;		i1_calc_map
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131     0D27                     i1___lwdiv:	
  6132                           ;psect for function i1___lwdiv
  6133                           
  6134     0D27                     i1l2002:	
  6135                           ;incstack = 0
  6136                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6137                           
  6138     0D27  01F5               	clrf	i1___lwdiv@quotient
  6139     0D28  01F6               	clrf	i1___lwdiv@quotient+1
  6140     0D29                     i1l2004:
  6141     0D29  0870               	movf	i1___lwdiv@divisor,w
  6142     0D2A  0471               	iorwf	i1___lwdiv@divisor+1,w
  6143     0D2B  1903               	btfsc	3,2
  6144     0D2C  2D2E               	goto	u174_21
  6145     0D2D  2D2F               	goto	u174_20
  6146     0D2E                     u174_21:
  6147     0D2E  2D5E               	goto	i1l2024
  6148     0D2F                     u174_20:
  6149     0D2F                     i1l2006:
  6150     0D2F  01F7               	clrf	i1___lwdiv@counter
  6151     0D30  0AF7               	incf	i1___lwdiv@counter,f
  6152     0D31  2D3B               	goto	i1l2012
  6153     0D32                     i1l2008:
  6154     0D32  3001               	movlw	1
  6155     0D33                     u175_25:
  6156     0D33  35F0               	lslf	i1___lwdiv@divisor,f
  6157     0D34  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6158     0D35  0B89               	decfsz	9,f
  6159     0D36  2D33               	goto	u175_25
  6160     0D37                     i1l2010:
  6161     0D37  3001               	movlw	1
  6162     0D38  00F4               	movwf	??i1___lwdiv
  6163     0D39  0874               	movf	??i1___lwdiv,w
  6164     0D3A  07F7               	addwf	i1___lwdiv@counter,f
  6165     0D3B                     i1l2012:
  6166     0D3B  1FF1               	btfss	i1___lwdiv@divisor+1,7
  6167     0D3C  2D3E               	goto	u176_21
  6168     0D3D  2D3F               	goto	u176_20
  6169     0D3E                     u176_21:
  6170     0D3E  2D32               	goto	i1l2008
  6171     0D3F                     u176_20:
  6172     0D3F                     i1l2014:
  6173     0D3F  3001               	movlw	1
  6174     0D40                     u177_25:
  6175     0D40  35F5               	lslf	i1___lwdiv@quotient,f
  6176     0D41  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6177     0D42  0B89               	decfsz	9,f
  6178     0D43  2D40               	goto	u177_25
  6179     0D44  0871               	movf	i1___lwdiv@divisor+1,w
  6180     0D45  0273               	subwf	i1___lwdiv@dividend+1,w
  6181     0D46  1D03               	skipz
  6182     0D47  2D4A               	goto	u178_25
  6183     0D48  0870               	movf	i1___lwdiv@divisor,w
  6184     0D49  0272               	subwf	i1___lwdiv@dividend,w
  6185     0D4A                     u178_25:
  6186     0D4A  1C03               	skipc
  6187     0D4B  2D4D               	goto	u178_21
  6188     0D4C  2D4E               	goto	u178_20
  6189     0D4D                     u178_21:
  6190     0D4D  2D53               	goto	i1l2020
  6191     0D4E                     u178_20:
  6192     0D4E                     i1l2016:
  6193     0D4E  0870               	movf	i1___lwdiv@divisor,w
  6194     0D4F  02F2               	subwf	i1___lwdiv@dividend,f
  6195     0D50  0871               	movf	i1___lwdiv@divisor+1,w
  6196     0D51  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  6197     0D52                     i1l2018:
  6198     0D52  1475               	bsf	i1___lwdiv@quotient,0
  6199     0D53                     i1l2020:
  6200     0D53  3001               	movlw	1
  6201     0D54                     u179_25:
  6202     0D54  36F1               	lsrf	i1___lwdiv@divisor+1,f
  6203     0D55  0CF0               	rrf	i1___lwdiv@divisor,f
  6204     0D56  0B89               	decfsz	9,f
  6205     0D57  2D54               	goto	u179_25
  6206     0D58                     i1l2022:
  6207     0D58  3001               	movlw	1
  6208     0D59  02F7               	subwf	i1___lwdiv@counter,f
  6209     0D5A  1D03               	btfss	3,2
  6210     0D5B  2D5D               	goto	u180_21
  6211     0D5C  2D5E               	goto	u180_20
  6212     0D5D                     u180_21:
  6213     0D5D  2D3F               	goto	i1l2014
  6214     0D5E                     u180_20:
  6215     0D5E                     i1l2024:
  6216     0D5E  0876               	movf	i1___lwdiv@quotient+1,w
  6217     0D5F  00F1               	movwf	?i1___lwdiv+1
  6218     0D60  0875               	movf	i1___lwdiv@quotient,w
  6219     0D61  00F0               	movwf	?i1___lwdiv
  6220     0D62                     i1l661:
  6221     0D62  0008               	return
  6222     0D63                     __end_ofi1___lwdiv:
  6223                           
  6224                           	psect	text25
  6225     0BE7                     __ptext25:	
  6226 ;; *************** function _ignition_disable *****************
  6227 ;; Defined at:
  6228 ;;		line 397 in file "main.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      void 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0, pclath, cstack
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;Total ram usage:        0 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; Hardware stack levels required when called: 1
  6249 ;; This function calls:
  6250 ;;		i1_ccp1_enable
  6251 ;;		i1_ccp2_disable
  6252 ;; This function is called by:
  6253 ;;		_InterruptManager
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257     0BE7                     _ignition_disable:	
  6258                           ;psect for function _ignition_disable
  6259                           
  6260     0BE7                     i1l2268:	
  6261                           ;incstack = 0
  6262                           ; Regs used in _ignition_disable: [wreg+status,2+status,0+pclath+cstack]
  6263                           
  6264                           
  6265                           ;main.c: 398:     ccp2_disable();
  6266     0BE7  318B  23C2  318B   	fcall	i1_ccp2_disable
  6267     0BEA                     i1l2270:
  6268                           
  6269                           ;main.c: 399:     LATC2 = (1);
  6270     0BEA  0140               	movlb	0	; select bank0
  6271     0BEB  151A               	bsf	26,2	;volatile
  6272     0BEC                     i1l2272:
  6273                           
  6274                           ;main.c: 400:     orev_counter = 0;
  6275     0BEC  01D8               	clrf	_orev_counter
  6276     0BED                     i1l2274:
  6277                           
  6278                           ;main.c: 401:     ccp1_enable();
  6279     0BED  318B  23D5  318B   	fcall	i1_ccp1_enable
  6280     0BF0                     i1l298:
  6281     0BF0  0008               	return
  6282     0BF1                     __end_of_ignition_disable:
  6283                           
  6284                           	psect	text26
  6285     0BC2                     __ptext26:	
  6286 ;; *************** function i1_ccp2_disable *****************
  6287 ;; Defined at:
  6288 ;;		line 439 in file "main.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		status,2
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;Total ram usage:        0 bytes
  6307 ;; Hardware stack levels used: 1
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_InterruptManager
  6312 ;;		_ignition_disable
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316     0BC2                     i1_ccp2_disable:	
  6317                           ;psect for function i1_ccp2_disable
  6318                           
  6319     0BC2                     i1l1970:	
  6320                           ;incstack = 0
  6321                           ; Regs used in i1_ccp2_disable: [status,2]
  6322                           
  6323                           
  6324                           ;main.c: 440:     CCP2IE = 0;
  6325     0BC2  014E               	movlb	14	; select bank14
  6326     0BC3  1398               	bcf	24,7	;volatile
  6327     0BC4                     i1l1972:
  6328                           
  6329                           ;main.c: 441:     CCP2CON = 0;
  6330     0BC4  0146               	movlb	6	; select bank6
  6331     0BC5  0192               	clrf	18	;volatile
  6332     0BC6                     i1l310:
  6333     0BC6  0008               	return
  6334     0BC7                     __end_ofi1_ccp2_disable:
  6335                           
  6336                           	psect	text27
  6337     0BD5                     __ptext27:	
  6338 ;; *************** function i1_ccp1_enable *****************
  6339 ;; Defined at:
  6340 ;;		line 408 in file "main.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		wreg
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;Total ram usage:        0 bytes
  6359 ;; Hardware stack levels used: 1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_InterruptManager
  6364 ;;		_ignition_disable
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368     0BD5                     i1_ccp1_enable:	
  6369                           ;psect for function i1_ccp1_enable
  6370                           
  6371     0BD5                     i1l1964:	
  6372                           ;incstack = 0
  6373                           ; Regs used in i1_ccp1_enable: [wreg]
  6374                           
  6375                           
  6376                           ;main.c: 409:     CCP1IE = 0;
  6377     0BD5  014E               	movlb	14	; select bank14
  6378     0BD6  1397               	bcf	23,7	;volatile
  6379                           
  6380                           ;main.c: 410:     CCP1IF = 0;
  6381     0BD7  138D               	bcf	13,7	;volatile
  6382     0BD8                     i1l1966:
  6383                           
  6384                           ;main.c: 411:     CCP1CON = 0x84;
  6385     0BD8  3084               	movlw	132
  6386     0BD9  0146               	movlb	6	; select bank6
  6387     0BDA  008E               	movwf	14	;volatile
  6388     0BDB                     i1l1968:
  6389                           
  6390                           ;main.c: 412:     CCP1IE = 1;
  6391     0BDB  014E               	movlb	14	; select bank14
  6392     0BDC  1797               	bsf	23,7	;volatile
  6393     0BDD                     i1l301:
  6394     0BDD  0008               	return
  6395     0BDE                     __end_ofi1_ccp1_enable:
  6396                           
  6397                           	psect	text28
  6398     0BCC                     __ptext28:	
  6399 ;; *************** function _ccp2_enable *****************
  6400 ;; Defined at:
  6401 ;;		line 428 in file "main.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;		None
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;		None
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;Total ram usage:        0 bytes
  6420 ;; Hardware stack levels used: 1
  6421 ;; This function calls:
  6422 ;;		Nothing
  6423 ;; This function is called by:
  6424 ;;		_InterruptManager
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428     0BCC                     _ccp2_enable:	
  6429                           ;psect for function _ccp2_enable
  6430                           
  6431     0BCC                     i1l2262:	
  6432                           ;incstack = 0
  6433                           ; Regs used in _ccp2_enable: [wreg]
  6434                           
  6435                           
  6436                           ;main.c: 429:     CCP2IE = 0;
  6437     0BCC  014E               	movlb	14	; select bank14
  6438     0BCD  1398               	bcf	24,7	;volatile
  6439                           
  6440                           ;main.c: 430:     CCP2IF = 0;
  6441     0BCE  138E               	bcf	14,7	;volatile
  6442     0BCF                     i1l2264:
  6443                           
  6444                           ;main.c: 431:     CCP2CON = 0x88;
  6445     0BCF  3088               	movlw	136
  6446     0BD0  0146               	movlb	6	; select bank6
  6447     0BD1  0092               	movwf	18	;volatile
  6448     0BD2                     i1l2266:
  6449                           
  6450                           ;main.c: 432:     CCP2IE = 1;
  6451     0BD2  014E               	movlb	14	; select bank14
  6452     0BD3  1798               	bsf	24,7	;volatile
  6453     0BD4                     i1l307:
  6454     0BD4  0008               	return
  6455     0BD5                     __end_of_ccp2_enable:
  6456                           
  6457                           	psect	text29
  6458     0BBD                     __ptext29:	
  6459 ;; *************** function _ccp1_disable *****************
  6460 ;; Defined at:
  6461 ;;		line 419 in file "main.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		status,2
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;Total ram usage:        0 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_InterruptManager
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488     0BBD                     _ccp1_disable:	
  6489                           ;psect for function _ccp1_disable
  6490                           
  6491     0BBD                     i1l2258:	
  6492                           ;incstack = 0
  6493                           ; Regs used in _ccp1_disable: [status,2]
  6494                           
  6495                           
  6496                           ;main.c: 420:     CCP1IE = 0;
  6497     0BBD  014E               	movlb	14	; select bank14
  6498     0BBE  1397               	bcf	23,7	;volatile
  6499     0BBF                     i1l2260:
  6500                           
  6501                           ;main.c: 421:     CCP1CON = 0;
  6502     0BBF  0146               	movlb	6	; select bank6
  6503     0BC0  018E               	clrf	14	;volatile
  6504     0BC1                     i1l304:
  6505     0BC1  0008               	return
  6506     0BC2                     __end_of_ccp1_disable:
  6507     007E                     btemp	set	126	;btemp
  6508     007E                     int$flags	set	126
  6509     007E                     wtemp0	set	126
  6510     20DE                     
  6511                           	psect	config
  6512                           
  6513                           ;Config register CONFIG1 @ 0x8007
  6514                           ;	External Oscillator Mode Selection bits
  6515                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  6516                           ;	Power-up Default Value for COSC bits
  6517                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  6518                           ;	Clock Out Enable bit
  6519                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6520                           ;	VDD Range Analog Calibration Selection bit
  6521                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6522     8007                     	org	32775
  6523     8007  3FCF               	dw	16335
  6524                           
  6525                           ;Config register CONFIG2 @ 0x8008
  6526                           ;	Master Clear Enable bit
  6527                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6528                           ;	Power-up Timer Selection bits
  6529                           ;	PWRTS = PWRT_1, PWRT set at 1 ms
  6530                           ;	WDT Operating Mode bits
  6531                           ;	WDTE = SWDTEN, WDT enabled/disabled by SEN bit
  6532                           ;	Brown-out Reset Enable bits
  6533                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6534                           ;	Brown-out Reset Voltage Selection bit
  6535                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6536                           ;	PPSLOCKED One-Way Set Enable bit
  6537                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  6538                           ;	Stack Overflow/Underflow Reset Enable bit
  6539                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6540     8008                     	org	32776
  6541     8008  3FE9               	dw	16361
  6542                           
  6543                           ;Config register CONFIG4 @ 0x800A
  6544                           ;	Boot Block Size Selection bits
  6545                           ;	BBSIZE = BB512, 512 words boot block size
  6546                           ;	Boot Block Enable bit
  6547                           ;	BBEN = OFF, Boot Block is disabled
  6548                           ;	SAF Enable bit
  6549                           ;	SAFEN = OFF, SAF is disabled
  6550                           ;	Application Block Write Protection bit
  6551                           ;	WRTAPP = OFF, Application Block is not write-protected
  6552                           ;	Boot Block Write Protection bit
  6553                           ;	WRTB = OFF, Boot Block is not write-protected
  6554                           ;	Configuration Registers Write Protection bit
  6555                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6556                           ;	Storage Area Flash (SAF) Write Protection bit
  6557                           ;	WRTSAF = OFF, SAF is not write-protected
  6558                           ;	Low Voltage Programming Enable bit
  6559                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6560     800A                     	org	32778
  6561     800A  3FFF               	dw	16383
  6562                           
  6563                           ;Config register CONFIG5 @ 0x800B
  6564                           ;	User Program Flash Memory Code Protection bit
  6565                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6566     800B                     	org	32779
  6567     800B  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    26
    Data        397
    BSS         60
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      57
    BANK1            80     60      75
    BANK2            62      0      32
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S603$buffer	PTR unsigned char  size(2) Largest target is 0

    S603$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> Write_table@tx_data(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    WriteString@str	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[3]), Write_table@tx_data(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptManager in COMMON

    i1_calc_map->i1___tmul
    i1___tmul->i1___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    _InterruptManager->i1_calc_map
    i1_calc_map->i1___tmul

Critical Paths under _main in BANK1

    _main->_Write_table
    _calc_map->___tmul
    ___tmul->___wmul
    _Write_table->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _WriteString->_Write_Byte

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7125
                        _Write_table
                           _calc_map
                        _ccp1_enable
                     _check_sw_state
                  _initialize_system
 ---------------------------------------------------------------------------------
 (1) _initialize_system                                    0     0      0       0
                       _ccp2_disable
 ---------------------------------------------------------------------------------
 (2) _ccp2_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_sw_state                                       2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ccp1_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_map                                            33    33      0    2854
                                             15 BANK1     33    33      0
                            ___lwdiv
                             ___tmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6     316
                                              6 BANK1      9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     718
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Write_table                                          9     9      0    4271
                                             51 BANK1      9     9      0
                        _WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    16      4    3816
                                             33 BANK1     18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    3384
                                             26 BANK1      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2    2977
                                             11 BANK1     15    13      2
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              0 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) _WriteString                                          3     1      2     276
                                              1 BANK1      3     1      2
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (3) _Write_Byte                                           1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     6     6      0    2088
                                             12 COMMON     2     2      0
                                             36 BANK0      4     4      0
                       _ccp1_disable
                        _ccp2_enable
                   _ignition_disable
                          i1___lwdiv
                         i1_calc_map
                      i1_ccp1_enable
                     i1_ccp2_disable
 ---------------------------------------------------------------------------------
 (8) i1_calc_map                                          33    33      0    1696
                                              3 BANK0     33    33      0
                          i1___lwdiv
                           i1___tmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___tmul                                             9     3      6     144
                                              6 COMMON     6     0      6
                                              0 BANK0      3     3      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     370
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _ignition_disable                                     0     0      0       0
                      i1_ccp1_enable
                     i1_ccp2_disable
 ---------------------------------------------------------------------------------
 (8) i1_ccp2_disable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_ccp1_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ccp2_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ccp1_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Write_table
     _WriteString
       _Write_Byte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _calc_map
     ___lwdiv
     ___tmul
       ___wmul (ARG)
     ___wmul
   _ccp1_enable
   _check_sw_state
   _initialize_system
     _ccp2_disable

 _InterruptManager (ROOT)
   _ccp1_disable
   _ccp2_enable
   _ignition_disable
     i1_ccp1_enable
     i1_ccp2_disable
   i1___lwdiv
   i1_calc_map
     i1___lwdiv
     i1___tmul
       i1___wmul (ARG)
     i1___wmul
   i1_ccp1_enable
   i1_ccp2_disable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B2       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      39       6       71.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     3C      4B       8       93.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               3E      0      20      10       51.6%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Feb 09 11:38:16 2025

         ??_InterruptManager 0044                 ___awdiv@sign 00A6          ___wmul@multiplicand 00A2  
           i1___wmul@product 0074                   i1_calc_map 01BE                          l221 0BFC  
                        l301 0BE6                          l310 0BCB                          l215 07A7  
                        l313 0F0F                          l218 0BF3                          l227 0C56  
                        l252 07A9                          l248 05AE                          l256 07B9  
                        l259 07FD                          l381 0CBA                          l534 0EA5  
                        l383 0CCE                          l547 0E45                          l661 0D9F  
                        l389 0CF9                          l907 0DF1                          l844 0C8F  
                        l918 07FE                          l882 0FFF                          l895 0C26  
                        l888 0C72                          _GIE 005F                          _RA4 0064  
                        _RC5 0075                          _abs 0C15                          _rpm 00E6  
               ___awmod@sign 00A6                          wreg 0009                 _ccp1_disable 0BBD  
               _ccp2_disable 0BC7                         ?_abs 00A7                         l2130 07C8  
                       l2122 07AE                         l2132 07EB                         l2124 07BC  
                       l2116 07A8                         l2134 07ED                         l2118 07AC  
                       l2128 07BE                         l2510 0DA6                         l1720 0E51  
                       l2520 0DE8                         l2512 0DAB                         l2602 0C3E  
                       l1730 0E62                         l1722 0E53                         l1714 0E46  
                       l2514 0DB0                         l2530 0F32                         l2610 0BC7  
                       l2604 0C3F                         l1740 0E78                         l1732 0E68  
                       l1724 0E57                         l1716 0E48                         l1812 0C15  
                       l2516 0DBA                         l2508 0DA0                         l2540 0F5D  
                       l2532 0F36                         l2524 0F12                         l2620 0CBF  
                       l2612 0BC9                         l2700 0EF6                         l2606 0C47  
                       l1742 0E87                         l1734 0E6B                         l1750 0E97  
                       l1726 0E5C                         l1718 0E4C                         l1814 0C1A  
                       l2518 0DD8                         l2550 0FA1                         l2542 0F6A  
                       l2534 0F3D                         l2526 0F23                         l2630 0CD6  
                       l2622 0CC4                         l2614 0CAF                         l2710 0F02  
                       l2702 0EF8                         l2608 0C4C                         l1752 0E9C  
                       l1744 0E8B                         l1736 0E70                         l1728 0E60  
                       l1760 0DF4                         l1816 0C1B                         l2560 0FC0  
                       l2552 0FA7                         l2544 0F6C                         l2536 0F47  
                       l2528 0F2B                         l2632 0CDA                         l2624 0CCA  
                       l2616 0CB2                         l2800 052A                         l2720 0F07  
                       l2712 0F03                         l2704 0EFA                         l1754 0EA1  
                       l1746 0E8C                         l1738 0E74                         l1770 0E08  
                       l1762 0DF8                         l2562 0FD1                         l2554 0FAC  
                       l2546 0F73                         l2538 0F51                         l2570 0FE7  
                       l2634 0CE0                         l2618 0CB6                         l2810 0556  
                       l2802 052E                         l2730 03BB                         l2722 0F08  
                       l2714 0F04                         l2706 0EFD                         l2650 0EAF  
                       l2642 0EA6                         l1748 0E91                         l1780 0E1E  
                       l1772 0E0E                         l1764 0DFD                         l2556 0FB1  
                       l2564 0FD6                         l2548 0F91                         l2580 0C59  
                       l1940 0D66                         l2636 0CE6                         l2628 0CCF  
                       l2812 0591                         l2804 0534                         l2740 03E0  
                       l2732 03C5                         l2820 0BE1                         l2724 0F09  
                       l2716 0F05                         l2708 0F00                         l2660 0EB5  
                       l2652 0EB0                         l2644 0EAB                         l1790 0E3C  
                       l1782 0E28                         l1774 0E11                         l1766 0DFF  
                       l1758 0DF2                         l2558 0FB6                         l2566 0FDD  
                       l2582 0C5E                         l2590 0C75                         l2830 075C  
                       l1950 0D7C                         l1942 0D6C                         l2638 0CF3  
                       l2814 05A4                         l2750 0426                         l2742 03F0  
                       l2734 03D8                         l2822 0BE4                         l2726 0F0A  
                       l2718 0F06                         l2670 0ECF                         l2662 0EB6  
                       l2654 0EB1                         l2646 0EAC                         l2576 0BF3  
                       l1792 0E41                         l1784 0E2C                         l1776 0E16  
                       l1768 0E03                         l2584 0C66                         l2592 0C79  
                       l2832 0764                         l2824 0738                         l1952 0D8B  
                       l1944 0D6F                         l1960 0D9B                         l2816 05A8  
                       l2808 0536                         l2760 044A                         l2752 0429  
                       l2744 03F4                         l2736 03DA                         l2728 0F0D  
                       l2680 0EDA                         l2672 0ED1                         l2664 0ECA  
                       l2656 0EB2                         l2648 0EAE                         l2578 0BF8  
                       l1786 0E31                         l1778 0E1A                         l2586 0C70  
                       l2594 0C7B                         l2850 07A0                         l2842 077D  
                       l2834 0770                         l2826 0743                         l1954 0D8F  
                       l1946 0D74                         l1938 0D63                         l2770 0498  
                       l2762 0477                         l2754 043C                         l2746 0404  
                       l2738 03DC                         l2818 0BDE                         l2690 0EE5  
                       l2682 0EDB                         l2674 0ED3                         l2666 0ECC  
                       l2658 0EB3                         l1788 0E37                         l2596 0C7D  
                       l2844 078D                         l2836 077B                         l2828 0754  
                       l1956 0D90                         l1948 0D78                         l2780 04D7  
                       l2772 049C                         l2764 047B                         l2756 0440  
                       l2748 0416                         l2692 0EE8                         l2684 0EDD  
                       l2676 0ED5                         l2668 0ECE                         l2860 0C32  
                       l2852 0C27                         l2598 0C87                         l2846 0795  
                       l1958 0D95                         l2790 04FA                         l2782 04DD  
                       l2774 04A2                         l2766 0481                         l2758 0446  
                       l2694 0EEB                         l2686 0EDF                         l2678 0ED8  
                       l2862 0C35                         l2854 0C2A                         l2848 079A  
                       l2784 04E0                         l2776 04A6                         l2768 0485  
                       l2696 0EED                         l2688 0EE2                         l2856 0C2C  
                       l2794 04FF                         l2778 04D3                         l2698 0EF4  
                       l2858 0C2F                         l2788 04E7                         l2798 0501  
                       STR_1 1012                         STR_2 101E                         u1200 0E87  
                       u1201 0E86                         u1220 0E97                         u1140 0E4C  
                       u1221 0E96                         u1205 0E83                         u1141 0E4B  
                       u1230 0E9C                         u1150 0E57                         u1310 0E37  
                       u1231 0E9B                         u1215 0E8D                         u1151 0E56  
                       u1311 0E36                         u1160 0E68                         u1320 0E3C  
                       u1240 0DF8                         u1161 0E67                         u1321 0E3B  
                       u1305 0E2D                         u1241 0DF7                         u1250 0E03  
                       u1251 0E02                         u1180 0E78                         u1260 0E0E  
                       u2300 0DD8                         u1181 0E77                         u1261 0E0D  
                       u2301 0DD7                         _LATA 0018                         u2310 0F23  
                       _LATB 0019                         u1175 0E6C                         u2311 0F22  
                       _LATC 001A                         u1280 0E1E                         u2400 0FDC  
                       u2320 0F47                         u1281 0E1D                         u2305 0DD4  
                       u2401 0FDB                         u2321 0F46                         u2410 0BF8  
                       u1290 0E28                         u1370 0C1A                         u2330 0F51  
                       u1610 0D7C                         u2411 0BF7                         u1195 0E79  
                       u1291 0E27                         u1275 0E12                         u1371 0C19  
                       u2331 0F50                         u1611 0D7B                         u2340 0F71  
                       u2420 0C70                         u2341 0F6F                         u2421 0C6F  
                       u1605 0D70                         u2430 0C56                         u2270 0DA6  
                       u2350 0F72                         u1630 0D8B                         u2510 0CF3  
                       u2431 0C55                         u1295 0E24                         u2271 0DA5  
                       u1631 0D8A                         u2511 0CF2                         u2280 0DAB  
                       u2360 0FA7                         u2600 07A0                         u2440 0CB6  
                       u2520 0446                         u2281 0DAA                         u2361 0FA6  
                       u2601 079F                         u1625 0D7D                         u2505 0CE7  
                       u2441 0CB5                         u2521 0445                         u2290 0DBA  
                       u2370 0FAC                         u1650 0D9B                         u2530 0481  
                       u2291 0DB9                         u2371 0FAB                         u1651 0D9A  
                       u1635 0D87                         u2531 0480                         u2380 0FB1  
                       u2540 04A2                         u2381 0FB0                         u1645 0D91  
                       u2541 04A1                         u2390 0FB6                         u1590 0D6C  
                       u2470 0CCA                         u2550 04DD                         u2391 0FB5  
                       u1591 0D6B                         u2471 0CC9                         u2455 0CBB  
                       u2551 04DC                         u1815 07CD                         u2480 0CDA  
                       u2560 04E6                         u2481 0CD9                         u2465 0CC0  
                       u2561 04E5                         u1825 07E1                         u2570 0534  
                       u2571 0533                         u1835 07F4                         u2580 0589  
                       u2590 05AE                         u2495 0CE1                         u2591 05AD  
                       u2585 0586                         _PEIE 005E                         _PIR0 070C  
                       _PIR1 070D                         _PIR2 070E                         _TMR1 020C  
                       _TRMT 08F1                         abs@a 00A7                         _dbuf 0120  
                       _main 0C27                i1_ccp1_enable 0BD5                         _prec 00DE  
                       _test 0054                         fsr0h 0005                         fsr1h 0007  
                       indf0 0000                         fsr0l 0004                         indf1 0001  
                       fsr1l 0006                         btemp 007E                         start 0170  
             _check_sw_state 07A8                  i1calc_map@a 0043                        ??_abs 00A9  
__end_of_adv_start_rpm_table 101E                        ?_main 0070              __end_of___awdiv 0EA6  
                      _CCPR1 030C                        _CCPR2 0310              __end_of___awmod 0E46  
                      _T1CLK 0211              ___awdiv@divisor 00A0                        _T1CON 020E  
                      _LATA0 00C0                        _LATC1 00D1                        _LATC2 00D2  
                      _IOCIE 38B4              __end_of___lwdiv 0DA0                        i1l301 0BDD  
                      i1l310 0BC6                        i1l304 0BC1                        i1l307 0BD4  
                      i1l248 03BA                        i1l273 00B7                        i1l282 00E4  
                      i1l381 0C9A                        i1l294 016D                        i1l383 0CAE  
                      i1l295 016E                        i1l298 0BF0                        i1l661 0D62  
                      i1l389 0D26              ___awdiv@counter 00A5                        _OSCEN 0891  
               vfpfcnvrt@fmt 00AB                        _TMR1H 020D                        _TMR1L 020C  
                      _PORTA 000C                        _PORTB 000D                        _PORTC 000E  
                      _TRISA 0012                        _TRISB 0013                        _TRISC 0014  
                      _flags 00E4                        _fputc 0DA0                        _width 00DC  
                      _putch 07FE               i1_ccp2_disable 0BC2             __end_ofi1___tmul 0D27  
           __end_ofi1___wmul 0CAF               ?i1_ccp1_enable 0070       __end_of_check_sw_state 07FE  
                      status 0003          i1___wmul@multiplier 0070                        wtemp0 007E  
            __end_of_sprintf 0C90              __initialization 0172              i1calc_map@temp1 0032  
               __end_of_main 0C3E                  ?i1_calc_map 0070                       ??_main 00DC  
     __end_ofi1_ccp2_disable 0BC7                       _CCP1IE 38BF                       _CCP1IF 386F  
                     _CCP2IE 38C7                       _CCP2IF 3877                       ?_fputc 00A0  
           ___awdiv@dividend 00A2                       _ANSELA 1F38                       ?_putch 0070  
                     _ANSELB 1F43                       _ANSELC 1F4E                       _IOCAF2 F9FA  
                     _IOCAN2 F9F2                       _RC1PPS 1F21                       _RC1STA 011D  
                     i1l2010 0D37                       i1l2002 0D27                       _RB6PPS 1F1E  
                     i1l2020 0D53                       i1l2012 0D3B                       i1l2004 0D29  
                     i1l2022 0D58                       i1l2014 0D3F                       i1l2006 0D2F  
                     i1l2016 0D4E                       i1l2008 0D32                       i1l2024 0D5E  
                     i1l2018 0D52                       i1l2300 0248                       i1l2310 0287  
                     i1l2302 024C                       u200_20 03BA                       i1l2320 02AE  
                     i1l2312 028D                       i1l2304 0252                       i1l2400 0067  
                     u200_21 03B9                       i1l2330 02EC                       i1l2322 02B2  
                     i1l2314 0291                       i1l2306 0256                       i1l2410 007B  
                     i1l2402 006F                       i1l2260 0BBF                       i1l2340 030B  
                     i1l2324 02DF                       i1l2316 02A4                       i1l2308 0283  
                     i1l2500 0164                       i1l2420 0090                       i1l2404 0073  
                     i1l2412 007E                       i1l2262 0BCC                       i1l2270 0BEA  
                     i1l2350 0340                       i1l2334 02F3                       i1l2326 02E3  
                     i1l2318 02A8                       i1l2502 0166                       i1l2430 00B0  
                     i1l2422 009A                       i1l2414 0081                       i1l2406 0076  
                     i1l2264 0BCF                       i1l2272 0BEC                       i1l2360 03B0  
                     i1l2344 030D                       i1l2336 0306                       i1l2328 02E9  
                     i1l2280 01E0                       i1l2504 0168                       i1l2440 00C7  
                     i1l2424 009E                       i1l2408 0078                       i1l2416 0083  
                     u201_20 000B                       u201_21 000A                       i1l2258 0BBD  
                     i1l2266 0BD2                       i1l2274 0BED                       i1l2362 03B4  
                     i1l2354 0342                       i1l2346 0336                       i1l2290 01FE  
                     i1l2282 01E2                       i1l2506 016B                       i1l2450 00DD  
                     i1l2442 00CD                       i1l2426 00A4                       i1l2418 0089  
                     i1l2434 00B7                       i1l2268 0BE7                       i1l2356 0362  
                     i1l2348 033A                       i1l2292 0210                       i1l2284 01E4  
                     i1l2276 01BE                       i1l2460 00EE                       i1l2436 00BD  
                     i1l2444 00D0                       i1l2380 0011                       i1l2358 039D  
                     i1l2294 0222                       i1l2286 01E8                       i1l2278 01C9  
                     i1l2470 00FD                       i1l2462 00F1                       i1l2446 00D5  
                     i1l2438 00C4                       i1l2390 002D                       i1l2382 0013  
                     i1l2454 00E4                       i1l2296 0232                       i1l2288 01FA  
                     i1l2480 0117                       i1l2472 0102                       i1l2456 00EA  
                     u210_20 00AF                       i1l2392 0033                       i1l2384 0015  
                     u202_20 0011                       i1l2464 00F3                       i1l2376 0006  
                     u210_21 00AE                       u202_21 0010                       i1l2298 0235  
                     i1l2490 014F                       i1l2482 0125                       i1l2474 0109  
                     i1l2466 00F7                       i1l2458 00ED                       i1l2394 0039  
                     i1l2386 0016                       i1l2378 000B                       i1l2484 0144  
                     i1l2492 0152                       i1l2468 00FA                       i1l2476 010C  
                     i1l2396 004E                       i1l2388 0019                       i1l2486 0145  
                     i1l2478 0111                       i1l2494 0154                       i1l2398 0050  
                     i1l2496 0159                       i1l2488 0148                       u211_20 00B6  
                     u203_20 0033                       u211_21 00B5                       u203_21 0032  
                     i1l1970 0BC2                       i1l2498 015B                       i1l1964 0BD5  
                     i1l1972 0BC4                       i1l1980 0C9F                       i1l1966 0BD8  
                     i1l1990 0D01                       i1l1982 0CA4                       i1l1974 0C90  
                     i1l1968 0BDB                       i1l1992 0D05                       i1l1984 0CAA  
                     i1l1976 0C92                       u220_20 0109                       u212_20 00BD  
                     u204_20 0039                       u220_21 0108                       u212_21 00BC  
                     u204_21 0038                       i1l1994 0D0C                       i1l1978 0C96  
                     i1l1996 0D12                       i1l1988 0CFA                       i1l1998 0D1F  
                     u221_20 0111                       u213_20 00C4                       u205_20 0067  
                     u221_21 0110                       u213_21 00C3                       u205_21 0066  
                     u205_25 0063                       u222_20 0117                       u214_20 00CD  
                     u206_20 0089                       u222_21 0116                       u214_21 00CC  
                     u206_21 0088                       u223_20 0125                       u215_20 00D5  
                     u207_20 0090                       u223_21 0124                       u215_21 00D4  
                     u207_21 008F                       u224_20 0144                       u216_20 00DC  
                     u208_20 009A                       u224_21 0143                       u216_21 00DB  
                     u208_21 0099                       _INLVLA 1F3C                       _INLVLB 1F47  
                     _INLVLC 1F52                       u224_25 0140                       u225_20 014F  
                     u217_20 00E3                       u209_20 00A4                       u225_21 014E  
                     u217_21 00E2                       u209_21 00A3                       u170_20 0D05  
                     u226_20 0159                       u218_20 00EA                       u170_21 0D04  
                     u226_21 0158                       u218_21 00E9                       u219_20 00F7  
                     u219_21 00F6                       u171_25 0D0D                       u180_20 0D5E  
                     u180_21 0D5D                       u172_25 0D13                       u173_20 0D1F  
                     u173_21 0D1E                       u261_27 0079                       u174_20 0D2F  
                     u166_20 0C96                       u174_21 0D2E                       u166_21 0C95  
                     u262_27 00F8                       u175_25 0D33                       u167_25 0C9B  
                     u176_20 0D3F                       u176_21 0D3E                       u168_25 0CA0  
                     u169_20 0CAA                       u193_20 0252                       u169_21 0CA9  
                     u193_21 0251                       u177_25 0D40                       u178_20 0D4E  
                     u194_20 028D                       u178_21 0D4D                       u194_21 028C  
                     u178_25 0D4A                       u195_20 02AE                       u195_21 02AD  
                     u179_25 0D54                       u196_20 02E9                       u196_21 02E8  
                     u197_20 02F2                       u197_21 02F1                       u198_20 0340  
                     u198_21 033F                       u199_20 0395                       u199_25 0392  
                     _OSCFRQ 0893                vfpfcnvrt@done 00B1             __end_of_calc_map 05AF  
                     _RX1PPS 1ECB                       _TMR1IE 38BD                       _TMR1IF 386D  
                     _TMR1ON 1070                       _TX1REG 011A                       _WDTCON 080C  
                     _TX1STA 011E              ?_check_sw_state 0070                 vfprintf@cfmt 00BF  
                     ___tmul 0CCF                       ___wmul 0CAF                    ??___awdiv 00A4  
                  ??___awmod 00A4                    ??___lwdiv 00A4             ___awdiv@quotient 00A7  
            ___awmod@divisor 00A0              ___awmod@counter 00A5                _max_adv_table 1008  
                     _tx_buf 0048                 __pdataBIGRAM 20DE                       fputc@c 00A0  
          __end_ofi1___lwdiv 0D63             _ignition_disable 0BE7        i1___tmul@multiplicand 0079  
                     putch@c 0070             __end_of_vfprintf 0C73              ?i1_ccp2_disable 0070  
                  ??_sprintf 00C5              ??i1_ccp1_enable 0070      __end_of__initialization 01BA  
             __pcstackCOMMON 0070                 __pidataBANK1 0BB9                   _Write_Byte 0BF1  
              __end_of_fputc 0DF2                __end_of_putch 07FF                i1calc_map@p1x 003F  
              i1calc_map@p1y 0037                i1calc_map@p2x 0040                i1calc_map@p2y 0039  
              i1calc_map@p3x 0041                i1calc_map@p3y 003B                i1calc_map@p4x 0042  
              i1calc_map@p4y 003D                    ?i1___tmul 0076                    ?i1___wmul 0070  
                    ??_fputc 00A3          i1___tmul@multiplier 0076                      ??_putch 00A0  
                 __pbssBANK0 0048                   __pbssBANK1 00DC                   __pbssBANK2 0120  
             _deg2time_coeff 20DE                ??_ccp1_enable 00A0                ??_ccp2_enable 0070  
                 __pmaintext 0C27           Write_table@tx_data 00D5                      ?___tmul 00A6  
                    ?___wmul 00A0                   __pintentry 0004                      _CCP1CAP 030F  
                    _CCP2CAP 0313                      _CCP1CON 030E                      _CCP2CON 0312  
                    _CCP1PPS 1EA1                      _CCP2PPS 1EA2                ??_WriteString 00A3  
                 ??i1___tmul 007C                   ??i1___wmul 0074                ??_Write_table 00D3  
                  ?_calc_map 0070                   _ig_counter 00E2                      _SP1BRGH 011C  
                    _SP1BRGL 011B                 Write_table@a 00DB                      _OSCTUNE 0892  
                    _PPSLOCK 1E8F            _initialize_system 0EA6                _min_ret_table 1000  
         ?_initialize_system 0070          __end_of_ccp1_enable 0BE7          __end_of_ccp2_enable 0BD5  
             WriteString@str 00A1                      ___awdiv 0E46                  ?_Write_Byte 0070  
                    ___awmod 0DF2                      ___lwdiv 0D63                    ?_vfprintf 00BA  
        ??_initialize_system 00A0                 ??i1_calc_map 0023                      __ptext1 0EA6  
                    __ptext2 0BC7                      __ptext3 07A8                      __ptext4 0BDE  
                    __ptext5 03BB                      __ptext6 0CAF                      __ptext7 0CCF  
                    __ptext8 0D63                      __ptext9 0738                   ??_calc_map 00AF  
                    _map_sel 0057            i1___lwdiv@divisor 0070                      _sw1_pos 00EA  
                    _sw2_pos 00E9                      _sw3_pos 00E8                      _sw4_pos 00E7  
          i1___lwdiv@counter 0077        i1calc_map@coeff_p1_p2 0035        i1calc_map@coeff_p3_p4 0036  
           ___awmod@dividend 00A2        __end_of_numerator_rpm 1012          __end_of_WriteString 0C57  
           ??_check_sw_state 00A0          __end_of_Write_table 07A8                      _sprintf 0C73  
                    clrloop0 0BFE         end_of_initialization 01BA    __end_of_initialize_system 0F10  
                    fputc@fp 00A2                      init_ram 0C09                      initloop 0C0A  
         __end_ofi1_calc_map 03BB     __end_of_ignition_disable 0BF1            __end_of_vfpfcnvrt 1000  
           vfpfcnvrt@convarg 00B5                   ??_vfprintf 00BD        i1___wmul@multiplicand 0072  
                  _PORTAbits 000C                    _PORTBbits 000D                    _PORTCbits 000E  
           _InterruptManager 0004             ??i1_ccp2_disable 0070                 calc_map@temp 00BB  
                  i1___lwdiv 0D27                  _ccp1_enable 0BDE                  _ccp2_enable 0BCC  
              __pidataBIGRAM 05AF               __end_of___tmul 0CFA                  vfpfcnvrt@ap 00AC  
                vfpfcnvrt@cp 00B3                  vfpfcnvrt@fp 00B2               __end_of___wmul 0CCF  
                _WriteString 0C3E                  _Write_table 0738          start_initialization 0172  
              ?_ccp1_disable 0070               i1calc_map@temp 002F                  __end_of_abs 0C27  
              ?_ccp2_disable 0070                   ?i1___lwdiv 0070        __end_ofi1_ccp1_enable 0BDE  
                vfprintf@fmt 00BA                     ??___tmul 00AC                     ??___wmul 00A4  
                __pdataBANK1 00E7               ___tmul@product 00AC                  __pbssBIGRAM 2267  
             ??_ccp1_disable 0070                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0               ??_ccp2_disable 00A0               _revlimit_state 0056  
              Write_Byte@chr 00A0                    _deg_table 236D   __end_of_max_adv_grad_table 101A  
           ___lwdiv@dividend 00A2          _adv_start_rpm_table 101A                 ??_Write_Byte 00A0  
                   ?___awdiv 00A0                     ?___awmod 00A0                     ?___lwdiv 00A0  
                  calc_map@a 00CF                     _BAUD1CON 011F             ___lwdiv@quotient 00A5  
                ??i1___lwdiv 0074                     ?_sprintf 00C1           __end_of_Write_Byte 0BFD  
             ___wmul@product 00A4     __end_of_InterruptManager 0170                    clear_ram0 0BFD  
          ?_ignition_disable 0070                     _EG_state 00E5                     _IG_table 2267  
         ??_ignition_disable 0070                  calc_map@p1x 00CB                  calc_map@p1y 00C3  
                calc_map@p2x 00CC                  calc_map@p2y 00C5                  calc_map@p3x 00CD  
                calc_map@p3y 00C7                  calc_map@p4x 00CE                  calc_map@p4y 00C9  
                  _vfpfcnvrt 0F10        __end_of_max_adv_table 1010                    _pwj_state 0055  
                   i1___tmul 0CFA            ___wmul@multiplier 00A0                     i1___wmul 0C90  
        ___tmul@multiplicand 00A9     InterruptManager@t1_count 007C                   vfpfcnvrt@c 00B9  
               ?_ccp1_enable 0070                 ?_ccp2_enable 0070         __end_of_ccp1_disable 0BC2  
                 vfprintf@ap 00BC                   vfprintf@fp 00BE         __end_of_ccp2_disable 0BCC  
                 ?_vfpfcnvrt 00AB                 ?_WriteString 00A1                 ?_Write_table 0070  
                   _calc_map 03BB                   sprintf@fmt 00C1              ___lwdiv@divisor 00A0  
            ___lwdiv@counter 00A7                     __ptext10 0C73                     __ptext11 0C57  
                   __ptext12 0F10                     __ptext21 01BE                     __ptext13 0DA0  
                   __ptext22 0C90                     __ptext14 07FE                     __ptext23 0CFA  
                   __ptext15 0C15                     __ptext24 0D27                     __ptext16 0DF2  
                   __ptext25 0BE7                     __ptext17 0E46                     __ptext26 0BC2  
                   __ptext18 0C3E                     __ptext27 0BD5                     __ptext19 0BF1  
                   __ptext28 0BCC                     __ptext29 0BBD           i1___lwdiv@dividend 0072  
                   int$flags 007E                     _vfprintf 0C57           i1___lwdiv@quotient 0075  
               _orev_counter 0058                _numerator_rpm 1010                     intlevel1 0000  
                  sprintf@ap 00C6             i1___tmul@product 0020        __end_of_min_ret_table 1008  
                _PPSLOCKbits 1E8F           _pu1_2_period_count 00E0            ___tmul@multiplier 00A6  
                ??_vfpfcnvrt 00AD                __pstringtext1 1000                __pstringtext2 1008  
              __pstringtext3 1016                __pstringtext4 101A                __pstringtext5 1010  
              __pstringtext6 101E                __pstringtext7 0000           _max_adv_grad_table 1016  
                   sprintf@f 00C8                     sprintf@s 00C7          calc_map@coeff_p1_p2 00C1  
        calc_map@coeff_p3_p4 00C2                calc_map@temp1 00BE            ?_InterruptManager 0070  
