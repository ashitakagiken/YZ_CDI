

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Feb 09 13:52:36 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F15245
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x620,48
    56                           	dabs	1,0x5A0,80
    57                           	dabs	1,0x56D,3
    58                           	dabs	1,0x520,77
    59                           	dabs	1,0x4A0,80
    60                           	dabs	1,0x420,80
    61                           	dabs	1,0x3D7,25
    62                           	dabs	1,0x3A0,55
    63                           	dabs	1,0x320,80
    64                           	dabs	1,0x2A0,80
    65                           	dabs	1,0x220,80
    66                           	dabs	1,0x1A0,80
    67                           	dabs	1,0x15E,18
    68                           	dabs	1,0x2267,0,_IG_table
    69                           	dabs	1,0x236D,0,_deg_table
    70                           	dabs	1,0x20DE,0,_deg2time_coeff
    71                           	dabs	1,0x7E,2
    72     0000                     
    73                           ; Generated 11/01/2024 GMT
    74                           ; 
    75                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F15245 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     0012                     	;# 
   123     0013                     	;# 
   124     0014                     	;# 
   125     0018                     	;# 
   126     0019                     	;# 
   127     001A                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     0119                     	;# 
   138     011A                     	;# 
   139     011B                     	;# 
   140     011B                     	;# 
   141     011C                     	;# 
   142     011D                     	;# 
   143     011E                     	;# 
   144     011F                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     018E                     	;# 
   148     018F                     	;# 
   149     0190                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     020C                     	;# 
   153     020C                     	;# 
   154     020D                     	;# 
   155     020E                     	;# 
   156     020E                     	;# 
   157     020F                     	;# 
   158     020F                     	;# 
   159     0210                     	;# 
   160     0210                     	;# 
   161     0211                     	;# 
   162     0211                     	;# 
   163     0211                     	;# 
   164     028C                     	;# 
   165     028C                     	;# 
   166     028D                     	;# 
   167     028D                     	;# 
   168     028E                     	;# 
   169     028F                     	;# 
   170     0290                     	;# 
   171     0291                     	;# 
   172     030C                     	;# 
   173     030C                     	;# 
   174     030D                     	;# 
   175     030E                     	;# 
   176     030F                     	;# 
   177     0310                     	;# 
   178     0310                     	;# 
   179     0311                     	;# 
   180     0312                     	;# 
   181     0313                     	;# 
   182     0314                     	;# 
   183     0314                     	;# 
   184     0315                     	;# 
   185     0316                     	;# 
   186     0318                     	;# 
   187     0318                     	;# 
   188     0319                     	;# 
   189     031A                     	;# 
   190     059C                     	;# 
   191     059C                     	;# 
   192     059D                     	;# 
   193     059D                     	;# 
   194     059E                     	;# 
   195     059F                     	;# 
   196     070C                     	;# 
   197     070D                     	;# 
   198     070E                     	;# 
   199     0716                     	;# 
   200     0717                     	;# 
   201     0718                     	;# 
   202     080C                     	;# 
   203     0811                     	;# 
   204     0813                     	;# 
   205     0814                     	;# 
   206     081A                     	;# 
   207     081A                     	;# 
   208     081B                     	;# 
   209     081C                     	;# 
   210     081C                     	;# 
   211     081D                     	;# 
   212     081E                     	;# 
   213     081F                     	;# 
   214     088E                     	;# 
   215     0890                     	;# 
   216     0891                     	;# 
   217     0892                     	;# 
   218     0893                     	;# 
   219     090C                     	;# 
   220     1E8F                     	;# 
   221     1E90                     	;# 
   222     1E91                     	;# 
   223     1E92                     	;# 
   224     1E93                     	;# 
   225     1E9C                     	;# 
   226     1EA1                     	;# 
   227     1EA2                     	;# 
   228     1EC3                     	;# 
   229     1EC5                     	;# 
   230     1EC6                     	;# 
   231     1EC7                     	;# 
   232     1ECB                     	;# 
   233     1ECB                     	;# 
   234     1ECB                     	;# 
   235     1ECC                     	;# 
   236     1ECC                     	;# 
   237     1ECC                     	;# 
   238     1F10                     	;# 
   239     1F11                     	;# 
   240     1F12                     	;# 
   241     1F14                     	;# 
   242     1F15                     	;# 
   243     1F1C                     	;# 
   244     1F1D                     	;# 
   245     1F1E                     	;# 
   246     1F1F                     	;# 
   247     1F20                     	;# 
   248     1F21                     	;# 
   249     1F22                     	;# 
   250     1F23                     	;# 
   251     1F24                     	;# 
   252     1F25                     	;# 
   253     1F26                     	;# 
   254     1F27                     	;# 
   255     1F38                     	;# 
   256     1F39                     	;# 
   257     1F3A                     	;# 
   258     1F3B                     	;# 
   259     1F3C                     	;# 
   260     1F3D                     	;# 
   261     1F3E                     	;# 
   262     1F3F                     	;# 
   263     1F43                     	;# 
   264     1F44                     	;# 
   265     1F45                     	;# 
   266     1F46                     	;# 
   267     1F47                     	;# 
   268     1F48                     	;# 
   269     1F49                     	;# 
   270     1F4A                     	;# 
   271     1F4E                     	;# 
   272     1F4F                     	;# 
   273     1F50                     	;# 
   274     1F51                     	;# 
   275     1F52                     	;# 
   276     1F53                     	;# 
   277     1F54                     	;# 
   278     1F55                     	;# 
   279     1FE4                     	;# 
   280     1FE5                     	;# 
   281     1FE6                     	;# 
   282     1FE7                     	;# 
   283     1FE8                     	;# 
   284     1FE8                     	;# 
   285     1FE9                     	;# 
   286     1FEA                     	;# 
   287     1FEB                     	;# 
   288     1FED                     	;# 
   289     1FEE                     	;# 
   290     1FEF                     	;_deg2time_coeff
   291                           
   292                           	psect	idataBIGRAM
   293     05B5                     __pidataBIGRAM:
   294                           
   295                           ;initializer for _deg2time_coeff
   296     05B5  3400               	retlw	0
   297     05B6  3400               	retlw	0
   298     05B7  3400               	retlw	0
   299     05B8  3400               	retlw	0
   300     05B9  3400               	retlw	0
   301     05BA  3400               	retlw	0
   302     05BB  3400               	retlw	0
   303     05BC  3400               	retlw	0
   304     05BD  3400               	retlw	0
   305     05BE  3400               	retlw	0
   306     05BF  3400               	retlw	0
   307     05C0  3400               	retlw	0
   308     05C1  3400               	retlw	0
   309     05C2  3400               	retlw	0
   310     05C3  3400               	retlw	0
   311     05C4  3400               	retlw	0
   312     05C5  3400               	retlw	0
   313     05C6  3400               	retlw	0
   314     05C7  3400               	retlw	0
   315     05C8  3400               	retlw	0
   316     05C9  3400               	retlw	0
   317     05CA  3400               	retlw	0
   318     05CB  3400               	retlw	0
   319     05CC  3400               	retlw	0
   320     05CD  3400               	retlw	0
   321     05CE  3400               	retlw	0
   322     05CF  3400               	retlw	0
   323     05D0  3400               	retlw	0
   324     05D1  3400               	retlw	0
   325     05D2  3400               	retlw	0
   326     05D3  3400               	retlw	0
   327     05D4  3400               	retlw	0
   328     05D5  3400               	retlw	0
   329     05D6  3400               	retlw	0
   330     05D7  3400               	retlw	0
   331     05D8  3400               	retlw	0
   332     05D9  3400               	retlw	0
   333     05DA  3400               	retlw	0
   334     05DB  3400               	retlw	0
   335     05DC  3400               	retlw	0
   336     05DD  3400               	retlw	0
   337     05DE  3400               	retlw	0
   338     05DF  3400               	retlw	0
   339     05E0  3400               	retlw	0
   340     05E1  3400               	retlw	0
   341     05E2  34E4               	retlw	228
   342     05E3  3408               	retlw	8
   343     05E4  3400               	retlw	0
   344     05E5  3455               	retlw	85
   345     05E6  3408               	retlw	8
   346     05E7  3400               	retlw	0
   347     05E8  34D8               	retlw	216
   348     05E9  3407               	retlw	7
   349     05EA  3400               	retlw	0
   350     05EB  3468               	retlw	104
   351     05EC  3407               	retlw	7
   352     05ED  3400               	retlw	0
   353     05EE  3404               	retlw	4
   354     05EF  3407               	retlw	7
   355     05F0  3400               	retlw	0
   356     05F1  34AB               	retlw	171
   357     05F2  3406               	retlw	6
   358     05F3  3400               	retlw	0
   359     05F4  3459               	retlw	89
   360     05F5  3406               	retlw	6
   361     05F6  3400               	retlw	0
   362     05F7  3410               	retlw	16
   363     05F8  3406               	retlw	6
   364     05F9  3400               	retlw	0
   365     05FA  34CC               	retlw	204
   366     05FB  3405               	retlw	5
   367     05FC  3400               	retlw	0
   368     05FD  348E               	retlw	142
   369     05FE  3405               	retlw	5
   370     05FF  3400               	retlw	0
   371     0600  3455               	retlw	85
   372     0601  3405               	retlw	5
   373     0602  3400               	retlw	0
   374     0603  3421               	retlw	33
   375     0604  3405               	retlw	5
   376     0605  3400               	retlw	0
   377     0606  34F0               	retlw	240
   378     0607  3404               	retlw	4
   379     0608  3400               	retlw	0
   380     0609  34C3               	retlw	195
   381     060A  3404               	retlw	4
   382     060B  3400               	retlw	0
   383     060C  3499               	retlw	153
   384     060D  3404               	retlw	4
   385     060E  3400               	retlw	0
   386     060F  3472               	retlw	114
   387     0610  3404               	retlw	4
   388     0611  3400               	retlw	0
   389     0612  344D               	retlw	77
   390     0613  3404               	retlw	4
   391     0614  3400               	retlw	0
   392     0615  342B               	retlw	43
   393     0616  3404               	retlw	4
   394     0617  3400               	retlw	0
   395     0618  340A               	retlw	10
   396     0619  3404               	retlw	4
   397     061A  3400               	retlw	0
   398     061B  34EC               	retlw	236
   399     061C  3403               	retlw	3
   400     061D  3400               	retlw	0
   401     061E  34CF               	retlw	207
   402     061F  3403               	retlw	3
   403     0620  3400               	retlw	0
   404     0621  34B4               	retlw	180
   405     0622  3403               	retlw	3
   406     0623  3400               	retlw	0
   407     0624  349B               	retlw	155
   408     0625  3403               	retlw	3
   409     0626  3400               	retlw	0
   410     0627  3482               	retlw	130
   411     0628  3403               	retlw	3
   412     0629  3400               	retlw	0
   413     062A  346B               	retlw	107
   414     062B  3403               	retlw	3
   415     062C  3400               	retlw	0
   416     062D  3455               	retlw	85
   417     062E  3403               	retlw	3
   418     062F  3400               	retlw	0
   419     0630  3441               	retlw	65
   420     0631  3403               	retlw	3
   421     0632  3400               	retlw	0
   422     0633  342D               	retlw	45
   423     0634  3403               	retlw	3
   424     0635  3400               	retlw	0
   425     0636  341A               	retlw	26
   426     0637  3403               	retlw	3
   427     0638  3400               	retlw	0
   428     0639  3408               	retlw	8
   429     063A  3403               	retlw	3
   430     063B  3400               	retlw	0
   431     063C  34F7               	retlw	247
   432     063D  3402               	retlw	2
   433     063E  3400               	retlw	0
   434     063F  34E6               	retlw	230
   435     0640  3402               	retlw	2
   436     0641  3400               	retlw	0
   437     0642  34D6               	retlw	214
   438     0643  3402               	retlw	2
   439     0644  3400               	retlw	0
   440     0645  34C7               	retlw	199
   441     0646  3402               	retlw	2
   442     0647  3400               	retlw	0
   443     0648  34B9               	retlw	185
   444     0649  3402               	retlw	2
   445     064A  3400               	retlw	0
   446     064B  34AB               	retlw	171
   447     064C  3402               	retlw	2
   448     064D  3400               	retlw	0
   449     064E  349D               	retlw	157
   450     064F  3402               	retlw	2
   451     0650  3400               	retlw	0
   452     0651  3490               	retlw	144
   453     0652  3402               	retlw	2
   454     0653  3400               	retlw	0
   455     0654  3484               	retlw	132
   456     0655  3402               	retlw	2
   457     0656  3400               	retlw	0
   458     0657  3478               	retlw	120
   459     0658  3402               	retlw	2
   460     0659  3400               	retlw	0
   461     065A  346D               	retlw	109
   462     065B  3402               	retlw	2
   463     065C  3400               	retlw	0
   464     065D  3462               	retlw	98
   465     065E  3402               	retlw	2
   466     065F  3400               	retlw	0
   467     0660  3457               	retlw	87
   468     0661  3402               	retlw	2
   469     0662  3400               	retlw	0
   470     0663  344D               	retlw	77
   471     0664  3402               	retlw	2
   472     0665  3400               	retlw	0
   473     0666  3443               	retlw	67
   474     0667  3402               	retlw	2
   475     0668  3400               	retlw	0
   476     0669  3439               	retlw	57
   477     066A  3402               	retlw	2
   478     066B  3400               	retlw	0
   479     066C  3430               	retlw	48
   480     066D  3402               	retlw	2
   481     066E  3400               	retlw	0
   482     066F  3427               	retlw	39
   483     0670  3402               	retlw	2
   484     0671  3400               	retlw	0
   485     0672  341E               	retlw	30
   486     0673  3402               	retlw	2
   487     0674  3400               	retlw	0
   488     0675  3415               	retlw	21
   489     0676  3402               	retlw	2
   490     0677  3400               	retlw	0
   491     0678  340D               	retlw	13
   492     0679  3402               	retlw	2
   493     067A  3400               	retlw	0
   494     067B  3405               	retlw	5
   495     067C  3402               	retlw	2
   496     067D  3400               	retlw	0
   497     067E  34FD               	retlw	253
   498     067F  3401               	retlw	1
   499     0680  3400               	retlw	0
   500     0681  34F6               	retlw	246
   501     0682  3401               	retlw	1
   502     0683  3400               	retlw	0
   503     0684  34EF               	retlw	239
   504     0685  3401               	retlw	1
   505     0686  3400               	retlw	0
   506     0687  34E8               	retlw	232
   507     0688  3401               	retlw	1
   508     0689  3400               	retlw	0
   509     068A  34E1               	retlw	225
   510     068B  3401               	retlw	1
   511     068C  3400               	retlw	0
   512     068D  34DA               	retlw	218
   513     068E  3401               	retlw	1
   514     068F  3400               	retlw	0
   515     0690  34D4               	retlw	212
   516     0691  3401               	retlw	1
   517     0692  3400               	retlw	0
   518     0693  34CD               	retlw	205
   519     0694  3401               	retlw	1
   520     0695  3400               	retlw	0
   521     0696  34C7               	retlw	199
   522     0697  3401               	retlw	1
   523     0698  3400               	retlw	0
   524     0699  34C1               	retlw	193
   525     069A  3401               	retlw	1
   526     069B  3400               	retlw	0
   527     069C  34BB               	retlw	187
   528     069D  3401               	retlw	1
   529     069E  3400               	retlw	0
   530     069F  34B6               	retlw	182
   531     06A0  3401               	retlw	1
   532     06A1  3400               	retlw	0
   533     06A2  34B0               	retlw	176
   534     06A3  3401               	retlw	1
   535     06A4  3400               	retlw	0
   536     06A5  34AB               	retlw	171
   537     06A6  3401               	retlw	1
   538     06A7  3400               	retlw	0
   539     06A8  34A5               	retlw	165
   540     06A9  3401               	retlw	1
   541     06AA  3400               	retlw	0
   542     06AB  34A0               	retlw	160
   543     06AC  3401               	retlw	1
   544     06AD  3400               	retlw	0
   545     06AE  349B               	retlw	155
   546     06AF  3401               	retlw	1
   547     06B0  3400               	retlw	0
   548     06B1  3496               	retlw	150
   549     06B2  3401               	retlw	1
   550     06B3  3400               	retlw	0
   551     06B4  3492               	retlw	146
   552     06B5  3401               	retlw	1
   553     06B6  3400               	retlw	0
   554     06B7  348D               	retlw	141
   555     06B8  3401               	retlw	1
   556     06B9  3400               	retlw	0
   557     06BA  3488               	retlw	136
   558     06BB  3401               	retlw	1
   559     06BC  3400               	retlw	0
   560     06BD  3484               	retlw	132
   561     06BE  3401               	retlw	1
   562     06BF  3400               	retlw	0
   563     06C0  3480               	retlw	128
   564     06C1  3401               	retlw	1
   565     06C2  3400               	retlw	0
   566     06C3  347B               	retlw	123
   567     06C4  3401               	retlw	1
   568     06C5  3400               	retlw	0
   569     06C6  3477               	retlw	119
   570     06C7  3401               	retlw	1
   571     06C8  3400               	retlw	0
   572     06C9  3473               	retlw	115
   573     06CA  3401               	retlw	1
   574     06CB  3400               	retlw	0
   575     06CC  346F               	retlw	111
   576     06CD  3401               	retlw	1
   577     06CE  3400               	retlw	0
   578     06CF  346B               	retlw	107
   579     06D0  3401               	retlw	1
   580     06D1  3400               	retlw	0
   581     06D2  3467               	retlw	103
   582     06D3  3401               	retlw	1
   583     06D4  3400               	retlw	0
   584     06D5  3464               	retlw	100
   585     06D6  3401               	retlw	1
   586     06D7  3400               	retlw	0
   587     06D8  3460               	retlw	96
   588     06D9  3401               	retlw	1
   589     06DA  3400               	retlw	0
   590     06DB  345C               	retlw	92
   591     06DC  3401               	retlw	1
   592     06DD  3400               	retlw	0
   593     06DE  3459               	retlw	89
   594     06DF  3401               	retlw	1
   595     06E0  3400               	retlw	0
   596     06E1  3455               	retlw	85
   597     06E2  3401               	retlw	1
   598     06E3  3400               	retlw	0
   599     06E4  3452               	retlw	82
   600     06E5  3401               	retlw	1
   601     06E6  3400               	retlw	0
   602     06E7  344F               	retlw	79
   603     06E8  3401               	retlw	1
   604     06E9  3400               	retlw	0
   605     06EA  344B               	retlw	75
   606     06EB  3401               	retlw	1
   607     06EC  3400               	retlw	0
   608     06ED  3448               	retlw	72
   609     06EE  3401               	retlw	1
   610     06EF  3400               	retlw	0
   611     06F0  3445               	retlw	69
   612     06F1  3401               	retlw	1
   613     06F2  3400               	retlw	0
   614     06F3  3442               	retlw	66
   615     06F4  3401               	retlw	1
   616     06F5  3400               	retlw	0
   617     06F6  343F               	retlw	63
   618     06F7  3401               	retlw	1
   619     06F8  3400               	retlw	0
   620     06F9  343C               	retlw	60
   621     06FA  3401               	retlw	1
   622     06FB  3400               	retlw	0
   623     06FC  3439               	retlw	57
   624     06FD  3401               	retlw	1
   625     06FE  3400               	retlw	0
   626     06FF  3436               	retlw	54
   627     0700  3401               	retlw	1
   628     0701  3400               	retlw	0
   629     0702  3434               	retlw	52
   630     0703  3401               	retlw	1
   631     0704  3400               	retlw	0
   632     0705  3431               	retlw	49
   633     0706  3401               	retlw	1
   634     0707  3400               	retlw	0
   635     0708  342E               	retlw	46
   636     0709  3401               	retlw	1
   637     070A  3400               	retlw	0
   638     070B  342B               	retlw	43
   639     070C  3401               	retlw	1
   640     070D  3400               	retlw	0
   641     070E  3429               	retlw	41
   642     070F  3401               	retlw	1
   643     0710  3400               	retlw	0
   644     0711  3426               	retlw	38
   645     0712  3401               	retlw	1
   646     0713  3400               	retlw	0
   647     0714  3424               	retlw	36
   648     0715  3401               	retlw	1
   649     0716  3400               	retlw	0
   650     0717  3421               	retlw	33
   651     0718  3401               	retlw	1
   652     0719  3400               	retlw	0
   653     071A  341F               	retlw	31
   654     071B  3401               	retlw	1
   655     071C  3400               	retlw	0
   656     071D  341C               	retlw	28
   657     071E  3401               	retlw	1
   658     071F  3400               	retlw	0
   659     0720  341A               	retlw	26
   660     0721  3401               	retlw	1
   661     0722  3400               	retlw	0
   662     0723  3418               	retlw	24
   663     0724  3401               	retlw	1
   664     0725  3400               	retlw	0
   665     0726  3416               	retlw	22
   666     0727  3401               	retlw	1
   667     0728  3400               	retlw	0
   668     0729  3413               	retlw	19
   669     072A  3401               	retlw	1
   670     072B  3400               	retlw	0
   671     072C  3411               	retlw	17
   672     072D  3401               	retlw	1
   673     072E  3400               	retlw	0
   674     072F  340F               	retlw	15
   675     0730  3401               	retlw	1
   676     0731  3400               	retlw	0
   677     0732  340D               	retlw	13
   678     0733  3401               	retlw	1
   679     0734  3400               	retlw	0
   680     0735  340B               	retlw	11
   681     0736  3401               	retlw	1
   682     0737  3400               	retlw	0
   683     0738  3409               	retlw	9
   684     0739  3401               	retlw	1
   685     073A  3400               	retlw	0
   686     073B  3407               	retlw	7
   687     073C  3401               	retlw	1
   688     073D  3400               	retlw	0
   689                           
   690                           	psect	idataBANK1
   691     0BB5                     __pidataBANK1:
   692                           
   693                           ;initializer for _sw4_pos
   694     0BB5  3403               	retlw	3
   695                           
   696                           ;initializer for _sw3_pos
   697     0BB6  3403               	retlw	3
   698                           
   699                           ;initializer for _sw2_pos
   700     0BB7  3403               	retlw	3
   701                           
   702                           ;initializer for _sw1_pos
   703     0BB8  3402               	retlw	2
   704                           
   705                           	psect	stringtext1
   706     1000                     __pstringtext1:
   707     1000                     _min_ret_table:
   708     1000  34DC               	retlw	220
   709     1001  3405               	retlw	5
   710     1002  3414               	retlw	20
   711     1003  3405               	retlw	5
   712     1004  344C               	retlw	76
   713     1005  3404               	retlw	4
   714     1006  3484               	retlw	132
   715     1007  3403               	retlw	3
   716     1008                     __end_of_min_ret_table:
   717                           
   718                           	psect	stringtext2
   719     1008                     __pstringtext2:
   720     1008                     _max_adv_table:
   721     1008  34C4               	retlw	196
   722     1009  3409               	retlw	9
   723     100A  3434               	retlw	52
   724     100B  3408               	retlw	8
   725     100C  34A4               	retlw	164
   726     100D  3406               	retlw	6
   727     100E  3414               	retlw	20
   728     100F  3405               	retlw	5
   729     1010                     __end_of_max_adv_table:
   730                           
   731                           	psect	stringtext3
   732     1016                     __pstringtext3:
   733     1016                     _max_adv_grad_table:
   734     1016  3428               	retlw	40
   735     1017  341E               	retlw	30
   736     1018  3414               	retlw	20
   737     1019  340A               	retlw	10
   738     101A                     __end_of_max_adv_grad_table:
   739                           
   740                           	psect	stringtext4
   741     101A                     __pstringtext4:
   742     101A                     _adv_start_rpm_table:
   743     101A  342D               	retlw	45
   744     101B  3423               	retlw	35
   745     101C  3419               	retlw	25
   746     101D  340F               	retlw	15
   747     101E                     __end_of_adv_start_rpm_table:
   748                           
   749                           	psect	stringtext5
   750     1010                     __pstringtext5:
   751     1010                     _numerator_rpm:
   752     1010  347C               	retlw	124
   753     1011  3492               	retlw	146
   754     1012                     __end_of_numerator_rpm:
   755     0014                     _TRISC	set	20
   756     0013                     _TRISB	set	19
   757     0012                     _TRISA	set	18
   758     001A                     _LATC	set	26
   759     0019                     _LATB	set	25
   760     0018                     _LATA	set	24
   761     000E                     _PORTC	set	14
   762     000D                     _PORTB	set	13
   763     000C                     _PORTA	set	12
   764     000D                     _PORTBbits	set	13
   765     000E                     _PORTCbits	set	14
   766     000C                     _PORTAbits	set	12
   767     005E                     _PEIE	set	94
   768     005F                     _GIE	set	95
   769     00C0                     _LATA0	set	192
   770     00D1                     _LATC1	set	209
   771     0064                     _RA4	set	100
   772     0075                     _RC5	set	117
   773     00D2                     _LATC2	set	210
   774     011C                     _SP1BRGH	set	284
   775     011B                     _SP1BRGL	set	283
   776     011E                     _TX1STA	set	286
   777     011D                     _RC1STA	set	285
   778     011F                     _BAUD1CON	set	287
   779     011A                     _TX1REG	set	282
   780     08F1                     _TRMT	set	2289
   781     020C                     _TMR1	set	524
   782     020E                     _T1CON	set	526
   783     0211                     _T1CLK	set	529
   784     020C                     _TMR1L	set	524
   785     020D                     _TMR1H	set	525
   786     1070                     _TMR1ON	set	4208
   787     0310                     _CCPR2	set	784
   788     030C                     _CCPR1	set	780
   789     0313                     _CCP2CAP	set	787
   790     030F                     _CCP1CAP	set	783
   791     0312                     _CCP2CON	set	786
   792     030E                     _CCP1CON	set	782
   793     070E                     _PIR2	set	1806
   794     070D                     _PIR1	set	1805
   795     070C                     _PIR0	set	1804
   796     38B4                     _IOCIE	set	14516
   797     38BD                     _TMR1IE	set	14525
   798     38C7                     _CCP2IE	set	14535
   799     38BF                     _CCP1IE	set	14527
   800     386D                     _TMR1IF	set	14445
   801     3877                     _CCP2IF	set	14455
   802     386F                     _CCP1IF	set	14447
   803     080C                     _WDTCON	set	2060
   804     0892                     _OSCTUNE	set	2194
   805     0893                     _OSCFRQ	set	2195
   806     0891                     _OSCEN	set	2193
   807     1ECB                     _RX1PPS	set	7883
   808     1EA2                     _CCP2PPS	set	7842
   809     1EA1                     _CCP1PPS	set	7841
   810     1E8F                     _PPSLOCKbits	set	7823
   811     1E8F                     _PPSLOCK	set	7823
   812     1F1E                     _RB6PPS	set	7966
   813     1F21                     _RC1PPS	set	7969
   814     1F52                     _INLVLC	set	8018
   815     1F47                     _INLVLB	set	8007
   816     1F3C                     _INLVLA	set	7996
   817     1F4E                     _ANSELC	set	8014
   818     1F43                     _ANSELB	set	8003
   819     1F38                     _ANSELA	set	7992
   820     F9F2                     _IOCAN2	set	63986
   821     F9FA                     _IOCAF2	set	63994
   822     1012                     STR_1:
   823     1012  3425               	retlw	37	;'%'
   824     1013  3464               	retlw	100	;'d'
   825     1014  342C               	retlw	44	;','
   826     1015  3400               	retlw	0
   827                           
   828                           	psect	stringtext6
   829     101E                     __pstringtext6:
   830     101E                     STR_2:
   831     101E  340D               	retlw	13
   832     101F  340A               	retlw	10
   833     1020  3400               	retlw	0
   834                           
   835                           	psect	stringtext7
   836     0000                     __pstringtext7:
   837                           
   838                           	psect	cinit
   839     0177                     start_initialization:	
   840                           ; #config settings
   841                           
   842     0177                     __initialization:	;BIGRAM
   843                           
   844                           ; Initialize objects allocated to BIGRAM
   845     0177  30B5               	movlw	low __pidataBIGRAM
   846     0178  0084               	movwf	4
   847     0179  3085               	movlw	(high __pidataBIGRAM)| (0+128)
   848     017A  0085               	movwf	5
   849     017B  30DE               	movlw	low (0+8414)
   850     017C  0086               	movwf	6
   851     017D  3020               	movlw	high (0+8414)
   852     017E  0087               	movwf	7
   853     017F  3001               	movlw	1
   854     0180  00FF               	movwf	btemp+1
   855     0181  3089               	movlw	137
   856     0182  318C  2405  3181   	fcall	init_ram
   857                           
   858                           ; Initialize objects allocated to BANK1
   859     0185  30B5               	movlw	low __pidataBANK1
   860     0186  0084               	movwf	4
   861     0187  308B               	movlw	(high __pidataBANK1)| (0+128)
   862     0188  0085               	movwf	5
   863     0189  30E9               	movlw	low __pdataBANK1
   864     018A  0086               	movwf	6
   865     018B  3000               	movlw	high __pdataBANK1
   866     018C  0087               	movwf	7
   867     018D  3000               	movlw	0
   868     018E  00FF               	movwf	btemp+1
   869     018F  3004               	movlw	4
   870     0190  318C  2405  3181   	fcall	init_ram
   871                           
   872                           ; Clear objects allocated to BIGRAM
   873     0193  3067               	movlw	low (0+8807)
   874     0194  0084               	movwf	4
   875     0195  3022               	movlw	high (0+8807)
   876     0196  0085               	movwf	5
   877     0197  3089               	movlw	137
   878     0198  00FE               	movwf	btemp
   879     0199  3001               	movlw	1
   880     019A  00FF               	movwf	btemp+1
   881     019B  318B  23F9  3181   	fcall	clear_ram0
   882                           
   883                           ; Clear objects allocated to COMMON
   884     019E  01FC               	clrf	__pbssCOMMON& (0+127)
   885                           
   886                           ; Clear objects allocated to BANK0
   887     019F  3048               	movlw	low __pbssBANK0
   888     01A0  0084               	movwf	4
   889     01A1  3000               	movlw	high __pbssBANK0
   890     01A2  0085               	movwf	5
   891     01A3  3011               	movlw	17
   892     01A4  00FE               	movwf	btemp
   893     01A5  3000               	movlw	0
   894     01A6  00FF               	movwf	btemp+1
   895     01A7  318B  23F9  3181   	fcall	clear_ram0
   896                           
   897                           ; Clear objects allocated to BANK1
   898     01AA  30DE               	movlw	low __pbssBANK1
   899     01AB  0084               	movwf	4
   900     01AC  3000               	movlw	high __pbssBANK1
   901     01AD  0085               	movwf	5
   902     01AE  300B               	movlw	11
   903     01AF  00FE               	movwf	btemp
   904     01B0  3000               	movlw	0
   905     01B1  00FF               	movwf	btemp+1
   906     01B2  318B  23F9  3181   	fcall	clear_ram0
   907                           
   908                           ; Clear objects allocated to BANK2
   909     01B5  3020               	movlw	low __pbssBANK2
   910     01B6  0084               	movwf	4
   911     01B7  3001               	movlw	high __pbssBANK2
   912     01B8  0085               	movwf	5
   913     01B9  3020               	movlw	32
   914     01BA  00FE               	movwf	btemp
   915     01BB  3000               	movlw	0
   916     01BC  00FF               	movwf	btemp+1
   917     01BD  318B  23F9  3181   	fcall	clear_ram0
   918     01C0                     end_of_initialization:	
   919                           ;End of C runtime variable initialization code
   920                           
   921     01C0                     __end_of__initialization:
   922     01C0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   923     01C1  0140               	movlb	0
   924     01C2  318C  2C23         	ljmp	_main	;jump to C main() function
   925                           
   926                           	psect	bssCOMMON
   927     007C                     __pbssCOMMON:
   928     007C                     _map_sel:
   929     007C                     	ds	1
   930                           
   931                           	psect	bssBANK0
   932     0048                     __pbssBANK0:
   933     0048                     _tx_buf:
   934     0048                     	ds	12
   935     0054                     _pu1_2_period_count:
   936     0054                     	ds	2
   937     0056                     _pwj_state:
   938     0056                     	ds	1
   939     0057                     _revlimit_state:
   940     0057                     	ds	1
   941     0058                     _orev_counter:
   942     0058                     	ds	1
   943                           
   944                           	psect	bssBANK1
   945     00DE                     __pbssBANK1:
   946     00DE                     _width:
   947     00DE                     	ds	2
   948     00E0                     _prec:
   949     00E0                     	ds	2
   950     00E2                     _ig_counter:
   951     00E2                     	ds	2
   952     00E4                     _flags:
   953     00E4                     	ds	1
   954     00E5                     _EG_state:
   955     00E5                     	ds	1
   956     00E6                     _rpm:
   957     00E6                     	ds	1
   958     00E7                     _t1_count:
   959     00E7                     	ds	2
   960                           
   961                           	psect	dataBANK1
   962     00E9                     __pdataBANK1:
   963     00E9                     _sw4_pos:
   964     00E9                     	ds	1
   965     00EA                     _sw3_pos:
   966     00EA                     	ds	1
   967     00EB                     _sw2_pos:
   968     00EB                     	ds	1
   969     00EC                     _sw1_pos:
   970     00EC                     	ds	1
   971                           
   972                           	psect	bssBANK2
   973     0120                     __pbssBANK2:
   974     0120                     _dbuf:
   975     0120                     	ds	32
   976                           
   977                           	psect	inittext
   978     0C05                     init_ram:
   979     0C05  00FE               	movwf	btemp
   980     0C06                     initloop:
   981     0C06  0012               	moviw fsr0++
   982     0C07  001E               	movwi fsr1++
   983     0C08  3001               	movlw	1
   984     0C09  02FE               	subwf	btemp,f
   985     0C0A  3000               	movlw	0
   986     0C0B  3BFF               	subwfb	btemp+1,f
   987     0C0C  087F               	movf	btemp+1,w
   988     0C0D  047E               	iorwf	btemp,w
   989     0C0E  1D03               	skipz
   990     0C0F  2C06               	goto	initloop
   991     0C10  3400               	retlw	0
   992                           
   993                           	psect	clrtext
   994     0BF9                     clear_ram0:	
   995                           ;	Called with FSR0 containing the base address, and
   996                           ;	btemp/btemp+1 has the size to clear
   997                           
   998     0BF9  0064               	clrwdt	;clear the watchdog before getting into this loop
   999     0BFA                     clrloop0:
  1000     0BFA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1001     0BFB  3101               	addfsr 0,1
  1002     0BFC  3001               	movlw	1
  1003     0BFD  02FE               	subwf	btemp,f
  1004     0BFE  3000               	movlw	0
  1005     0BFF  3BFF               	subwfb	btemp+1,f
  1006     0C00  087F               	movf	btemp+1,w
  1007     0C01  047E               	iorwf	btemp,w
  1008     0C02  1D03               	skipz
  1009     0C03  2BFA               	goto	clrloop0	;have we reached the end yet?
  1010     0C04  3400               	retlw	0	;all done for this memory range, return
  1011                           
  1012                           	psect	cstackBANK1
  1013     00A0                     __pcstackBANK1:
  1014     00A0                     ??_initialize_system:
  1015     00A0                     ??_check_sw_state:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018     00A0                     ??_ccp1_enable:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021     00A0                     ??_ccp2_disable:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024     00A0                     ??_putch:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     00A0                     ??_Write_Byte:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     00A0                     ?_fputc:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     00A0                     ?___wmul:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036     00A0                     ?___awdiv:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039     00A0                     ?___awmod:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042     00A0                     ?___lwdiv:	
  1043                           ; 2 bytes @ 0x0
  1044                           
  1045     00A0                     Write_Byte@chr:	
  1046                           ; 2 bytes @ 0x0
  1047                           
  1048     00A0                     ___wmul@multiplier:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051     00A0                     ___awdiv@divisor:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054     00A0                     ___awmod@divisor:	
  1055                           ; 2 bytes @ 0x0
  1056                           
  1057     00A0                     ___lwdiv@divisor:	
  1058                           ; 2 bytes @ 0x0
  1059                           
  1060     00A0                     fputc@c:	
  1061                           ; 2 bytes @ 0x0
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x0
  1065     00A0                     	ds	1
  1066     00A1                     ?_WriteString:
  1067     00A1                     WriteString@str:	
  1068                           ; 1 bytes @ 0x1
  1069                           
  1070                           
  1071                           ; 2 bytes @ 0x1
  1072     00A1                     	ds	1
  1073     00A2                     fputc@fp:
  1074     00A2                     ___wmul@multiplicand:	
  1075                           ; 1 bytes @ 0x2
  1076                           
  1077     00A2                     ___awdiv@dividend:	
  1078                           ; 2 bytes @ 0x2
  1079                           
  1080     00A2                     ___awmod@dividend:	
  1081                           ; 2 bytes @ 0x2
  1082                           
  1083     00A2                     ___lwdiv@dividend:	
  1084                           ; 2 bytes @ 0x2
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x2
  1088     00A2                     	ds	1
  1089     00A3                     ??_WriteString:
  1090     00A3                     ??_fputc:	
  1091                           ; 1 bytes @ 0x3
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x3
  1095     00A3                     	ds	1
  1096     00A4                     ??___wmul:
  1097     00A4                     ??___awdiv:	
  1098                           ; 1 bytes @ 0x4
  1099                           
  1100     00A4                     ??___awmod:	
  1101                           ; 1 bytes @ 0x4
  1102                           
  1103     00A4                     ??___lwdiv:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106     00A4                     ___wmul@product:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x4
  1111     00A4                     	ds	1
  1112     00A5                     ___awdiv@counter:
  1113     00A5                     ___awmod@counter:	
  1114                           ; 1 bytes @ 0x5
  1115                           
  1116     00A5                     ___lwdiv@quotient:	
  1117                           ; 1 bytes @ 0x5
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x5
  1121     00A5                     	ds	1
  1122     00A6                     ?___tmul:
  1123     00A6                     ___awdiv@sign:	
  1124                           ; 3 bytes @ 0x6
  1125                           
  1126     00A6                     ___awmod@sign:	
  1127                           ; 1 bytes @ 0x6
  1128                           
  1129     00A6                     ___tmul@multiplier:	
  1130                           ; 1 bytes @ 0x6
  1131                           
  1132                           
  1133                           ; 3 bytes @ 0x6
  1134     00A6                     	ds	1
  1135     00A7                     ?_abs:
  1136     00A7                     ___lwdiv@counter:	
  1137                           ; 2 bytes @ 0x7
  1138                           
  1139     00A7                     ___awdiv@quotient:	
  1140                           ; 1 bytes @ 0x7
  1141                           
  1142     00A7                     abs@a:	
  1143                           ; 2 bytes @ 0x7
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x7
  1147     00A7                     	ds	2
  1148     00A9                     ??_abs:
  1149     00A9                     ___tmul@multiplicand:	
  1150                           ; 1 bytes @ 0x9
  1151                           
  1152                           
  1153                           ; 3 bytes @ 0x9
  1154     00A9                     	ds	2
  1155     00AB                     ?_vfpfcnvrt:
  1156     00AB                     vfpfcnvrt@fmt:	
  1157                           ; 1 bytes @ 0xB
  1158                           
  1159                           
  1160                           ; 1 bytes @ 0xB
  1161     00AB                     	ds	1
  1162     00AC                     ??___tmul:
  1163     00AC                     vfpfcnvrt@ap:	
  1164                           ; 1 bytes @ 0xC
  1165                           
  1166     00AC                     ___tmul@product:	
  1167                           ; 1 bytes @ 0xC
  1168                           
  1169                           
  1170                           ; 3 bytes @ 0xC
  1171     00AC                     	ds	1
  1172     00AD                     ??_vfpfcnvrt:
  1173                           
  1174                           ; 1 bytes @ 0xD
  1175     00AD                     	ds	2
  1176     00AF                     ??_calc_map:
  1177                           
  1178                           ; 1 bytes @ 0xF
  1179     00AF                     	ds	2
  1180     00B1                     vfpfcnvrt@done:
  1181                           
  1182                           ; 1 bytes @ 0x11
  1183     00B1                     	ds	1
  1184     00B2                     vfpfcnvrt@fp:
  1185                           
  1186                           ; 1 bytes @ 0x12
  1187     00B2                     	ds	1
  1188     00B3                     vfpfcnvrt@cp:
  1189                           
  1190                           ; 2 bytes @ 0x13
  1191     00B3                     	ds	2
  1192     00B5                     vfpfcnvrt@convarg:
  1193                           
  1194                           ; 4 bytes @ 0x15
  1195     00B5                     	ds	4
  1196     00B9                     vfpfcnvrt@c:
  1197                           
  1198                           ; 1 bytes @ 0x19
  1199     00B9                     	ds	1
  1200     00BA                     ?_vfprintf:
  1201     00BA                     vfprintf@fmt:	
  1202                           ; 2 bytes @ 0x1A
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0x1A
  1206     00BA                     	ds	1
  1207     00BB                     calc_map@temp:
  1208                           
  1209                           ; 3 bytes @ 0x1B
  1210     00BB                     	ds	1
  1211     00BC                     vfprintf@ap:
  1212                           
  1213                           ; 1 bytes @ 0x1C
  1214     00BC                     	ds	1
  1215     00BD                     ??_vfprintf:
  1216                           
  1217                           ; 1 bytes @ 0x1D
  1218     00BD                     	ds	1
  1219     00BE                     vfprintf@fp:
  1220     00BE                     calc_map@temp1:	
  1221                           ; 1 bytes @ 0x1E
  1222                           
  1223                           
  1224                           ; 3 bytes @ 0x1E
  1225     00BE                     	ds	1
  1226     00BF                     vfprintf@cfmt:
  1227                           
  1228                           ; 2 bytes @ 0x1F
  1229     00BF                     	ds	2
  1230     00C1                     ?_sprintf:
  1231     00C1                     calc_map@coeff_p1_p2:	
  1232                           ; 2 bytes @ 0x21
  1233                           
  1234     00C1                     sprintf@fmt:	
  1235                           ; 1 bytes @ 0x21
  1236                           
  1237                           
  1238                           ; 2 bytes @ 0x21
  1239     00C1                     	ds	1
  1240     00C2                     calc_map@coeff_p3_p4:
  1241                           
  1242                           ; 1 bytes @ 0x22
  1243     00C2                     	ds	1
  1244     00C3                     calc_map@p1y:
  1245                           
  1246                           ; 2 bytes @ 0x23
  1247     00C3                     	ds	2
  1248     00C5                     ??_sprintf:
  1249     00C5                     calc_map@p2y:	
  1250                           ; 1 bytes @ 0x25
  1251                           
  1252                           
  1253                           ; 2 bytes @ 0x25
  1254     00C5                     	ds	1
  1255     00C6                     sprintf@ap:
  1256                           
  1257                           ; 1 bytes @ 0x26
  1258     00C6                     	ds	1
  1259     00C7                     sprintf@s:
  1260     00C7                     calc_map@p3y:	
  1261                           ; 1 bytes @ 0x27
  1262                           
  1263                           
  1264                           ; 2 bytes @ 0x27
  1265     00C7                     	ds	1
  1266     00C8                     sprintf@f:
  1267                           
  1268                           ; 11 bytes @ 0x28
  1269     00C8                     	ds	1
  1270     00C9                     calc_map@p4y:
  1271                           
  1272                           ; 2 bytes @ 0x29
  1273     00C9                     	ds	2
  1274     00CB                     calc_map@p1x:
  1275                           
  1276                           ; 1 bytes @ 0x2B
  1277     00CB                     	ds	1
  1278     00CC                     calc_map@p2x:
  1279                           
  1280                           ; 1 bytes @ 0x2C
  1281     00CC                     	ds	1
  1282     00CD                     calc_map@p3x:
  1283                           
  1284                           ; 1 bytes @ 0x2D
  1285     00CD                     	ds	1
  1286     00CE                     calc_map@p4x:
  1287                           
  1288                           ; 1 bytes @ 0x2E
  1289     00CE                     	ds	1
  1290     00CF                     calc_map@a:
  1291                           
  1292                           ; 1 bytes @ 0x2F
  1293     00CF                     	ds	4
  1294     00D3                     ??_Write_table:
  1295                           
  1296                           ; 1 bytes @ 0x33
  1297     00D3                     	ds	2
  1298     00D5                     Write_table@tx_data:
  1299                           
  1300                           ; 8 bytes @ 0x35
  1301     00D5                     	ds	8
  1302     00DD                     Write_table@a:
  1303                           
  1304                           ; 1 bytes @ 0x3D
  1305     00DD                     	ds	1
  1306     00DE                     ??_main:
  1307                           
  1308                           	psect	cstackCOMMON
  1309     0070                     __pcstackCOMMON:	
  1310                           ; 1 bytes @ 0x3E
  1311                           
  1312     0070                     ?_initialize_system:
  1313     0070                     ?_check_sw_state:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316     0070                     ?_calc_map:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319     0070                     ?_ccp1_enable:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322     0070                     ?_Write_table:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325     0070                     ?_ccp1_disable:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328     0070                     ??_ccp1_disable:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331     0070                     ?_ccp2_enable:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334     0070                     ??_ccp2_enable:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337     0070                     ?_ccp2_disable:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340     0070                     ?_ignition_disable:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343     0070                     ??_ignition_disable:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346     0070                     ?_putch:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349     0070                     ?_main:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352     0070                     ?_Write_Byte:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355     0070                     ?_InterruptManager:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358     0070                     ?i1_calc_map:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361     0070                     ?i1_ccp1_enable:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364     0070                     ??i1_ccp1_enable:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367     0070                     ?i1_ccp2_disable:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370     0070                     ??i1_ccp2_disable:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373     0070                     ?i1___wmul:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376     0070                     ?i1___lwdiv:	
  1377                           ; 2 bytes @ 0x0
  1378                           
  1379     0070                     putch@c:	
  1380                           ; 2 bytes @ 0x0
  1381                           
  1382     0070                     i1___wmul@multiplier:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385     0070                     i1___lwdiv@divisor:	
  1386                           ; 2 bytes @ 0x0
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x0
  1390     0070                     	ds	2
  1391     0072                     i1___wmul@multiplicand:
  1392     0072                     i1___lwdiv@dividend:	
  1393                           ; 2 bytes @ 0x2
  1394                           
  1395                           
  1396                           ; 2 bytes @ 0x2
  1397     0072                     	ds	2
  1398     0074                     ??i1___wmul:
  1399     0074                     ??i1___lwdiv:	
  1400                           ; 1 bytes @ 0x4
  1401                           
  1402     0074                     i1___wmul@product:	
  1403                           ; 1 bytes @ 0x4
  1404                           
  1405                           
  1406                           ; 2 bytes @ 0x4
  1407     0074                     	ds	1
  1408     0075                     i1___lwdiv@quotient:
  1409                           
  1410                           ; 2 bytes @ 0x5
  1411     0075                     	ds	1
  1412     0076                     ?i1___tmul:
  1413     0076                     i1___tmul@multiplier:	
  1414                           ; 3 bytes @ 0x6
  1415                           
  1416                           
  1417                           ; 3 bytes @ 0x6
  1418     0076                     	ds	1
  1419     0077                     i1___lwdiv@counter:
  1420                           
  1421                           ; 1 bytes @ 0x7
  1422     0077                     	ds	2
  1423     0079                     i1___tmul@multiplicand:
  1424                           
  1425                           ; 3 bytes @ 0x9
  1426     0079                     	ds	3
  1427     007C                     ??i1___tmul:
  1428                           
  1429                           	psect	cstackBANK0
  1430     0020                     __pcstackBANK0:	
  1431                           ; 1 bytes @ 0xC
  1432                           
  1433     0020                     i1___tmul@product:
  1434                           
  1435                           ; 3 bytes @ 0x0
  1436     0020                     	ds	3
  1437     0023                     ??i1_calc_map:
  1438                           
  1439                           ; 1 bytes @ 0x3
  1440     0023                     	ds	12
  1441     002F                     i1calc_map@temp:
  1442                           
  1443                           ; 3 bytes @ 0xF
  1444     002F                     	ds	3
  1445     0032                     i1calc_map@temp1:
  1446                           
  1447                           ; 3 bytes @ 0x12
  1448     0032                     	ds	3
  1449     0035                     i1calc_map@coeff_p1_p2:
  1450                           
  1451                           ; 1 bytes @ 0x15
  1452     0035                     	ds	1
  1453     0036                     i1calc_map@coeff_p3_p4:
  1454                           
  1455                           ; 1 bytes @ 0x16
  1456     0036                     	ds	1
  1457     0037                     i1calc_map@p1y:
  1458                           
  1459                           ; 2 bytes @ 0x17
  1460     0037                     	ds	2
  1461     0039                     i1calc_map@p2y:
  1462                           
  1463                           ; 2 bytes @ 0x19
  1464     0039                     	ds	2
  1465     003B                     i1calc_map@p3y:
  1466                           
  1467                           ; 2 bytes @ 0x1B
  1468     003B                     	ds	2
  1469     003D                     i1calc_map@p4y:
  1470                           
  1471                           ; 2 bytes @ 0x1D
  1472     003D                     	ds	2
  1473     003F                     i1calc_map@p1x:
  1474                           
  1475                           ; 1 bytes @ 0x1F
  1476     003F                     	ds	1
  1477     0040                     i1calc_map@p2x:
  1478                           
  1479                           ; 1 bytes @ 0x20
  1480     0040                     	ds	1
  1481     0041                     i1calc_map@p3x:
  1482                           
  1483                           ; 1 bytes @ 0x21
  1484     0041                     	ds	1
  1485     0042                     i1calc_map@p4x:
  1486                           
  1487                           ; 1 bytes @ 0x22
  1488     0042                     	ds	1
  1489     0043                     i1calc_map@a:
  1490                           
  1491                           ; 1 bytes @ 0x23
  1492     0043                     	ds	1
  1493     0044                     ??_InterruptManager:
  1494                           
  1495                           ; 1 bytes @ 0x24
  1496     0044                     	ds	4
  1497                           
  1498                           	psect	maintext
  1499     0C23                     __pmaintext:	
  1500 ;;
  1501 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1502 ;;
  1503 ;; *************** function _main *****************
  1504 ;; Defined at:
  1505 ;;		line 161 in file "main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : B3F/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels required when called: 9
  1525 ;; This function calls:
  1526 ;;		_Write_table
  1527 ;;		_calc_map
  1528 ;;		_ccp1_enable
  1529 ;;		_check_sw_state
  1530 ;;		_initialize_system
  1531 ;; This function is called by:
  1532 ;;		Startup code after reset
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536     0C23                     _main:	
  1537                           ;psect for function _main
  1538                           
  1539     0C23                     l2861:	
  1540                           ;incstack = 0
  1541                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1542                           
  1543                           
  1544                           ;main.c: 162:     initialize_system();
  1545     0C23  318E  26A6  318C   	fcall	_initialize_system
  1546     0C26                     l2863:
  1547                           
  1548                           ;main.c: 163:     LATC2 = (0);
  1549     0C26  0140               	movlb	0	; select bank0
  1550     0C27  111A               	bcf	26,2	;volatile
  1551     0C28                     l2865:
  1552                           
  1553                           ;main.c: 164:     check_sw_state();
  1554     0C28  318D  25F0  318C   	fcall	_check_sw_state
  1555     0C2B                     l2867:
  1556                           
  1557                           ;main.c: 165:     calc_map();
  1558     0C2B  3183  23C1  318C   	fcall	_calc_map
  1559     0C2E                     l2869:
  1560                           
  1561                           ;main.c: 166:     ccp1_enable();
  1562     0C2E  318B  23DA  318C   	fcall	_ccp1_enable
  1563     0C31                     l2871:
  1564                           
  1565                           ;main.c: 169:         check_sw_state();
  1566     0C31  318D  25F0  318C   	fcall	_check_sw_state
  1567                           
  1568                           ;main.c: 170:         Write_table();
  1569     0C34  3187  273E  318C   	fcall	_Write_table
  1570     0C37  2C31               	goto	l2871
  1571     0C38  3181  2975         	ljmp	start
  1572     0C3A                     __end_of_main:
  1573                           
  1574                           	psect	text1
  1575     0EA6                     __ptext1:	
  1576 ;; *************** function _initialize_system *****************
  1577 ;; Defined at:
  1578 ;;		line 449 in file "main.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, pclath, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 4
  1599 ;; This function calls:
  1600 ;;		_ccp2_disable
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606     0EA6                     _initialize_system:	
  1607                           ;psect for function _initialize_system
  1608                           
  1609     0EA6                     l2651:	
  1610                           ;incstack = 0
  1611                           ; Regs used in _initialize_system: [wreg+status,2+status,0+pclath+cstack]
  1612                           
  1613                           
  1614                           ;main.c: 451:     OSCEN = 0x40;
  1615     0EA6  3040               	movlw	64
  1616     0EA7  0151               	movlb	17	; select bank17
  1617     0EA8  0091               	movwf	17	;volatile
  1618                           
  1619                           ;main.c: 452:     OSCFRQ = 0x05;
  1620     0EA9  3005               	movlw	5
  1621     0EAA  0093               	movwf	19	;volatile
  1622     0EAB                     l2653:
  1623                           
  1624                           ;main.c: 453:     OSCTUNE = 0X00;
  1625     0EAB  0192               	clrf	18	;volatile
  1626     0EAC                     l2655:
  1627                           
  1628                           ;main.c: 456:     PORTA = 0x00;
  1629     0EAC  0140               	movlb	0	; select bank0
  1630     0EAD  018C               	clrf	12	;volatile
  1631     0EAE                     l2657:
  1632                           
  1633                           ;main.c: 457:     PORTB = 0x00;
  1634     0EAE  018D               	clrf	13	;volatile
  1635     0EAF                     l2659:
  1636                           
  1637                           ;main.c: 458:     PORTC = 0x00;
  1638     0EAF  018E               	clrf	14	;volatile
  1639     0EB0                     l2661:
  1640                           
  1641                           ;main.c: 459:     LATA = 0x00;
  1642     0EB0  0198               	clrf	24	;volatile
  1643     0EB1                     l2663:
  1644                           
  1645                           ;main.c: 460:     LATB = 0x00;
  1646     0EB1  0199               	clrf	25	;volatile
  1647     0EB2                     l2665:
  1648                           
  1649                           ;main.c: 461:     LATC = 0x00;
  1650     0EB2  019A               	clrf	26	;volatile
  1651     0EB3                     l2667:
  1652                           
  1653                           ;main.c: 462:     ANSELA = 0x00;
  1654     0EB3  017E               	movlb	62	; select bank62
  1655     0EB4  01B8               	clrf	56	;volatile
  1656     0EB5                     l2669:
  1657                           
  1658                           ;main.c: 463:     ANSELB = 0x00;
  1659     0EB5  01C3               	clrf	67	;volatile
  1660     0EB6                     l2671:
  1661                           
  1662                           ;main.c: 464:     ANSELC = 0x00;
  1663     0EB6  01CE               	clrf	78	;volatile
  1664                           
  1665                           ;main.c: 467:     TRISA = 0b00110100;
  1666     0EB7  3034               	movlw	52
  1667     0EB8  0140               	movlb	0	; select bank0
  1668     0EB9  0092               	movwf	18	;volatile
  1669                           
  1670                           ;main.c: 468:     TRISB = 0b10110000;
  1671     0EBA  30B0               	movlw	176
  1672     0EBB  0093               	movwf	19	;volatile
  1673                           
  1674                           ;main.c: 469:     TRISC = 0b11111001;
  1675     0EBC  30F9               	movlw	249
  1676     0EBD  0094               	movwf	20	;volatile
  1677                           
  1678                           ;main.c: 470:     INLVLA = 0b00110100;
  1679     0EBE  3034               	movlw	52
  1680     0EBF  017E               	movlb	62	; select bank62
  1681     0EC0  00BC               	movwf	60	;volatile
  1682                           
  1683                           ;main.c: 471:     INLVLB = 0b10110000;
  1684     0EC1  30B0               	movlw	176
  1685     0EC2  00C7               	movwf	71	;volatile
  1686                           
  1687                           ;main.c: 472:     INLVLC = 0b11111001;
  1688     0EC3  30F9               	movlw	249
  1689     0EC4  00D2               	movwf	82	;volatile
  1690                           
  1691                           ;main.c: 475:     T1CLK = 0b00000001;
  1692     0EC5  3001               	movlw	1
  1693     0EC6  0144               	movlb	4	; select bank4
  1694     0EC7  0091               	movwf	17	;volatile
  1695                           
  1696                           ;main.c: 476:     T1CON = 0b00110000;
  1697     0EC8  3030               	movlw	48
  1698     0EC9  008E               	movwf	14	;volatile
  1699     0ECA                     l2673:
  1700                           
  1701                           ;main.c: 477:     TMR1 = 0x0000;
  1702     0ECA  018C               	clrf	12	;volatile
  1703     0ECB  018D               	clrf	13	;volatile
  1704     0ECC                     l2675:
  1705                           
  1706                           ;main.c: 482:     CCP1CAP = 0x0;
  1707     0ECC  0146               	movlb	6	; select bank6
  1708     0ECD  018F               	clrf	15	;volatile
  1709     0ECE                     l2677:
  1710                           
  1711                           ;main.c: 483:     CCP2CAP = 0x0;
  1712     0ECE  0193               	clrf	19	;volatile
  1713     0ECF                     l2679:
  1714                           
  1715                           ;main.c: 484:     CCPR1 = 0x0000;
  1716     0ECF  018C               	clrf	12	;volatile
  1717     0ED0  018D               	clrf	13	;volatile
  1718     0ED1                     l2681:
  1719                           
  1720                           ;main.c: 485:     CCPR2 = 0x0000;
  1721     0ED1  0190               	clrf	16	;volatile
  1722     0ED2  0191               	clrf	17	;volatile
  1723     0ED3                     l2683:
  1724                           
  1725                           ;main.c: 488:     IOCAN2 = 1;
  1726     0ED3  017E               	movlb	62	; select bank62
  1727     0ED4  153E               	bsf	62,2	;volatile
  1728     0ED5                     l2685:
  1729                           
  1730                           ;main.c: 491:     PPSLOCK = 0x55;
  1731     0ED5  3055               	movlw	85
  1732     0ED6  017D               	movlb	61	; select bank61
  1733     0ED7  008F               	movwf	15	;volsfr
  1734     0ED8                     l2687:
  1735                           
  1736                           ;main.c: 492:     PPSLOCK = 0xAA;
  1737     0ED8  30AA               	movlw	170
  1738     0ED9  008F               	movwf	15	;volsfr
  1739     0EDA                     l2689:
  1740                           
  1741                           ;main.c: 493:     PPSLOCKbits.PPSLOCKED = 0;
  1742     0EDA  100F               	bcf	15,0	;volsfr
  1743     0EDB                     l2691:
  1744                           
  1745                           ;main.c: 494:     CCP1PPS = 0x10;
  1746     0EDB  3010               	movlw	16
  1747     0EDC  00A1               	movwf	33	;volatile
  1748     0EDD                     l2693:
  1749                           
  1750                           ;main.c: 495:     CCP2PPS = 0b00010001;
  1751     0EDD  3011               	movlw	17
  1752     0EDE  00A2               	movwf	34	;volatile
  1753     0EDF                     l2695:
  1754                           
  1755                           ;main.c: 496:     RC1PPS = 0x02;
  1756     0EDF  3002               	movlw	2
  1757     0EE0  017E               	movlb	62	; select bank62
  1758     0EE1  00A1               	movwf	33	;volatile
  1759     0EE2                     l2697:
  1760                           
  1761                           ;main.c: 497:     RX1PPS = 0x0F;
  1762     0EE2  300F               	movlw	15
  1763     0EE3  017D               	movlb	61	; select bank61
  1764     0EE4  00CB               	movwf	75	;volatile
  1765     0EE5                     l2699:
  1766                           
  1767                           ;main.c: 498:     RB6PPS = 0x05;
  1768     0EE5  3005               	movlw	5
  1769     0EE6  017E               	movlb	62	; select bank62
  1770     0EE7  009E               	movwf	30	;volatile
  1771     0EE8                     l2701:
  1772                           
  1773                           ;main.c: 499:     PPSLOCK = 0x55;
  1774     0EE8  3055               	movlw	85
  1775     0EE9  017D               	movlb	61	; select bank61
  1776     0EEA  008F               	movwf	15	;volsfr
  1777     0EEB                     l2703:
  1778                           
  1779                           ;main.c: 500:     PPSLOCK = 0xAA;
  1780     0EEB  30AA               	movlw	170
  1781     0EEC  008F               	movwf	15	;volsfr
  1782     0EED                     l2705:
  1783                           
  1784                           ;main.c: 501:     PPSLOCKbits.PPSLOCKED = 1;
  1785     0EED  140F               	bsf	15,0	;volsfr
  1786                           
  1787                           ;main.c: 504:     BAUD1CON = 0x00;
  1788     0EEE  0142               	movlb	2	; select bank2
  1789     0EEF  019F               	clrf	31	;volatile
  1790                           
  1791                           ;main.c: 505:     RC1STA = 0x00;
  1792     0EF0  019D               	clrf	29	;volatile
  1793                           
  1794                           ;main.c: 506:     TX1STA = 0x00;
  1795     0EF1  019E               	clrf	30	;volatile
  1796                           
  1797                           ;main.c: 507:     SP1BRGL = 0x00;
  1798     0EF2  019B               	clrf	27	;volatile
  1799                           
  1800                           ;main.c: 508:     SP1BRGH = 0x00;
  1801     0EF3  019C               	clrf	28	;volatile
  1802     0EF4                     l2707:
  1803                           
  1804                           ;main.c: 510:     BAUD1CON = 0x40;
  1805     0EF4  3040               	movlw	64
  1806     0EF5  009F               	movwf	31	;volatile
  1807     0EF6                     l2709:
  1808                           
  1809                           ;main.c: 512:     RC1STA = 0x80;
  1810     0EF6  3080               	movlw	128
  1811     0EF7  009D               	movwf	29	;volatile
  1812     0EF8                     l2711:
  1813                           
  1814                           ;main.c: 514:     TX1STA = 0x26;
  1815     0EF8  3026               	movlw	38
  1816     0EF9  009E               	movwf	30	;volatile
  1817     0EFA                     l2713:
  1818                           
  1819                           ;main.c: 516:     SP1BRGL = 0x22;
  1820     0EFA  3022               	movlw	34
  1821     0EFB  009B               	movwf	27	;volatile
  1822                           
  1823                           ;main.c: 518:     SP1BRGH = 0x0;
  1824     0EFC  019C               	clrf	28	;volatile
  1825     0EFD                     l2715:
  1826                           
  1827                           ;main.c: 521:     WDTCON = 0x13;
  1828     0EFD  3013               	movlw	19
  1829     0EFE  0150               	movlb	16	; select bank16
  1830     0EFF  008C               	movwf	12	;volatile
  1831     0F00                     l2717:
  1832                           
  1833                           ;main.c: 524:     PIR0 = 0x0;
  1834     0F00  014E               	movlb	14	; select bank14
  1835     0F01  018C               	clrf	12	;volatile
  1836     0F02                     l2719:
  1837                           
  1838                           ;main.c: 525:     PIR1 = 0x0;
  1839     0F02  018D               	clrf	13	;volatile
  1840     0F03                     l2721:
  1841                           
  1842                           ;main.c: 526:     PIR2 = 0x0;
  1843     0F03  018E               	clrf	14	;volatile
  1844     0F04                     l2723:
  1845                           
  1846                           ;main.c: 529:     GIE = 1;
  1847     0F04  178B               	bsf	11,7	;volatile
  1848     0F05                     l2725:
  1849                           
  1850                           ;main.c: 530:     PEIE = 1;
  1851     0F05  170B               	bsf	11,6	;volatile
  1852     0F06                     l2727:
  1853                           
  1854                           ;main.c: 531:     CCP1IE = 1;
  1855     0F06  1797               	bsf	23,7	;volatile
  1856     0F07                     l2729:
  1857                           
  1858                           ;main.c: 532:     CCP2IE = 1;
  1859     0F07  1798               	bsf	24,7	;volatile
  1860     0F08                     l2731:
  1861                           
  1862                           ;main.c: 533:     TMR1IE = 1;
  1863     0F08  1697               	bsf	23,5	;volatile
  1864     0F09                     l2733:
  1865                           
  1866                           ;main.c: 534:     IOCIE = 1;
  1867     0F09  1616               	bsf	22,4	;volatile
  1868     0F0A                     l2735:
  1869                           
  1870                           ;main.c: 536:     ccp2_disable();
  1871     0F0A  318B  23C3  318E   	fcall	_ccp2_disable
  1872     0F0D                     l2737:
  1873                           
  1874                           ;main.c: 537:     LATC1 = 0;
  1875     0F0D  0140               	movlb	0	; select bank0
  1876     0F0E  109A               	bcf	26,1	;volatile
  1877     0F0F                     l314:
  1878     0F0F  0008               	return
  1879     0F10                     __end_of_initialize_system:
  1880                           
  1881                           	psect	text2
  1882     0BC3                     __ptext2:	
  1883 ;; *************** function _ccp2_disable *****************
  1884 ;; Defined at:
  1885 ;;		line 440 in file "main.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		status,2
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 3
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_initialize_system
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913     0BC3                     _ccp2_disable:	
  1914                           ;psect for function _ccp2_disable
  1915                           
  1916     0BC3                     l2619:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _ccp2_disable: [status,2]
  1919                           
  1920                           
  1921                           ;main.c: 441:     CCP2IE = 0;
  1922     0BC3  014E               	movlb	14	; select bank14
  1923     0BC4  1398               	bcf	24,7	;volatile
  1924     0BC5                     l2621:
  1925                           
  1926                           ;main.c: 442:     CCP2CON = 0;
  1927     0BC5  0146               	movlb	6	; select bank6
  1928     0BC6  0192               	clrf	18	;volatile
  1929     0BC7                     l311:
  1930     0BC7  0008               	return
  1931     0BC8                     __end_of_ccp2_disable:
  1932                           
  1933                           	psect	text3
  1934     0DF0                     __ptext3:	
  1935 ;; *************** function _check_sw_state *****************
  1936 ;; Defined at:
  1937 ;;		line 269 in file "main.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1954 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1955 ;;Total ram usage:        2 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 3
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965     0DF0                     _check_sw_state:	
  1966                           ;psect for function _check_sw_state
  1967                           
  1968     0DF0                     l2121:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _check_sw_state: [wreg-fsr0h+status,2+status,0]
  1971                           
  1972                           
  1973                           ;main.c: 270:     switch (RC5) {
  1974     0DF0  2DF6               	goto	l2127
  1975     0DF1                     l252:	
  1976                           ;main.c: 271:     case 0:
  1977                           
  1978                           
  1979                           ;main.c: 272:         pwj_state = PWJ_DISABLE;
  1980     0DF1  01D6               	clrf	_pwj_state
  1981     0DF2  0AD6               	incf	_pwj_state,f
  1982                           
  1983                           ;main.c: 273:         break;
  1984     0DF3  2E06               	goto	l2133
  1985     0DF4                     l2123:
  1986                           
  1987                           ;main.c: 275:         pwj_state = PWJ_ENABLE;
  1988     0DF4  01D6               	clrf	_pwj_state
  1989                           
  1990                           ;main.c: 276:         break;
  1991     0DF5  2E06               	goto	l2133
  1992     0DF6                     l2127:
  1993     0DF6  3000               	movlw	0
  1994     0DF7  0140               	movlb	0	; select bank0
  1995     0DF8  1A8E               	btfsc	14,5	;volatile
  1996     0DF9  3001               	movlw	1
  1997                           
  1998                           ; Switch size 1, requested type "simple"
  1999                           ; Number of cases is 2, Range of values is 0 to 1
  2000                           ; switch strategies available:
  2001                           ; Name         Instructions Cycles
  2002                           ; simple_byte            7     4 (average)
  2003                           ; direct_byte           10     6 (fixed)
  2004                           ; jumptable            260     6 (fixed)
  2005                           ;	Chosen strategy is simple_byte
  2006     0DFA  3A00               	xorlw	0	; case 0
  2007     0DFB  1903               	skipnz
  2008     0DFC  2DF1               	goto	l252
  2009     0DFD  3A01               	xorlw	1	; case 1
  2010     0DFE  1903               	skipnz
  2011     0DFF  2DF4               	goto	l2123
  2012     0E00  2E06               	goto	l2133
  2013     0E01                     l256:	
  2014                           ;main.c: 279:     case 0:
  2015                           
  2016                           
  2017                           ;main.c: 280:         revlimit_state = REVLIMIT_DISABLE;
  2018     0E01  01D7               	clrf	_revlimit_state
  2019     0E02  0AD7               	incf	_revlimit_state,f
  2020                           
  2021                           ;main.c: 281:         break;
  2022     0E03  2E10               	goto	l2135
  2023     0E04                     l2129:
  2024                           
  2025                           ;main.c: 283:         revlimit_state = REVLIMIT_ENABLE;
  2026     0E04  01D7               	clrf	_revlimit_state
  2027                           
  2028                           ;main.c: 284:         break;
  2029     0E05  2E10               	goto	l2135
  2030     0E06                     l2133:
  2031     0E06  3000               	movlw	0
  2032     0E07  1A0C               	btfsc	12,4	;volatile
  2033     0E08  3001               	movlw	1
  2034                           
  2035                           ; Switch size 1, requested type "simple"
  2036                           ; Number of cases is 2, Range of values is 0 to 1
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte            7     4 (average)
  2040                           ; direct_byte           10     6 (fixed)
  2041                           ; jumptable            260     6 (fixed)
  2042                           ;	Chosen strategy is simple_byte
  2043     0E09  3A00               	xorlw	0	; case 0
  2044     0E0A  1903               	skipnz
  2045     0E0B  2E01               	goto	l256
  2046     0E0C  3A01               	xorlw	1	; case 1
  2047     0E0D  1903               	skipnz
  2048     0E0E  2E04               	goto	l2129
  2049     0E0F  2E10               	goto	l2135
  2050     0E10                     l2135:
  2051                           
  2052                           ;main.c: 287:     sw1_pos = (PORTCbits.RC4 << 1) + PORTCbits.RC3;
  2053     0E10  0E0E               	swapf	14,w	;volatile
  2054     0E11  3901               	andlw	1
  2055     0E12  0141               	movlb	1	; select bank1
  2056     0E13  00A0               	movwf	??_check_sw_state^(0+128)
  2057     0E14  3001               	movlw	1
  2058     0E15                     u1815:
  2059     0E15  35A0               	lslf	??_check_sw_state^(0+128),f
  2060     0E16  0B89               	decfsz	9,f
  2061     0E17  2E15               	goto	u1815
  2062     0E18  0140               	movlb	0	; select bank0
  2063     0E19  0C0E               	rrf	14,w	;volatile
  2064     0E1A  0141               	movlb	1	; select bank1
  2065     0E1B  00A1               	movwf	(??_check_sw_state+1)^(0+128)
  2066     0E1C  0CA1               	rrf	(??_check_sw_state+1)^(0+128),f
  2067     0E1D  0C21               	rrf	(??_check_sw_state+1)^(0+128),w
  2068     0E1E  3901               	andlw	1
  2069     0E1F  0720               	addwf	??_check_sw_state^(0+128),w
  2070     0E20  00EC               	movwf	_sw1_pos^(0+128)
  2071                           
  2072                           ;main.c: 288:     sw2_pos = (PORTCbits.RC6 << 1) + PORTCbits.RC7;
  2073     0E21  0140               	movlb	0	; select bank0
  2074     0E22  0E0E               	swapf	14,w	;volatile
  2075     0E23  0C89               	rrf	9,f
  2076     0E24  0C89               	rrf	9,f
  2077     0E25  3901               	andlw	1
  2078     0E26  0141               	movlb	1	; select bank1
  2079     0E27  00A0               	movwf	??_check_sw_state^(0+128)
  2080     0E28  3001               	movlw	1
  2081     0E29                     u1825:
  2082     0E29  35A0               	lslf	??_check_sw_state^(0+128),f
  2083     0E2A  0B89               	decfsz	9,f
  2084     0E2B  2E29               	goto	u1825
  2085     0E2C  0140               	movlb	0	; select bank0
  2086     0E2D  0D0E               	rlf	14,w	;volatile
  2087     0E2E  0D0E               	rlf	14,w	;volatile
  2088     0E2F  3901               	andlw	1
  2089     0E30  0141               	movlb	1	; select bank1
  2090     0E31  0720               	addwf	??_check_sw_state^(0+128),w
  2091     0E32  00EB               	movwf	_sw2_pos^(0+128)
  2092     0E33                     l2137:
  2093                           
  2094                           ;main.c: 290:     sw3_pos = 3;
  2095     0E33  3003               	movlw	3
  2096     0E34  00EA               	movwf	_sw3_pos^(0+128)
  2097     0E35                     l2139:
  2098                           
  2099                           ;main.c: 291:     sw4_pos = (PORTBbits.RB5 << 1) + PORTBbits.RB4;
  2100     0E35  0140               	movlb	0	; select bank0
  2101     0E36  0E0D               	swapf	13,w	;volatile
  2102     0E37  0C89               	rrf	9,f
  2103     0E38  3901               	andlw	1
  2104     0E39  0141               	movlb	1	; select bank1
  2105     0E3A  00A0               	movwf	??_check_sw_state^(0+128)
  2106     0E3B  3001               	movlw	1
  2107     0E3C                     u1835:
  2108     0E3C  35A0               	lslf	??_check_sw_state^(0+128),f
  2109     0E3D  0B89               	decfsz	9,f
  2110     0E3E  2E3C               	goto	u1835
  2111     0E3F  0140               	movlb	0	; select bank0
  2112     0E40  0E0D               	swapf	13,w	;volatile
  2113     0E41  3901               	andlw	1
  2114     0E42  0141               	movlb	1	; select bank1
  2115     0E43  0720               	addwf	??_check_sw_state^(0+128),w
  2116     0E44  00E9               	movwf	_sw4_pos^(0+128)
  2117     0E45                     l259:
  2118     0E45  0008               	return
  2119     0E46                     __end_of_check_sw_state:
  2120                           
  2121                           	psect	text4
  2122     0BDA                     __ptext4:	
  2123 ;; *************** function _ccp1_enable *****************
  2124 ;; Defined at:
  2125 ;;		line 409 in file "main.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 3
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153     0BDA                     _ccp1_enable:	
  2154                           ;psect for function _ccp1_enable
  2155                           
  2156     0BDA                     l2827:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _ccp1_enable: [wreg]
  2159                           
  2160                           
  2161                           ;main.c: 410:     CCP1IE = 0;
  2162     0BDA  014E               	movlb	14	; select bank14
  2163     0BDB  1397               	bcf	23,7	;volatile
  2164                           
  2165                           ;main.c: 411:     CCP1IF = 0;
  2166     0BDC  138D               	bcf	13,7	;volatile
  2167     0BDD                     l2829:
  2168                           
  2169                           ;main.c: 412:     CCP1CON = 0x84;
  2170     0BDD  3084               	movlw	132
  2171     0BDE  0146               	movlb	6	; select bank6
  2172     0BDF  008E               	movwf	14	;volatile
  2173     0BE0                     l2831:
  2174                           
  2175                           ;main.c: 413:     CCP1IE = 1;
  2176     0BE0  014E               	movlb	14	; select bank14
  2177     0BE1  1797               	bsf	23,7	;volatile
  2178     0BE2                     l302:
  2179     0BE2  0008               	return
  2180     0BE3                     __end_of_ccp1_enable:
  2181                           
  2182                           	psect	text5
  2183     03C1                     __ptext5:	
  2184 ;; *************** function _calc_map *****************
  2185 ;; Defined at:
  2186 ;;		line 218 in file "main.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  temp1           3   30[BANK1 ] unsigned um
  2191 ;;  temp            3   27[BANK1 ] unsigned um
  2192 ;;  p4y             2   41[BANK1 ] unsigned short 
  2193 ;;  p3y             2   39[BANK1 ] unsigned short 
  2194 ;;  p2y             2   37[BANK1 ] unsigned short 
  2195 ;;  p1y             2   35[BANK1 ] unsigned short 
  2196 ;;  a               1   47[BANK1 ] unsigned char 
  2197 ;;  p4x             1   46[BANK1 ] unsigned char 
  2198 ;;  p3x             1   45[BANK1 ] unsigned char 
  2199 ;;  p2x             1   44[BANK1 ] unsigned char 
  2200 ;;  p1x             1   43[BANK1 ] unsigned char 
  2201 ;;  coeff_p3_p4     1   34[BANK1 ] unsigned char 
  2202 ;;  coeff_p1_p2     1   33[BANK1 ] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;Total ram usage:       33 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 4
  2219 ;; This function calls:
  2220 ;;		___lwdiv
  2221 ;;		___tmul
  2222 ;;		___wmul
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228     03C1                     _calc_map:	
  2229                           ;psect for function _calc_map
  2230                           
  2231     03C1                     l2739:	
  2232                           ;incstack = 0
  2233                           ; Regs used in _calc_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2234                           
  2235                           
  2236                           ;main.c: 219:     uint8_t p1x, p2x, p3x, p4x;;main.c: 220:     uint16_t p1y, p2y, p3y, p
      +                          4y;;main.c: 221:     uint8_t coeff_p1_p2, coeff_p3_p4;;main.c: 222:     uint8_t a;;main.
      +                          c: 223:     uint24_t temp;;main.c: 224:     uint24_t temp1;;main.c: 226:     p1x = adv_s
      +                          tart_rpm_table[sw1_pos];
  2237     03C1  0141               	movlb	1	; select bank1
  2238     03C2  086C               	movf	_sw1_pos^(0+128),w
  2239     03C3  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  2240     03C4  0084               	movwf	4
  2241     03C5  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  2242     03C6  1803               	skipnc
  2243     03C7  3E01               	addlw	1
  2244     03C8  0085               	movwf	5
  2245     03C9  0800               	movf	0,w	;code access
  2246     03CA  00CB               	movwf	calc_map@p1x^(0+128)
  2247     03CB                     l2741:
  2248                           
  2249                           ;main.c: 227:     p2x = adv_start_rpm_table[sw1_pos] + max_adv_grad_table[sw3_pos];
  2250     03CB  086A               	movf	_sw3_pos^(0+128),w
  2251     03CC  3E16               	addlw	low (_max_adv_grad_table| (0+32768))
  2252     03CD  0084               	movwf	4
  2253     03CE  3090               	movlw	high (_max_adv_grad_table| (0+32768))
  2254     03CF  1803               	skipnc
  2255     03D0  3E01               	addlw	1
  2256     03D1  0085               	movwf	5
  2257     03D2  0800               	movf	0,w	;code access
  2258     03D3  00AF               	movwf	??_calc_map^(0+128)
  2259     03D4  086C               	movf	_sw1_pos^(0+128),w
  2260     03D5  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  2261     03D6  0084               	movwf	4
  2262     03D7  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  2263     03D8  1803               	skipnc
  2264     03D9  3E01               	addlw	1
  2265     03DA  0085               	movwf	5
  2266     03DB  0800               	movf	0,w	;code access
  2267     03DC  072F               	addwf	??_calc_map^(0+128),w
  2268     03DD  00CC               	movwf	calc_map@p2x^(0+128)
  2269     03DE                     l2743:
  2270                           
  2271                           ;main.c: 228:     p3x = (55);
  2272     03DE  3037               	movlw	55
  2273     03DF  00CD               	movwf	calc_map@p3x^(0+128)
  2274     03E0                     l2745:
  2275                           
  2276                           ;main.c: 229:     p4x = (80);
  2277     03E0  3050               	movlw	80
  2278     03E1  00CE               	movwf	calc_map@p4x^(0+128)
  2279     03E2                     l2747:
  2280                           
  2281                           ;main.c: 230:     p1y = (500);
  2282     03E2  30F4               	movlw	244
  2283     03E3  00C3               	movwf	calc_map@p1y^(0+128)
  2284     03E4  3001               	movlw	1
  2285     03E5  00C4               	movwf	(calc_map@p1y^(0+128)+1)
  2286     03E6                     l2749:
  2287                           
  2288                           ;main.c: 231:     p2y = max_adv_table[sw2_pos];
  2289     03E6  086B               	movf	_sw2_pos^(0+128),w
  2290     03E7  00AF               	movwf	??_calc_map^(0+128)
  2291     03E8  01B0               	clrf	(??_calc_map^(0+128)+1)
  2292     03E9  35AF               	lslf	??_calc_map^(0+128),f
  2293     03EA  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2294     03EB  3008               	movlw	low _max_adv_table
  2295     03EC  072F               	addwf	??_calc_map^(0+128),w
  2296     03ED  0084               	movwf	4
  2297     03EE  3010               	movlw	high _max_adv_table
  2298     03EF  3D30               	addwfc	(??_calc_map+1)^(0+128),w
  2299     03F0  3880               	iorlw	128
  2300     03F1  0085               	movwf	5
  2301     03F2  3F00               	moviw [0]fsr0
  2302     03F3  00C5               	movwf	calc_map@p2y^(0+128)
  2303     03F4  3F01               	moviw [1]fsr0
  2304     03F5  00C6               	movwf	(calc_map@p2y+1)^(0+128)
  2305     03F6                     l2751:
  2306                           
  2307                           ;main.c: 232:     p3y = p2y;
  2308     03F6  0846               	movf	(calc_map@p2y+1)^(0+128),w
  2309     03F7  00C8               	movwf	(calc_map@p3y+1)^(0+128)
  2310     03F8  0845               	movf	calc_map@p2y^(0+128),w
  2311     03F9  00C7               	movwf	calc_map@p3y^(0+128)
  2312     03FA                     l2753:
  2313                           
  2314                           ;main.c: 233:     p4y = min_ret_table[sw4_pos];
  2315     03FA  0869               	movf	_sw4_pos^(0+128),w
  2316     03FB  00AF               	movwf	??_calc_map^(0+128)
  2317     03FC  01B0               	clrf	(??_calc_map^(0+128)+1)
  2318     03FD  35AF               	lslf	??_calc_map^(0+128),f
  2319     03FE  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2320     03FF  3000               	movlw	low _min_ret_table
  2321     0400  072F               	addwf	??_calc_map^(0+128),w
  2322     0401  0084               	movwf	4
  2323     0402  3010               	movlw	high _min_ret_table
  2324     0403  3D30               	addwfc	(??_calc_map+1)^(0+128),w
  2325     0404  3880               	iorlw	128
  2326     0405  0085               	movwf	5
  2327     0406  3F00               	moviw [0]fsr0
  2328     0407  00C9               	movwf	calc_map@p4y^(0+128)
  2329     0408  3F01               	moviw [1]fsr0
  2330     0409  00CA               	movwf	(calc_map@p4y+1)^(0+128)
  2331     040A                     l2755:
  2332                           
  2333                           ;main.c: 234:     coeff_p1_p2 = (uint8_t) ((p2y - p1y) / (p2x - p1x));
  2334     040A  084B               	movf	calc_map@p1x^(0+128),w
  2335     040B  024C               	subwf	calc_map@p2x^(0+128),w
  2336     040C  00A0               	movwf	___lwdiv@divisor^(0+128)
  2337     040D  01A1               	clrf	(___lwdiv@divisor^(0+128)+1)
  2338     040E  1C03               	skipc
  2339     040F  03A1               	decf	(___lwdiv@divisor+1)^(0+128),f
  2340     0410  0845               	movf	calc_map@p2y^(0+128),w
  2341     0411  3E0C               	addlw	12
  2342     0412  00A2               	movwf	___lwdiv@dividend^(0+128)
  2343     0413  30FE               	movlw	254
  2344     0414  3D46               	addwfc	(calc_map@p2y+1)^(0+128),w
  2345     0415  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2346     0416  318D  255F  3183   	fcall	___lwdiv
  2347     0419  0141               	movlb	1	; select bank1
  2348     041A  0820               	movf	?___lwdiv^(0+128),w
  2349     041B  00C1               	movwf	calc_map@coeff_p1_p2^(0+128)
  2350     041C                     l2757:
  2351                           
  2352                           ;main.c: 235:     coeff_p3_p4 = (uint8_t) ((p3y - p4y) / (p4x - p3x));
  2353     041C  3019               	movlw	25
  2354     041D  00A0               	movwf	___lwdiv@divisor^(0+128)
  2355     041E  3000               	movlw	0
  2356     041F  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  2357     0420  0849               	movf	calc_map@p4y^(0+128),w
  2358     0421  0247               	subwf	calc_map@p3y^(0+128),w
  2359     0422  00A2               	movwf	___lwdiv@dividend^(0+128)
  2360     0423  084A               	movf	(calc_map@p4y+1)^(0+128),w
  2361     0424  3B48               	subwfb	(calc_map@p3y+1)^(0+128),w
  2362     0425  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2363     0426  318D  255F  3183   	fcall	___lwdiv
  2364     0429  0141               	movlb	1	; select bank1
  2365     042A  0820               	movf	?___lwdiv^(0+128),w
  2366     042B  00C2               	movwf	calc_map@coeff_p3_p4^(0+128)
  2367     042C                     l2759:
  2368                           
  2369                           ;main.c: 238:     for (a = 15; a <= p1x; a++) {
  2370     042C  300F               	movlw	15
  2371     042D  00CF               	movwf	calc_map@a^(0+128)
  2372     042E  2C46               	goto	l2765
  2373     042F                     l2761:
  2374                           
  2375                           ;main.c: 239:         IG_table[a] = p1y;
  2376     042F  084F               	movf	calc_map@a^(0+128),w
  2377     0430  00AF               	movwf	??_calc_map^(0+128)
  2378     0431  01B0               	clrf	(??_calc_map^(0+128)+1)
  2379     0432  35AF               	lslf	??_calc_map^(0+128),f
  2380     0433  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2381     0434  3067               	movlw	103
  2382     0435  00B1               	movwf	(??_calc_map+2)^(0+128)
  2383     0436  3022               	movlw	34
  2384     0437  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2385     0438  082F               	movf	??_calc_map^(0+128),w
  2386     0439  0731               	addwf	(??_calc_map+2)^(0+128),w
  2387     043A  0086               	movwf	6
  2388     043B  0830               	movf	(??_calc_map+1)^(0+128),w
  2389     043C  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2390     043D  0087               	movwf	7
  2391     043E  0843               	movf	calc_map@p1y^(0+128),w
  2392     043F  3FC0               	movwi [0]fsr1
  2393     0440  0844               	movf	(calc_map@p1y+1)^(0+128),w
  2394     0441  3FC1               	movwi [1]fsr1
  2395     0442                     l2763:
  2396                           
  2397                           ;main.c: 240:     }
  2398     0442  3001               	movlw	1
  2399     0443  00AF               	movwf	??_calc_map^(0+128)
  2400     0444  082F               	movf	??_calc_map^(0+128),w
  2401     0445  07CF               	addwf	calc_map@a^(0+128),f
  2402     0446                     l2765:
  2403     0446  084F               	movf	calc_map@a^(0+128),w
  2404     0447  024B               	subwf	calc_map@p1x^(0+128),w
  2405     0448  1803               	skipnc
  2406     0449  2C4B               	goto	u2521
  2407     044A  2C4C               	goto	u2520
  2408     044B                     u2521:
  2409     044B  2C2F               	goto	l2761
  2410     044C                     u2520:
  2411     044C                     l2767:
  2412                           
  2413                           ;main.c: 241:     for (a = p1x + 1; a <= p2x; a++) {
  2414     044C  084B               	movf	calc_map@p1x^(0+128),w
  2415     044D  3E01               	addlw	1
  2416     044E  00CF               	movwf	calc_map@a^(0+128)
  2417     044F  2C81               	goto	l2773
  2418     0450                     l2769:
  2419                           
  2420                           ;main.c: 242:         IG_table[a] = coeff_p1_p2 + IG_table[a - 1];
  2421     0450  084F               	movf	calc_map@a^(0+128),w
  2422     0451  00AF               	movwf	??_calc_map^(0+128)
  2423     0452  01B0               	clrf	(??_calc_map^(0+128)+1)
  2424     0453  35AF               	lslf	??_calc_map^(0+128),f
  2425     0454  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2426     0455  3065               	movlw	101
  2427     0456  00B1               	movwf	(??_calc_map+2)^(0+128)
  2428     0457  3022               	movlw	34
  2429     0458  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2430     0459  082F               	movf	??_calc_map^(0+128),w
  2431     045A  0731               	addwf	(??_calc_map+2)^(0+128),w
  2432     045B  0086               	movwf	6
  2433     045C  0830               	movf	(??_calc_map+1)^(0+128),w
  2434     045D  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2435     045E  0087               	movwf	7
  2436     045F  3F40               	moviw [0]fsr1
  2437     0460  00B3               	movwf	(??_calc_map+4)^(0+128)
  2438     0461  3F41               	moviw [1]fsr1
  2439     0462  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2440     0463  0841               	movf	calc_map@coeff_p1_p2^(0+128),w
  2441     0464  0733               	addwf	(??_calc_map+4)^(0+128),w
  2442     0465  00B5               	movwf	(??_calc_map+6)^(0+128)
  2443     0466  0834               	movf	(??_calc_map+5)^(0+128),w
  2444     0467  1803               	skipnc
  2445     0468  0A34               	incf	(??_calc_map+5)^(0+128),w
  2446     0469  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2447     046A  084F               	movf	calc_map@a^(0+128),w
  2448     046B  00B7               	movwf	(??_calc_map+8)^(0+128)
  2449     046C  01B8               	clrf	((??_calc_map+8)^(0+128)+1)
  2450     046D  35B7               	lslf	(??_calc_map+8)^(0+128),f
  2451     046E  0DB8               	rlf	((??_calc_map+8)^(0+128)+1),f
  2452     046F  3067               	movlw	103
  2453     0470  00B9               	movwf	(??_calc_map+10)^(0+128)
  2454     0471  3022               	movlw	34
  2455     0472  00BA               	movwf	((??_calc_map+10)^(0+128)+1)
  2456     0473  0837               	movf	(??_calc_map+8)^(0+128),w
  2457     0474  0739               	addwf	(??_calc_map+10)^(0+128),w
  2458     0475  0086               	movwf	6
  2459     0476  0838               	movf	(??_calc_map+9)^(0+128),w
  2460     0477  3D3A               	addwfc	(??_calc_map+11)^(0+128),w
  2461     0478  0087               	movwf	7
  2462     0479  0835               	movf	(??_calc_map+6)^(0+128),w
  2463     047A  3FC0               	movwi [0]fsr1
  2464     047B  0836               	movf	((??_calc_map+6)^(0+128)+1),w
  2465     047C  3FC1               	movwi [1]fsr1
  2466     047D                     l2771:
  2467                           
  2468                           ;main.c: 243:     }
  2469     047D  3001               	movlw	1
  2470     047E  00AF               	movwf	??_calc_map^(0+128)
  2471     047F  082F               	movf	??_calc_map^(0+128),w
  2472     0480  07CF               	addwf	calc_map@a^(0+128),f
  2473     0481                     l2773:
  2474     0481  084F               	movf	calc_map@a^(0+128),w
  2475     0482  024C               	subwf	calc_map@p2x^(0+128),w
  2476     0483  1803               	skipnc
  2477     0484  2C86               	goto	u2531
  2478     0485  2C87               	goto	u2530
  2479     0486                     u2531:
  2480     0486  2C50               	goto	l2769
  2481     0487                     u2530:
  2482     0487                     l2775:
  2483                           
  2484                           ;main.c: 244:     for (a = p2x + 1; a <= p3x; a++) {
  2485     0487  084C               	movf	calc_map@p2x^(0+128),w
  2486     0488  3E01               	addlw	1
  2487     0489  00CF               	movwf	calc_map@a^(0+128)
  2488     048A  2CA2               	goto	l2781
  2489     048B                     l2777:
  2490                           
  2491                           ;main.c: 245:         IG_table[a] = p3y;
  2492     048B  084F               	movf	calc_map@a^(0+128),w
  2493     048C  00AF               	movwf	??_calc_map^(0+128)
  2494     048D  01B0               	clrf	(??_calc_map^(0+128)+1)
  2495     048E  35AF               	lslf	??_calc_map^(0+128),f
  2496     048F  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2497     0490  3067               	movlw	103
  2498     0491  00B1               	movwf	(??_calc_map+2)^(0+128)
  2499     0492  3022               	movlw	34
  2500     0493  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2501     0494  082F               	movf	??_calc_map^(0+128),w
  2502     0495  0731               	addwf	(??_calc_map+2)^(0+128),w
  2503     0496  0086               	movwf	6
  2504     0497  0830               	movf	(??_calc_map+1)^(0+128),w
  2505     0498  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2506     0499  0087               	movwf	7
  2507     049A  0847               	movf	calc_map@p3y^(0+128),w
  2508     049B  3FC0               	movwi [0]fsr1
  2509     049C  0848               	movf	(calc_map@p3y+1)^(0+128),w
  2510     049D  3FC1               	movwi [1]fsr1
  2511     049E                     l2779:
  2512                           
  2513                           ;main.c: 246:     }
  2514     049E  3001               	movlw	1
  2515     049F  00AF               	movwf	??_calc_map^(0+128)
  2516     04A0  082F               	movf	??_calc_map^(0+128),w
  2517     04A1  07CF               	addwf	calc_map@a^(0+128),f
  2518     04A2                     l2781:
  2519     04A2  084F               	movf	calc_map@a^(0+128),w
  2520     04A3  024D               	subwf	calc_map@p3x^(0+128),w
  2521     04A4  1803               	skipnc
  2522     04A5  2CA7               	goto	u2541
  2523     04A6  2CA8               	goto	u2540
  2524     04A7                     u2541:
  2525     04A7  2C8B               	goto	l2777
  2526     04A8                     u2540:
  2527     04A8                     l2783:
  2528                           
  2529                           ;main.c: 247:     for (a = p3x + 1; a <= p4x; a++) {
  2530     04A8  084D               	movf	calc_map@p3x^(0+128),w
  2531     04A9  3E01               	addlw	1
  2532     04AA  00CF               	movwf	calc_map@a^(0+128)
  2533     04AB  2CDD               	goto	l2789
  2534     04AC                     l2785:
  2535                           
  2536                           ;main.c: 248:         IG_table[a] = IG_table[a - 1] - coeff_p3_p4;
  2537     04AC  084F               	movf	calc_map@a^(0+128),w
  2538     04AD  00AF               	movwf	??_calc_map^(0+128)
  2539     04AE  01B0               	clrf	(??_calc_map^(0+128)+1)
  2540     04AF  35AF               	lslf	??_calc_map^(0+128),f
  2541     04B0  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2542     04B1  3065               	movlw	101
  2543     04B2  00B1               	movwf	(??_calc_map+2)^(0+128)
  2544     04B3  3022               	movlw	34
  2545     04B4  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2546     04B5  082F               	movf	??_calc_map^(0+128),w
  2547     04B6  0731               	addwf	(??_calc_map+2)^(0+128),w
  2548     04B7  0086               	movwf	6
  2549     04B8  0830               	movf	(??_calc_map+1)^(0+128),w
  2550     04B9  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2551     04BA  0087               	movwf	7
  2552     04BB  3F40               	moviw [0]fsr1
  2553     04BC  00B3               	movwf	(??_calc_map+4)^(0+128)
  2554     04BD  3F41               	moviw [1]fsr1
  2555     04BE  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2556     04BF  0834               	movf	(??_calc_map+5)^(0+128),w
  2557     04C0  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2558     04C1  0842               	movf	calc_map@coeff_p3_p4^(0+128),w
  2559     04C2  0233               	subwf	(??_calc_map+4)^(0+128),w
  2560     04C3  00B5               	movwf	(??_calc_map+6)^(0+128)
  2561     04C4  1C03               	skipc
  2562     04C5  03B6               	decf	((??_calc_map+6)^(0+128)+1),f
  2563     04C6  084F               	movf	calc_map@a^(0+128),w
  2564     04C7  00B7               	movwf	(??_calc_map+8)^(0+128)
  2565     04C8  01B8               	clrf	((??_calc_map+8)^(0+128)+1)
  2566     04C9  35B7               	lslf	(??_calc_map+8)^(0+128),f
  2567     04CA  0DB8               	rlf	((??_calc_map+8)^(0+128)+1),f
  2568     04CB  3067               	movlw	103
  2569     04CC  00B9               	movwf	(??_calc_map+10)^(0+128)
  2570     04CD  3022               	movlw	34
  2571     04CE  00BA               	movwf	((??_calc_map+10)^(0+128)+1)
  2572     04CF  0837               	movf	(??_calc_map+8)^(0+128),w
  2573     04D0  0739               	addwf	(??_calc_map+10)^(0+128),w
  2574     04D1  0086               	movwf	6
  2575     04D2  0838               	movf	(??_calc_map+9)^(0+128),w
  2576     04D3  3D3A               	addwfc	(??_calc_map+11)^(0+128),w
  2577     04D4  0087               	movwf	7
  2578     04D5  0835               	movf	(??_calc_map+6)^(0+128),w
  2579     04D6  3FC0               	movwi [0]fsr1
  2580     04D7  0836               	movf	((??_calc_map+6)^(0+128)+1),w
  2581     04D8  3FC1               	movwi [1]fsr1
  2582     04D9                     l2787:
  2583                           
  2584                           ;main.c: 249:     }
  2585     04D9  3001               	movlw	1
  2586     04DA  00AF               	movwf	??_calc_map^(0+128)
  2587     04DB  082F               	movf	??_calc_map^(0+128),w
  2588     04DC  07CF               	addwf	calc_map@a^(0+128),f
  2589     04DD                     l2789:
  2590     04DD  084F               	movf	calc_map@a^(0+128),w
  2591     04DE  024E               	subwf	calc_map@p4x^(0+128),w
  2592     04DF  1803               	skipnc
  2593     04E0  2CE2               	goto	u2551
  2594     04E1  2CE3               	goto	u2550
  2595     04E2                     u2551:
  2596     04E2  2CAC               	goto	l2785
  2597     04E3                     u2550:
  2598     04E3                     l2791:
  2599                           
  2600                           ;main.c: 250:     for (a = p4x + 1; a <= 130; a++) {
  2601     04E3  084E               	movf	calc_map@p4x^(0+128),w
  2602     04E4  3E01               	addlw	1
  2603     04E5  00CF               	movwf	calc_map@a^(0+128)
  2604     04E6                     l2793:
  2605     04E6  3083               	movlw	131
  2606     04E7  024F               	subwf	calc_map@a^(0+128),w
  2607     04E8  1C03               	skipc
  2608     04E9  2CEB               	goto	u2561
  2609     04EA  2CEC               	goto	u2560
  2610     04EB                     u2561:
  2611     04EB  2CED               	goto	l2797
  2612     04EC                     u2560:
  2613     04EC  2D05               	goto	l2803
  2614     04ED                     l2797:
  2615                           
  2616                           ;main.c: 251:         IG_table[a] = p4y;
  2617     04ED  084F               	movf	calc_map@a^(0+128),w
  2618     04EE  00AF               	movwf	??_calc_map^(0+128)
  2619     04EF  01B0               	clrf	(??_calc_map^(0+128)+1)
  2620     04F0  35AF               	lslf	??_calc_map^(0+128),f
  2621     04F1  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2622     04F2  3067               	movlw	103
  2623     04F3  00B1               	movwf	(??_calc_map+2)^(0+128)
  2624     04F4  3022               	movlw	34
  2625     04F5  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2626     04F6  082F               	movf	??_calc_map^(0+128),w
  2627     04F7  0731               	addwf	(??_calc_map+2)^(0+128),w
  2628     04F8  0086               	movwf	6
  2629     04F9  0830               	movf	(??_calc_map+1)^(0+128),w
  2630     04FA  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2631     04FB  0087               	movwf	7
  2632     04FC  0849               	movf	calc_map@p4y^(0+128),w
  2633     04FD  3FC0               	movwi [0]fsr1
  2634     04FE  084A               	movf	(calc_map@p4y+1)^(0+128),w
  2635     04FF  3FC1               	movwi [1]fsr1
  2636     0500                     l2799:
  2637                           
  2638                           ;main.c: 252:     }
  2639     0500  3001               	movlw	1
  2640     0501  00AF               	movwf	??_calc_map^(0+128)
  2641     0502  082F               	movf	??_calc_map^(0+128),w
  2642     0503  07CF               	addwf	calc_map@a^(0+128),f
  2643     0504  2CE6               	goto	l2793
  2644     0505                     l2803:
  2645                           
  2646                           ;main.c: 254:     for (a = 15; a <= 130; a++) {
  2647     0505  300F               	movlw	15
  2648     0506  00CF               	movwf	calc_map@a^(0+128)
  2649     0507                     l2807:
  2650                           
  2651                           ;main.c: 255:         deg_table[a] = (uint8_t) (IG_table[a] / 100);
  2652     0507  3064               	movlw	100
  2653     0508  00A0               	movwf	___lwdiv@divisor^(0+128)
  2654     0509  3000               	movlw	0
  2655     050A  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  2656     050B  084F               	movf	calc_map@a^(0+128),w
  2657     050C  00AF               	movwf	??_calc_map^(0+128)
  2658     050D  01B0               	clrf	(??_calc_map^(0+128)+1)
  2659     050E  35AF               	lslf	??_calc_map^(0+128),f
  2660     050F  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2661     0510  3067               	movlw	103
  2662     0511  00B1               	movwf	(??_calc_map+2)^(0+128)
  2663     0512  3022               	movlw	34
  2664     0513  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2665     0514  082F               	movf	??_calc_map^(0+128),w
  2666     0515  0731               	addwf	(??_calc_map+2)^(0+128),w
  2667     0516  0086               	movwf	6
  2668     0517  0830               	movf	(??_calc_map+1)^(0+128),w
  2669     0518  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2670     0519  0087               	movwf	7
  2671     051A  3F40               	moviw [0]fsr1
  2672     051B  00A2               	movwf	___lwdiv@dividend^(0+128)
  2673     051C  3F41               	moviw [1]fsr1
  2674     051D  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2675     051E  318D  255F  3183   	fcall	___lwdiv
  2676     0521  0141               	movlb	1	; select bank1
  2677     0522  0820               	movf	?___lwdiv^(0+128),w
  2678     0523  00B3               	movwf	(??_calc_map+4)^(0+128)
  2679     0524  084F               	movf	calc_map@a^(0+128),w
  2680     0525  3E6D               	addlw	109
  2681     0526  00B4               	movwf	(??_calc_map+5)^(0+128)
  2682     0527  01B5               	clrf	((??_calc_map+5)^(0+128)+1)
  2683     0528  3023               	movlw	35
  2684     0529  3DB5               	addwfc	((??_calc_map+5)^(0+128)+1),f
  2685     052A  0834               	movf	(??_calc_map+5)^(0+128),w
  2686     052B  0086               	movwf	6
  2687     052C  0835               	movf	(??_calc_map+6)^(0+128),w
  2688     052D  0087               	movwf	7
  2689     052E  0833               	movf	(??_calc_map+4)^(0+128),w
  2690     052F  0081               	movwf	1
  2691     0530                     l2809:
  2692                           
  2693                           ;main.c: 256:     }
  2694     0530  3001               	movlw	1
  2695     0531  00AF               	movwf	??_calc_map^(0+128)
  2696     0532  082F               	movf	??_calc_map^(0+128),w
  2697     0533  07CF               	addwf	calc_map@a^(0+128),f
  2698     0534                     l2811:
  2699     0534  3083               	movlw	131
  2700     0535  024F               	subwf	calc_map@a^(0+128),w
  2701     0536  1C03               	skipc
  2702     0537  2D39               	goto	u2571
  2703     0538  2D3A               	goto	u2570
  2704     0539                     u2571:
  2705     0539  2D07               	goto	l2807
  2706     053A                     u2570:
  2707     053A                     l2813:
  2708                           
  2709                           ;main.c: 258:     for (a = 15; a <= 130; a++) {
  2710     053A  300F               	movlw	15
  2711     053B  00CF               	movwf	calc_map@a^(0+128)
  2712     053C                     l2817:
  2713                           
  2714                           ;main.c: 259:         temp1 = (((3500) - IG_table[a]) >> 1);
  2715     053C  084F               	movf	calc_map@a^(0+128),w
  2716     053D  00AF               	movwf	??_calc_map^(0+128)
  2717     053E  01B0               	clrf	(??_calc_map^(0+128)+1)
  2718     053F  35AF               	lslf	??_calc_map^(0+128),f
  2719     0540  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2720     0541  3067               	movlw	103
  2721     0542  00B1               	movwf	(??_calc_map+2)^(0+128)
  2722     0543  3022               	movlw	34
  2723     0544  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2724     0545  082F               	movf	??_calc_map^(0+128),w
  2725     0546  0731               	addwf	(??_calc_map+2)^(0+128),w
  2726     0547  0086               	movwf	6
  2727     0548  0830               	movf	(??_calc_map+1)^(0+128),w
  2728     0549  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2729     054A  0087               	movwf	7
  2730     054B  30AC               	movlw	172
  2731     054C  00B3               	movwf	(??_calc_map+4)^(0+128)
  2732     054D  300D               	movlw	13
  2733     054E  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2734     054F  3F40               	moviw [0]fsr1
  2735     0550  0233               	subwf	(??_calc_map+4)^(0+128),w
  2736     0551  00B5               	movwf	(??_calc_map+6)^(0+128)
  2737     0552  3F41               	moviw [1]fsr1
  2738     0553  3B34               	subwfb	(??_calc_map+5)^(0+128),w
  2739     0554  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2740     0555  36B6               	lsrf	((??_calc_map+6)^(0+128)+1),f
  2741     0556  0CB5               	rrf	(??_calc_map+6)^(0+128),f
  2742     0557  0835               	movf	(??_calc_map+6)^(0+128),w
  2743     0558  00BE               	movwf	calc_map@temp1^(0+128)
  2744     0559  0836               	movf	(??_calc_map+7)^(0+128),w
  2745     055A  00BF               	movwf	(calc_map@temp1+1)^(0+128)
  2746     055B  01C0               	clrf	(calc_map@temp1+2)^(0+128)
  2747     055C                     l2819:
  2748                           
  2749                           ;main.c: 260:         temp = ((deg2time_coeff[a] * temp1) >> 10);
  2750     055C  084F               	movf	calc_map@a^(0+128),w
  2751     055D  00AF               	movwf	??_calc_map^(0+128)
  2752     055E  01B0               	clrf	(??_calc_map^(0+128)+1)
  2753     055F  082F               	movf	??_calc_map^(0+128),w
  2754     0560  00A0               	movwf	___wmul@multiplier^(0+128)
  2755     0561  0830               	movf	(??_calc_map+1)^(0+128),w
  2756     0562  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  2757     0563  3003               	movlw	3
  2758     0564  00A2               	movwf	___wmul@multiplicand^(0+128)
  2759     0565  3000               	movlw	0
  2760     0566  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  2761     0567  318C  24AB  3183   	fcall	___wmul
  2762     056A  30DE               	movlw	222
  2763     056B  0141               	movlb	1	; select bank1
  2764     056C  00B1               	movwf	(??_calc_map+2)^(0+128)
  2765     056D  3020               	movlw	32
  2766     056E  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2767     056F  0820               	movf	?___wmul^(0+128),w
  2768     0570  0731               	addwf	(??_calc_map+2)^(0+128),w
  2769     0571  0086               	movwf	6
  2770     0572  0821               	movf	(?___wmul+1)^(0+128),w
  2771     0573  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2772     0574  0087               	movwf	7
  2773     0575  3F40               	moviw [0]fsr1
  2774     0576  00A6               	movwf	___tmul@multiplier^(0+128)
  2775     0577  3F41               	moviw [1]fsr1
  2776     0578  00A7               	movwf	(___tmul@multiplier+1)^(0+128)
  2777     0579  3F42               	moviw [2]fsr1
  2778     057A  00A8               	movwf	(___tmul@multiplier+2)^(0+128)
  2779     057B  083E               	movf	calc_map@temp1^(0+128),w
  2780     057C  00A9               	movwf	___tmul@multiplicand^(0+128)
  2781     057D  083F               	movf	(calc_map@temp1+1)^(0+128),w
  2782     057E  00AA               	movwf	(___tmul@multiplicand+1)^(0+128)
  2783     057F  0840               	movf	(calc_map@temp1+2)^(0+128),w
  2784     0580  00AB               	movwf	(___tmul@multiplicand+2)^(0+128)
  2785     0581  318C  24CB  3183   	fcall	___tmul
  2786     0584  0141               	movlb	1	; select bank1
  2787     0585  0826               	movf	?___tmul^(0+128),w
  2788     0586  00B3               	movwf	(??_calc_map+4)^(0+128)
  2789     0587  0827               	movf	(?___tmul+1)^(0+128),w
  2790     0588  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2791     0589  0828               	movf	(?___tmul+2)^(0+128),w
  2792     058A  00B5               	movwf	((??_calc_map+4)^(0+128)+2)
  2793     058B  300A               	movlw	10
  2794     058C                     u2585:
  2795     058C  36B5               	lsrf	((??_calc_map+4)^(0+128)+2),f
  2796     058D  0CB4               	rrf	((??_calc_map+4)^(0+128)+1),f
  2797     058E  0CB3               	rrf	(??_calc_map+4)^(0+128),f
  2798     058F                     u2580:
  2799     058F  0B89               	decfsz	9,f
  2800     0590  2D8C               	goto	u2585
  2801     0591  0833               	movf	(??_calc_map+4)^(0+128),w
  2802     0592  00BB               	movwf	calc_map@temp^(0+128)
  2803     0593  0834               	movf	(??_calc_map+5)^(0+128),w
  2804     0594  00BC               	movwf	(calc_map@temp+1)^(0+128)
  2805     0595  0835               	movf	(??_calc_map+6)^(0+128),w
  2806     0596  00BD               	movwf	(calc_map@temp+2)^(0+128)
  2807     0597                     l2821:
  2808                           
  2809                           ;main.c: 261:         IG_table[a] = temp;
  2810     0597  084F               	movf	calc_map@a^(0+128),w
  2811     0598  00AF               	movwf	??_calc_map^(0+128)
  2812     0599  01B0               	clrf	(??_calc_map^(0+128)+1)
  2813     059A  35AF               	lslf	??_calc_map^(0+128),f
  2814     059B  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2815     059C  3067               	movlw	103
  2816     059D  00B1               	movwf	(??_calc_map+2)^(0+128)
  2817     059E  3022               	movlw	34
  2818     059F  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2819     05A0  082F               	movf	??_calc_map^(0+128),w
  2820     05A1  0731               	addwf	(??_calc_map+2)^(0+128),w
  2821     05A2  0086               	movwf	6
  2822     05A3  0830               	movf	(??_calc_map+1)^(0+128),w
  2823     05A4  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2824     05A5  0087               	movwf	7
  2825     05A6  083B               	movf	calc_map@temp^(0+128),w
  2826     05A7  3FC0               	movwi [0]fsr1
  2827     05A8  083C               	movf	(calc_map@temp+1)^(0+128),w
  2828     05A9  3FC1               	movwi [1]fsr1
  2829     05AA                     l2823:
  2830                           
  2831                           ;main.c: 262:     }
  2832     05AA  3001               	movlw	1
  2833     05AB  00AF               	movwf	??_calc_map^(0+128)
  2834     05AC  082F               	movf	??_calc_map^(0+128),w
  2835     05AD  07CF               	addwf	calc_map@a^(0+128),f
  2836     05AE                     l2825:
  2837     05AE  3083               	movlw	131
  2838     05AF  024F               	subwf	calc_map@a^(0+128),w
  2839     05B0  1C03               	skipc
  2840     05B1  2DB3               	goto	u2591
  2841     05B2  2DB4               	goto	u2590
  2842     05B3                     u2591:
  2843     05B3  2D3C               	goto	l2817
  2844     05B4                     u2590:
  2845     05B4                     l248:
  2846     05B4  0008               	return
  2847     05B5                     __end_of_calc_map:
  2848                           
  2849                           	psect	text6
  2850     0CAB                     __ptext6:	
  2851 ;; *************** function ___wmul *****************
  2852 ;; Defined at:
  2853 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2856 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  product         2    4[BANK1 ] unsigned int 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  2    0[BANK1 ] unsigned int 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2868 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2869 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;Total ram usage:        6 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 3
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_calc_map
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882     0CAB                     ___wmul:	
  2883                           ;psect for function ___wmul
  2884                           
  2885     0CAB                     l2623:	
  2886                           ;incstack = 0
  2887                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2888                           
  2889     0CAB  0141               	movlb	1	; select bank1
  2890     0CAC  01A4               	clrf	___wmul@product^(0+128)
  2891     0CAD  01A5               	clrf	(___wmul@product+1)^(0+128)
  2892     0CAE                     l2625:
  2893     0CAE  1C20               	btfss	___wmul@multiplier^(0+128),0
  2894     0CAF  2CB1               	goto	u2441
  2895     0CB0  2CB2               	goto	u2440
  2896     0CB1                     u2441:
  2897     0CB1  2CB6               	goto	l382
  2898     0CB2                     u2440:
  2899     0CB2                     l2627:
  2900     0CB2  0822               	movf	___wmul@multiplicand^(0+128),w
  2901     0CB3  07A4               	addwf	___wmul@product^(0+128),f
  2902     0CB4  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  2903     0CB5  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  2904     0CB6                     l382:
  2905     0CB6  3001               	movlw	1
  2906     0CB7                     u2455:
  2907     0CB7  35A2               	lslf	___wmul@multiplicand^(0+128),f
  2908     0CB8  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2909     0CB9  0B89               	decfsz	9,f
  2910     0CBA  2CB7               	goto	u2455
  2911     0CBB                     l2629:
  2912     0CBB  3001               	movlw	1
  2913     0CBC                     u2465:
  2914     0CBC  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  2915     0CBD  0CA0               	rrf	___wmul@multiplier^(0+128),f
  2916     0CBE  0B89               	decfsz	9,f
  2917     0CBF  2CBC               	goto	u2465
  2918     0CC0                     l2631:
  2919     0CC0  0820               	movf	___wmul@multiplier^(0+128),w
  2920     0CC1  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  2921     0CC2  1D03               	btfss	3,2
  2922     0CC3  2CC5               	goto	u2471
  2923     0CC4  2CC6               	goto	u2470
  2924     0CC5                     u2471:
  2925     0CC5  2CAE               	goto	l2625
  2926     0CC6                     u2470:
  2927     0CC6                     l2633:
  2928     0CC6  0825               	movf	(___wmul@product+1)^(0+128),w
  2929     0CC7  00A1               	movwf	(?___wmul+1)^(0+128)
  2930     0CC8  0824               	movf	___wmul@product^(0+128),w
  2931     0CC9  00A0               	movwf	?___wmul^(0+128)
  2932     0CCA                     l384:
  2933     0CCA  0008               	return
  2934     0CCB                     __end_of___wmul:
  2935                           
  2936                           	psect	text7
  2937     0CCB                     __ptext7:	
  2938 ;; *************** function ___tmul *****************
  2939 ;; Defined at:
  2940 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul24.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  multiplier      3    6[BANK1 ] unsigned um
  2943 ;;  multiplicand    3    9[BANK1 ] unsigned um
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  product         3   12[BANK1 ] unsigned um
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  3    6[BANK1 ] unsigned um
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2955 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;Total ram usage:        9 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 3
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_calc_map
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969     0CCB                     ___tmul:	
  2970                           ;psect for function ___tmul
  2971                           
  2972     0CCB                     l2637:	
  2973                           ;incstack = 0
  2974                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  2975                           
  2976     0CCB  3000               	movlw	0
  2977     0CCC  0141               	movlb	1	; select bank1
  2978     0CCD  00AC               	movwf	___tmul@product^(0+128)
  2979     0CCE  3000               	movlw	0
  2980     0CCF  00AD               	movwf	(___tmul@product+1)^(0+128)
  2981     0CD0  3000               	movlw	0
  2982     0CD1  00AE               	movwf	(___tmul@product+2)^(0+128)
  2983     0CD2                     l2639:
  2984     0CD2  1C26               	btfss	___tmul@multiplier^(0+128),0
  2985     0CD3  2CD5               	goto	u2481
  2986     0CD4  2CD6               	goto	u2480
  2987     0CD5                     u2481:
  2988     0CD5  2CDC               	goto	l2643
  2989     0CD6                     u2480:
  2990     0CD6                     l2641:
  2991     0CD6  0829               	movf	___tmul@multiplicand^(0+128),w
  2992     0CD7  07AC               	addwf	___tmul@product^(0+128),f
  2993     0CD8  082A               	movf	(___tmul@multiplicand+1)^(0+128),w
  2994     0CD9  3DAD               	addwfc	(___tmul@product+1)^(0+128),f
  2995     0CDA  082B               	movf	(___tmul@multiplicand+2)^(0+128),w
  2996     0CDB  3DAE               	addwfc	(___tmul@product+2)^(0+128),f
  2997     0CDC                     l2643:
  2998     0CDC  3001               	movlw	1
  2999     0CDD                     u2495:
  3000     0CDD  35A9               	lslf	___tmul@multiplicand^(0+128),f
  3001     0CDE  0DAA               	rlf	(___tmul@multiplicand+1)^(0+128),f
  3002     0CDF  0DAB               	rlf	(___tmul@multiplicand+2)^(0+128),f
  3003     0CE0  0B89               	decfsz	9,f
  3004     0CE1  2CDD               	goto	u2495
  3005     0CE2                     l2645:
  3006     0CE2  3001               	movlw	1
  3007     0CE3                     u2505:
  3008     0CE3  36A8               	lsrf	(___tmul@multiplier+2)^(0+128),f
  3009     0CE4  0CA7               	rrf	(___tmul@multiplier+1)^(0+128),f
  3010     0CE5  0CA6               	rrf	___tmul@multiplier^(0+128),f
  3011     0CE6  0B89               	decfsz	9,f
  3012     0CE7  2CE3               	goto	u2505
  3013     0CE8  0828               	movf	(___tmul@multiplier+2)^(0+128),w
  3014     0CE9  0427               	iorwf	(___tmul@multiplier+1)^(0+128),w
  3015     0CEA  0426               	iorwf	___tmul@multiplier^(0+128),w
  3016     0CEB  1D03               	skipz
  3017     0CEC  2CEE               	goto	u2511
  3018     0CED  2CEF               	goto	u2510
  3019     0CEE                     u2511:
  3020     0CEE  2CD2               	goto	l2639
  3021     0CEF                     u2510:
  3022     0CEF                     l2647:
  3023     0CEF  082C               	movf	___tmul@product^(0+128),w
  3024     0CF0  00A6               	movwf	?___tmul^(0+128)
  3025     0CF1  082D               	movf	(___tmul@product+1)^(0+128),w
  3026     0CF2  00A7               	movwf	(?___tmul+1)^(0+128)
  3027     0CF3  082E               	movf	(___tmul@product+2)^(0+128),w
  3028     0CF4  00A8               	movwf	(?___tmul+2)^(0+128)
  3029     0CF5                     l390:
  3030     0CF5  0008               	return
  3031     0CF6                     __end_of___tmul:
  3032                           
  3033                           	psect	text8
  3034     0D5F                     __ptext8:	
  3035 ;; *************** function ___lwdiv *****************
  3036 ;; Defined at:
  3037 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  divisor         2    0[BANK1 ] unsigned int 
  3040 ;;  dividend        2    2[BANK1 ] unsigned int 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  quotient        2    5[BANK1 ] unsigned int 
  3043 ;;  counter         1    7[BANK1 ] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  2    0[BANK1 ] unsigned int 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3053 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;Total ram usage:        8 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 3
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_calc_map
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067     0D5F                     ___lwdiv:	
  3068                           ;psect for function ___lwdiv
  3069                           
  3070     0D5F                     l1943:	
  3071                           ;incstack = 0
  3072                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3073                           
  3074     0D5F  0141               	movlb	1	; select bank1
  3075     0D60  01A5               	clrf	___lwdiv@quotient^(0+128)
  3076     0D61  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  3077     0D62                     l1945:
  3078     0D62  0820               	movf	___lwdiv@divisor^(0+128),w
  3079     0D63  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3080     0D64  1903               	btfsc	3,2
  3081     0D65  2D67               	goto	u1591
  3082     0D66  2D68               	goto	u1590
  3083     0D67                     u1591:
  3084     0D67  2D97               	goto	l1965
  3085     0D68                     u1590:
  3086     0D68                     l1947:
  3087     0D68  01A7               	clrf	___lwdiv@counter^(0+128)
  3088     0D69  0AA7               	incf	___lwdiv@counter^(0+128),f
  3089     0D6A  2D74               	goto	l1953
  3090     0D6B                     l1949:
  3091     0D6B  3001               	movlw	1
  3092     0D6C                     u1605:
  3093     0D6C  35A0               	lslf	___lwdiv@divisor^(0+128),f
  3094     0D6D  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3095     0D6E  0B89               	decfsz	9,f
  3096     0D6F  2D6C               	goto	u1605
  3097     0D70                     l1951:
  3098     0D70  3001               	movlw	1
  3099     0D71  00A4               	movwf	??___lwdiv^(0+128)
  3100     0D72  0824               	movf	??___lwdiv^(0+128),w
  3101     0D73  07A7               	addwf	___lwdiv@counter^(0+128),f
  3102     0D74                     l1953:
  3103     0D74  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  3104     0D75  2D77               	goto	u1611
  3105     0D76  2D78               	goto	u1610
  3106     0D77                     u1611:
  3107     0D77  2D6B               	goto	l1949
  3108     0D78                     u1610:
  3109     0D78                     l1955:
  3110     0D78  3001               	movlw	1
  3111     0D79                     u1625:
  3112     0D79  35A5               	lslf	___lwdiv@quotient^(0+128),f
  3113     0D7A  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3114     0D7B  0B89               	decfsz	9,f
  3115     0D7C  2D79               	goto	u1625
  3116     0D7D  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3117     0D7E  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3118     0D7F  1D03               	skipz
  3119     0D80  2D83               	goto	u1635
  3120     0D81  0820               	movf	___lwdiv@divisor^(0+128),w
  3121     0D82  0222               	subwf	___lwdiv@dividend^(0+128),w
  3122     0D83                     u1635:
  3123     0D83  1C03               	skipc
  3124     0D84  2D86               	goto	u1631
  3125     0D85  2D87               	goto	u1630
  3126     0D86                     u1631:
  3127     0D86  2D8C               	goto	l1961
  3128     0D87                     u1630:
  3129     0D87                     l1957:
  3130     0D87  0820               	movf	___lwdiv@divisor^(0+128),w
  3131     0D88  02A2               	subwf	___lwdiv@dividend^(0+128),f
  3132     0D89  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3133     0D8A  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  3134     0D8B                     l1959:
  3135     0D8B  1425               	bsf	___lwdiv@quotient^(0+128),0
  3136     0D8C                     l1961:
  3137     0D8C  3001               	movlw	1
  3138     0D8D                     u1645:
  3139     0D8D  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  3140     0D8E  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  3141     0D8F  0B89               	decfsz	9,f
  3142     0D90  2D8D               	goto	u1645
  3143     0D91                     l1963:
  3144     0D91  3001               	movlw	1
  3145     0D92  02A7               	subwf	___lwdiv@counter^(0+128),f
  3146     0D93  1D03               	btfss	3,2
  3147     0D94  2D96               	goto	u1651
  3148     0D95  2D97               	goto	u1650
  3149     0D96                     u1651:
  3150     0D96  2D78               	goto	l1955
  3151     0D97                     u1650:
  3152     0D97                     l1965:
  3153     0D97  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  3154     0D98  00A1               	movwf	(?___lwdiv+1)^(0+128)
  3155     0D99  0825               	movf	___lwdiv@quotient^(0+128),w
  3156     0D9A  00A0               	movwf	?___lwdiv^(0+128)
  3157     0D9B                     l662:
  3158     0D9B  0008               	return
  3159     0D9C                     __end_of___lwdiv:
  3160                           
  3161                           	psect	text9
  3162     073E                     __ptext9:	
  3163 ;; *************** function _Write_table *****************
  3164 ;; Defined at:
  3165 ;;		line 178 in file "main.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  tx_data         8   53[BANK1 ] unsigned char [8]
  3170 ;;  a               1   61[BANK1 ] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3181 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;Total ram usage:       11 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 8
  3187 ;; This function calls:
  3188 ;;		_WriteString
  3189 ;;		_sprintf
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195     073E                     _Write_table:	
  3196                           ;psect for function _Write_table
  3197                           
  3198     073E                     l2833:	
  3199                           ;incstack = 0
  3200                           ; Regs used in _Write_table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3201                           
  3202                           
  3203                           ;main.c: 179:     uint8_t tx_data[8], a;;main.c: 181:     tx_buf[0] = rpm;
  3204     073E  0141               	movlb	1	; select bank1
  3205     073F  0866               	movf	_rpm^(0+128),w
  3206     0740  00D3               	movwf	??_Write_table^(0+128)
  3207     0741  01D4               	clrf	(??_Write_table^(0+128)+1)
  3208     0742  0853               	movf	??_Write_table^(0+128),w
  3209     0743  0140               	movlb	0	; select bank0
  3210     0744  00C8               	movwf	_tx_buf
  3211     0745  0141               	movlb	1	; select bank1
  3212     0746  0854               	movf	(??_Write_table+1)^(0+128),w
  3213     0747  0140               	movlb	0	; select bank0
  3214     0748  00C9               	movwf	_tx_buf+1
  3215     0749                     l2835:
  3216                           
  3217                           ;main.c: 182:     tx_buf[1] = deg_table[rpm];
  3218     0749  0141               	movlb	1	; select bank1
  3219     074A  0866               	movf	_rpm^(0+128),w
  3220     074B  3E6D               	addlw	109
  3221     074C  0086               	movwf	6
  3222     074D  0187               	clrf	7
  3223     074E  3023               	movlw	35
  3224     074F  3D87               	addwfc	7,f
  3225     0750  0801               	movf	1,w
  3226     0751  00D3               	movwf	??_Write_table^(0+128)
  3227     0752  01D4               	clrf	(??_Write_table^(0+128)+1)
  3228     0753  0853               	movf	??_Write_table^(0+128),w
  3229     0754  0140               	movlb	0	; select bank0
  3230     0755  00CA               	movwf	_tx_buf+2
  3231     0756  0141               	movlb	1	; select bank1
  3232     0757  0854               	movf	(??_Write_table+1)^(0+128),w
  3233     0758  0140               	movlb	0	; select bank0
  3234     0759  00CB               	movwf	_tx_buf+3
  3235     075A                     l2837:
  3236                           
  3237                           ;main.c: 183:     tx_buf[2] = ig_counter;
  3238     075A  0141               	movlb	1	; select bank1
  3239     075B  0863               	movf	(_ig_counter+1)^(0+128),w
  3240     075C  0140               	movlb	0	; select bank0
  3241     075D  00CD               	movwf	_tx_buf+5
  3242     075E  0141               	movlb	1	; select bank1
  3243     075F  0862               	movf	_ig_counter^(0+128),w
  3244     0760  0140               	movlb	0	; select bank0
  3245     0761  00CC               	movwf	_tx_buf+4
  3246     0762                     l2839:
  3247                           
  3248                           ;main.c: 184:     tx_buf[3] = t1_count;
  3249     0762  0141               	movlb	1	; select bank1
  3250     0763  0868               	movf	(_t1_count+1)^(0+128),w
  3251     0764  0140               	movlb	0	; select bank0
  3252     0765  00CF               	movwf	_tx_buf+7
  3253     0766  0141               	movlb	1	; select bank1
  3254     0767  0867               	movf	_t1_count^(0+128),w
  3255     0768  0140               	movlb	0	; select bank0
  3256     0769  00CE               	movwf	_tx_buf+6
  3257     076A                     l2841:
  3258                           
  3259                           ;main.c: 185:     tx_buf[4] = PORTAbits.RA0;
  3260     076A  080C               	movf	12,w	;volatile
  3261     076B  3901               	andlw	1
  3262     076C  0141               	movlb	1	; select bank1
  3263     076D  00D3               	movwf	??_Write_table^(0+128)
  3264     076E  01D4               	clrf	(??_Write_table^(0+128)+1)
  3265     076F  0853               	movf	??_Write_table^(0+128),w
  3266     0770  0140               	movlb	0	; select bank0
  3267     0771  00D0               	movwf	_tx_buf+8
  3268     0772  0141               	movlb	1	; select bank1
  3269     0773  0854               	movf	(??_Write_table+1)^(0+128),w
  3270     0774  0140               	movlb	0	; select bank0
  3271     0775  00D1               	movwf	_tx_buf+9
  3272     0776                     l2843:
  3273                           
  3274                           ;main.c: 186:     tx_buf[5] = EG_state;
  3275     0776  0141               	movlb	1	; select bank1
  3276     0777  0865               	movf	_EG_state^(0+128),w
  3277     0778  00D3               	movwf	??_Write_table^(0+128)
  3278     0779  01D4               	clrf	(??_Write_table^(0+128)+1)
  3279     077A  0853               	movf	??_Write_table^(0+128),w
  3280     077B  0140               	movlb	0	; select bank0
  3281     077C  00D2               	movwf	_tx_buf+10
  3282     077D  0141               	movlb	1	; select bank1
  3283     077E  0854               	movf	(??_Write_table+1)^(0+128),w
  3284     077F  0140               	movlb	0	; select bank0
  3285     0780  00D3               	movwf	_tx_buf+11
  3286     0781                     l2845:
  3287                           
  3288                           ;main.c: 187:     for (a = 0; a <= 5; a++) {
  3289     0781  0141               	movlb	1	; select bank1
  3290     0782  01DD               	clrf	Write_table@a^(0+128)
  3291     0783                     l2851:
  3292                           
  3293                           ;main.c: 188:         sprintf(tx_data, "%d,", tx_buf[a]);
  3294     0783  3012               	movlw	low (STR_1| (0+32768))
  3295     0784  00C1               	movwf	sprintf@fmt^(0+128)
  3296     0785  3090               	movlw	high (STR_1| (0+32768))
  3297     0786  00C2               	movwf	(sprintf@fmt^(0+128)+1)
  3298     0787  355D               	lslf	Write_table@a^(0+128),w
  3299     0788  3E48               	addlw	(low (_tx_buf| 0))& (0+255)
  3300     0789  0086               	movwf	6
  3301     078A  0187               	clrf	7
  3302     078B  3F40               	moviw [0]fsr1
  3303     078C  00C3               	movwf	(?_sprintf^(0+128)+2)
  3304     078D  3F41               	moviw [1]fsr1
  3305     078E  00C4               	movwf	((?_sprintf+1)^(0+128)+2)
  3306     078F  30D5               	movlw	(low (Write_table@tx_data| 0))& (0+255)
  3307     0790  318C  246F  3187   	fcall	_sprintf
  3308     0793                     l2853:
  3309                           
  3310                           ;main.c: 189:         WriteString(tx_data);
  3311     0793  30D5               	movlw	low Write_table@tx_data
  3312     0794  0141               	movlb	1	; select bank1
  3313     0795  00A1               	movwf	WriteString@str^(0+128)
  3314     0796  3000               	movlw	high Write_table@tx_data
  3315     0797  00A2               	movwf	(WriteString@str+1)^(0+128)
  3316     0798  318C  243A  3187   	fcall	_WriteString
  3317     079B                     l2855:
  3318                           
  3319                           ;main.c: 190:     }
  3320     079B  3001               	movlw	1
  3321     079C  0141               	movlb	1	; select bank1
  3322     079D  00D3               	movwf	??_Write_table^(0+128)
  3323     079E  0853               	movf	??_Write_table^(0+128),w
  3324     079F  07DD               	addwf	Write_table@a^(0+128),f
  3325     07A0                     l2857:
  3326     07A0  3006               	movlw	6
  3327     07A1  025D               	subwf	Write_table@a^(0+128),w
  3328     07A2  1C03               	skipc
  3329     07A3  2FA5               	goto	u2601
  3330     07A4  2FA6               	goto	u2600
  3331     07A5                     u2601:
  3332     07A5  2F83               	goto	l2851
  3333     07A6                     u2600:
  3334     07A6                     l2859:
  3335                           
  3336                           ;main.c: 191:     WriteString("\r\n");
  3337     07A6  301E               	movlw	low (STR_2| (0+32768))
  3338     07A7  00A1               	movwf	WriteString@str^(0+128)
  3339     07A8  3090               	movlw	high (STR_2| (0+32768))
  3340     07A9  00A2               	movwf	(WriteString@str^(0+128)+1)
  3341     07AA  318C  243A  3187   	fcall	_WriteString
  3342     07AD                     l215:
  3343     07AD  0008               	return
  3344     07AE                     __end_of_Write_table:
  3345                           
  3346                           	psect	text10
  3347     0C6F                     __ptext10:	
  3348 ;; *************** function _sprintf *****************
  3349 ;; Defined at:
  3350 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  s               1    wreg     PTR unsigned char 
  3353 ;;		 -> Write_table@tx_data(8), 
  3354 ;;  fmt             2   33[BANK1 ] PTR const unsigned char 
  3355 ;;		 -> STR_1(4), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  s               1   39[BANK1 ] PTR unsigned char 
  3358 ;;		 -> Write_table@tx_data(8), 
  3359 ;;  f              11   40[BANK1 ] struct _IO_FILE
  3360 ;;  ret             2    0        int 
  3361 ;;  ap              1   38[BANK1 ] PTR void [1]
  3362 ;;		 -> ?_sprintf(2), 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2   33[BANK1 ] int 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3372 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;Total ram usage:       18 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 7
  3379 ;; This function calls:
  3380 ;;		_vfprintf
  3381 ;; This function is called by:
  3382 ;;		_Write_table
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386     0C6F                     _sprintf:	
  3387                           ;psect for function _sprintf
  3388                           
  3389                           
  3390                           ;incstack = 0
  3391                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3392                           ;sprintf@s stored from wreg
  3393     0C6F  0141               	movlb	1	; select bank1
  3394     0C70  00C7               	movwf	sprintf@s^(0+128)
  3395     0C71                     l2599:
  3396     0C71  30C3               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3397     0C72  00C6               	movwf	sprintf@ap^(0+128)
  3398     0C73  0847               	movf	sprintf@s^(0+128),w
  3399     0C74  00C8               	movwf	sprintf@f^(0+128)
  3400     0C75                     l2601:
  3401     0C75  01CA               	clrf	(sprintf@f^(0+128)+2)
  3402     0C76  01CB               	clrf	((sprintf@f+1)^(0+128)+2)
  3403     0C77                     l2603:
  3404     0C77  01D1               	clrf	(sprintf@f^(0+128)+9)
  3405     0C78  01D2               	clrf	((sprintf@f+1)^(0+128)+9)
  3406     0C79                     l2605:
  3407     0C79  0842               	movf	(sprintf@fmt+1)^(0+128),w
  3408     0C7A  00BB               	movwf	(vfprintf@fmt+1)^(0+128)
  3409     0C7B  0841               	movf	sprintf@fmt^(0+128),w
  3410     0C7C  00BA               	movwf	vfprintf@fmt^(0+128)
  3411     0C7D  30C6               	movlw	(low (sprintf@ap| 0))& (0+255)
  3412     0C7E  00BC               	movwf	vfprintf@ap^(0+128)
  3413     0C7F  30C8               	movlw	(low (sprintf@f| 0))& (0+255)
  3414     0C80  318C  2453  318C   	fcall	_vfprintf
  3415     0C83                     l2607:
  3416     0C83  0141               	movlb	1	; select bank1
  3417     0C84  084A               	movf	(sprintf@f^(0+128)+2),w
  3418     0C85  0747               	addwf	sprintf@s^(0+128),w
  3419     0C86  00C5               	movwf	??_sprintf^(0+128)
  3420     0C87  0845               	movf	??_sprintf^(0+128),w
  3421     0C88  0086               	movwf	6
  3422     0C89  0187               	clrf	7
  3423     0C8A  0181               	clrf	1
  3424     0C8B                     l845:
  3425     0C8B  0008               	return
  3426     0C8C                     __end_of_sprintf:
  3427                           
  3428                           	psect	text11
  3429     0C53                     __ptext11:	
  3430 ;; *************** function _vfprintf *****************
  3431 ;; Defined at:
  3432 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  fp              1    wreg     PTR struct _IO_FILE
  3435 ;;		 -> sprintf@f(11), 
  3436 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  3437 ;;		 -> STR_1(4), 
  3438 ;;  ap              1   28[BANK1 ] PTR PTR void 
  3439 ;;		 -> sprintf@ap(1), 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  3442 ;;		 -> sprintf@f(11), 
  3443 ;;  cfmt            2   31[BANK1 ] PTR unsigned char 
  3444 ;;		 -> STR_1(4), 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  2   26[BANK1 ] int 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3454 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;Total ram usage:        7 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 6
  3461 ;; This function calls:
  3462 ;;		_vfpfcnvrt
  3463 ;; This function is called by:
  3464 ;;		_sprintf
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468     0C53                     _vfprintf:	
  3469                           ;psect for function _vfprintf
  3470                           
  3471                           
  3472                           ;incstack = 0
  3473                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3474                           ;vfprintf@fp stored from wreg
  3475     0C53  0141               	movlb	1	; select bank1
  3476     0C54  00BE               	movwf	vfprintf@fp^(0+128)
  3477     0C55                     l2589:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3480     0C55  083B               	movf	(vfprintf@fmt+1)^(0+128),w
  3481     0C56  00C0               	movwf	(vfprintf@cfmt+1)^(0+128)
  3482     0C57  083A               	movf	vfprintf@fmt^(0+128),w
  3483     0C58  00BF               	movwf	vfprintf@cfmt^(0+128)
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3486     0C59  2C62               	goto	l2593
  3487     0C5A                     l2591:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3490     0C5A  30BF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3491     0C5B  00AB               	movwf	vfpfcnvrt@fmt^(0+128)
  3492     0C5C  083C               	movf	vfprintf@ap^(0+128),w
  3493     0C5D  00AC               	movwf	vfpfcnvrt@ap^(0+128)
  3494     0C5E  083E               	movf	vfprintf@fp^(0+128),w
  3495     0C5F  318F  2710  318C   	fcall	_vfpfcnvrt
  3496     0C62                     l2593:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3499     0C62  0141               	movlb	1	; select bank1
  3500     0C63  083F               	movf	vfprintf@cfmt^(0+128),w
  3501     0C64  0084               	movwf	4
  3502     0C65  0840               	movf	(vfprintf@cfmt+1)^(0+128),w
  3503     0C66  0085               	movwf	5
  3504     0C67  0012               	moviw fsr0++
  3505     0C68  1D03               	btfss	3,2
  3506     0C69  2C6B               	goto	u2421
  3507     0C6A  2C6C               	goto	u2420
  3508     0C6B                     u2421:
  3509     0C6B  2C5A               	goto	l2591
  3510     0C6C                     u2420:
  3511     0C6C                     l2595:
  3512                           
  3513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3514     0C6C  01BA               	clrf	?_vfprintf^(0+128)
  3515     0C6D  01BB               	clrf	(?_vfprintf+1)^(0+128)
  3516     0C6E                     l889:
  3517     0C6E  0008               	return
  3518     0C6F                     __end_of_vfprintf:
  3519                           
  3520                           	psect	text12
  3521     0F10                     __ptext12:	
  3522 ;; *************** function _vfpfcnvrt *****************
  3523 ;; Defined at:
  3524 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  fp              1    wreg     PTR struct _IO_FILE
  3527 ;;		 -> sprintf@f(11), 
  3528 ;;  fmt             1   11[BANK1 ] PTR PTR unsigned char 
  3529 ;;		 -> vfprintf@cfmt(2), 
  3530 ;;  ap              1   12[BANK1 ] PTR PTR void 
  3531 ;;		 -> sprintf@ap(1), 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  fp              1   18[BANK1 ] PTR struct _IO_FILE
  3534 ;;		 -> sprintf@f(11), 
  3535 ;;  convarg         4   21[BANK1 ] struct .
  3536 ;;  cp              2   19[BANK1 ] PTR unsigned char 
  3537 ;;		 -> STR_1(4), 
  3538 ;;  c               1   25[BANK1 ] unsigned char 
  3539 ;;  done            1   17[BANK1 ] _Bool 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3549 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3551 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3552 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  3553 ;;Total ram usage:       15 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 5
  3556 ;; This function calls:
  3557 ;;		___awdiv
  3558 ;;		___awmod
  3559 ;;		_abs
  3560 ;;		_fputc
  3561 ;; This function is called by:
  3562 ;;		_vfprintf
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566     0F10                     _vfpfcnvrt:	
  3567                           ;psect for function _vfpfcnvrt
  3568                           
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3572                           ;vfpfcnvrt@fp stored from wreg
  3573     0F10  0141               	movlb	1	; select bank1
  3574     0F11  00B2               	movwf	vfpfcnvrt@fp^(0+128)
  3575     0F12                     l2533:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3578     0F12  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3579     0F13  0086               	movwf	6
  3580     0F14  0187               	clrf	7
  3581     0F15  3F40               	moviw [0]fsr1
  3582     0F16  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3583     0F17  3F41               	moviw [1]fsr1
  3584     0F18  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3585     0F19  082D               	movf	??_vfpfcnvrt^(0+128),w
  3586     0F1A  0084               	movwf	4
  3587     0F1B  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3588     0F1C  0085               	movwf	5
  3589     0F1D  0012               	moviw fsr0++
  3590     0F1E  3A25               	xorlw	37
  3591     0F1F  1D03               	btfss	3,2
  3592     0F20  2F22               	goto	u2311
  3593     0F21  2F23               	goto	u2310
  3594     0F22                     u2311:
  3595     0F22  2FE7               	goto	l2579
  3596     0F23                     u2310:
  3597     0F23                     l2535:
  3598                           
  3599                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3600     0F23  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3601     0F24  0086               	movwf	6
  3602     0F25  0187               	clrf	7
  3603     0F26  3001               	movlw	1
  3604     0F27  0781               	addwf	1,f
  3605     0F28  3141               	addfsr 1,1
  3606     0F29  1803               	skipnc
  3607     0F2A  0A81               	incf	1,f
  3608     0F2B                     l2537:
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3611     0F2B  01DE               	clrf	_width^(0+128)
  3612     0F2C  01DF               	clrf	(_width+1)^(0+128)
  3613     0F2D  1003               	clrc
  3614     0F2E  3000               	movlw	0
  3615     0F2F  1803               	btfsc	3,0
  3616     0F30  3001               	movlw	1
  3617     0F31  00E4               	movwf	_flags^(0+128)
  3618     0F32                     l2539:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3621     0F32  30FF               	movlw	255
  3622     0F33  00E0               	movwf	_prec^(0+128)
  3623     0F34  30FF               	movlw	255
  3624     0F35  00E1               	movwf	(_prec^(0+128)+1)
  3625     0F36                     l2541:
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3628     0F36  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3629     0F37  0086               	movwf	6
  3630     0F38  0187               	clrf	7
  3631     0F39  3F40               	moviw [0]fsr1
  3632     0F3A  00B3               	movwf	vfpfcnvrt@cp^(0+128)
  3633     0F3B  3F41               	moviw [1]fsr1
  3634     0F3C  00B4               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  3635     0F3D                     l2543:
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3638     0F3D  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3639     0F3E  0084               	movwf	4
  3640     0F3F  0834               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3641     0F40  0085               	movwf	5
  3642     0F41  0012               	moviw fsr0++
  3643     0F42  3A64               	xorlw	100
  3644     0F43  1903               	btfsc	3,2
  3645     0F44  2F46               	goto	u2321
  3646     0F45  2F47               	goto	u2320
  3647     0F46                     u2321:
  3648     0F46  2F51               	goto	l2547
  3649     0F47                     u2320:
  3650     0F47                     l2545:
  3651     0F47  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3652     0F48  0084               	movwf	4
  3653     0F49  0834               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3654     0F4A  0085               	movwf	5
  3655     0F4B  0012               	moviw fsr0++
  3656     0F4C  3A69               	xorlw	105
  3657     0F4D  1D03               	btfss	3,2
  3658     0F4E  2F50               	goto	u2331
  3659     0F4F  2F51               	goto	u2330
  3660     0F50                     u2331:
  3661     0F50  2FDD               	goto	l2575
  3662     0F51                     u2330:
  3663     0F51                     l2547:
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3666     0F51  082C               	movf	vfpfcnvrt@ap^(0+128),w
  3667     0F52  0086               	movwf	6
  3668     0F53  0187               	clrf	7
  3669     0F54  0801               	movf	1,w
  3670     0F55  0084               	movwf	4
  3671     0F56  0185               	clrf	5
  3672     0F57  3002               	movlw	2
  3673     0F58  0781               	addwf	1,f
  3674     0F59  3F00               	moviw [0]fsr0
  3675     0F5A  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  3676     0F5B  3F01               	moviw [1]fsr0
  3677     0F5C  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3678     0F5D                     l2549:
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3681     0F5D  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3682     0F5E  3E01               	addlw	1
  3683     0F5F  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3684     0F60  3000               	movlw	0
  3685     0F61  3D34               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  3686     0F62  00AE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  3687     0F63  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3688     0F64  0086               	movwf	6
  3689     0F65  0187               	clrf	7
  3690     0F66  082D               	movf	??_vfpfcnvrt^(0+128),w
  3691     0F67  3FC0               	movwi [0]fsr1
  3692     0F68  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3693     0F69  3FC1               	movwi [1]fsr1
  3694     0F6A                     l2551:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3697     0F6A  3020               	movlw	32
  3698     0F6B  00B9               	movwf	vfpfcnvrt@c^(0+128)
  3699     0F6C                     l2553:
  3700                           
  3701                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3702     0F6C  1BB6               	btfsc	(vfpfcnvrt@convarg+1)^(0+128),7
  3703     0F6D  2F6F               	goto	u2341
  3704     0F6E  2F71               	goto	u2340
  3705     0F6F                     u2341:
  3706     0F6F  3001               	movlw	1
  3707     0F70  2F72               	goto	u2350
  3708     0F71                     u2340:
  3709     0F71  3000               	movlw	0
  3710     0F72                     u2350:
  3711     0F72  00B1               	movwf	vfpfcnvrt@done^(0+128)
  3712     0F73                     l2555:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3715     0F73  3001               	movlw	1
  3716     0F74  02B9               	subwf	vfpfcnvrt@c^(0+128),f
  3717     0F75  0839               	movf	vfpfcnvrt@c^(0+128),w
  3718     0F76  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3719     0F77  0086               	movwf	6
  3720     0F78  3001               	movlw	1	; select bank2/3
  3721     0F79  0087               	movwf	7
  3722     0F7A  300A               	movlw	10
  3723     0F7B  00A0               	movwf	___awmod@divisor^(0+128)
  3724     0F7C  3000               	movlw	0
  3725     0F7D  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  3726     0F7E  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3727     0F7F  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  3728     0F80  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3729     0F81  00A2               	movwf	___awmod@dividend^(0+128)
  3730     0F82  318D  259C  318F   	fcall	___awmod
  3731     0F85  0141               	movlb	1	; select bank1
  3732     0F86  0821               	movf	(?___awmod+1)^(0+128),w
  3733     0F87  00A8               	movwf	(abs@a+1)^(0+128)
  3734     0F88  0820               	movf	?___awmod^(0+128),w
  3735     0F89  00A7               	movwf	abs@a^(0+128)
  3736     0F8A  318C  2411  318F   	fcall	_abs
  3737     0F8D  0141               	movlb	1	; select bank1
  3738     0F8E  0827               	movf	?_abs^(0+128),w
  3739     0F8F  3E30               	addlw	48
  3740     0F90  0081               	movwf	1
  3741     0F91                     l2557:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3744     0F91  300A               	movlw	10
  3745     0F92  00A0               	movwf	___awdiv@divisor^(0+128)
  3746     0F93  3000               	movlw	0
  3747     0F94  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3748     0F95  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3749     0F96  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3750     0F97  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3751     0F98  00A2               	movwf	___awdiv@dividend^(0+128)
  3752     0F99  318E  2646  318F   	fcall	___awdiv
  3753     0F9C  0141               	movlb	1	; select bank1
  3754     0F9D  0821               	movf	(?___awdiv+1)^(0+128),w
  3755     0F9E  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3756     0F9F  0820               	movf	?___awdiv^(0+128),w
  3757     0FA0  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  3758     0FA1                     l2559:
  3759                           
  3760                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3761     0FA1  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3762     0FA2  0436               	iorwf	(vfpfcnvrt@convarg+1)^(0+128),w
  3763     0FA3  1903               	btfsc	3,2
  3764     0FA4  2FA6               	goto	u2361
  3765     0FA5  2FA7               	goto	u2360
  3766     0FA6                     u2361:
  3767     0FA6  2FAC               	goto	l2563
  3768     0FA7                     u2360:
  3769     0FA7                     l2561:
  3770     0FA7  0839               	movf	vfpfcnvrt@c^(0+128),w
  3771     0FA8  1D03               	btfss	3,2
  3772     0FA9  2FAB               	goto	u2371
  3773     0FAA  2FAC               	goto	u2370
  3774     0FAB                     u2371:
  3775     0FAB  2F73               	goto	l2555
  3776     0FAC                     u2370:
  3777     0FAC                     l2563:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3780     0FAC  0839               	movf	vfpfcnvrt@c^(0+128),w
  3781     0FAD  1903               	btfsc	3,2
  3782     0FAE  2FB0               	goto	u2381
  3783     0FAF  2FB1               	goto	u2380
  3784     0FB0                     u2381:
  3785     0FB0  2FD6               	goto	l2573
  3786     0FB1                     u2380:
  3787     0FB1                     l2565:
  3788     0FB1  0831               	movf	vfpfcnvrt@done^(0+128),w
  3789     0FB2  1903               	btfsc	3,2
  3790     0FB3  2FB5               	goto	u2391
  3791     0FB4  2FB6               	goto	u2390
  3792     0FB5                     u2391:
  3793     0FB5  2FD6               	goto	l2573
  3794     0FB6                     u2390:
  3795     0FB6                     l2567:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3798     0FB6  3001               	movlw	1
  3799     0FB7  02B9               	subwf	vfpfcnvrt@c^(0+128),f
  3800     0FB8  0839               	movf	vfpfcnvrt@c^(0+128),w
  3801     0FB9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3802     0FBA  0086               	movwf	6
  3803     0FBB  3001               	movlw	1	; select bank2/3
  3804     0FBC  0087               	movwf	7
  3805     0FBD  302D               	movlw	45
  3806     0FBE  0081               	movwf	1
  3807     0FBF  2FD6               	goto	l2573
  3808     0FC0                     l2569:
  3809                           
  3810                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3811     0FC0  0839               	movf	vfpfcnvrt@c^(0+128),w
  3812     0FC1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3813     0FC2  0086               	movwf	6
  3814     0FC3  3001               	movlw	1	; select bank2/3
  3815     0FC4  0087               	movwf	7
  3816     0FC5  0801               	movf	1,w
  3817     0FC6  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3818     0FC7  01AE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  3819     0FC8  082D               	movf	??_vfpfcnvrt^(0+128),w
  3820     0FC9  00A0               	movwf	fputc@c^(0+128)
  3821     0FCA  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3822     0FCB  00A1               	movwf	(fputc@c+1)^(0+128)
  3823     0FCC  0832               	movf	vfpfcnvrt@fp^(0+128),w
  3824     0FCD  00A2               	movwf	fputc@fp^(0+128)
  3825     0FCE  3187  27AE  318F   	fcall	_fputc
  3826     0FD1                     l2571:
  3827     0FD1  3001               	movlw	1
  3828     0FD2  0141               	movlb	1	; select bank1
  3829     0FD3  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3830     0FD4  082D               	movf	??_vfpfcnvrt^(0+128),w
  3831     0FD5  07B9               	addwf	vfpfcnvrt@c^(0+128),f
  3832     0FD6                     l2573:
  3833                           
  3834                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3835     0FD6  3020               	movlw	32
  3836     0FD7  0639               	xorwf	vfpfcnvrt@c^(0+128),w
  3837     0FD8  1D03               	btfss	3,2
  3838     0FD9  2FDB               	goto	u2401
  3839     0FDA  2FDC               	goto	u2400
  3840     0FDB                     u2401:
  3841     0FDB  2FC0               	goto	l2569
  3842     0FDC                     u2400:
  3843     0FDC  2FFF               	goto	l883
  3844     0FDD                     l2575:
  3845                           
  3846                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3847     0FDD  0141               	movlb	1	; select bank1
  3848     0FDE  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3849     0FDF  0086               	movwf	6
  3850     0FE0  0187               	clrf	7
  3851     0FE1  3001               	movlw	1
  3852     0FE2  0781               	addwf	1,f
  3853     0FE3  3141               	addfsr 1,1
  3854     0FE4  1803               	skipnc
  3855     0FE5  0A81               	incf	1,f
  3856     0FE6  2FFF               	goto	l883
  3857     0FE7                     l2579:
  3858                           
  3859                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3860     0FE7  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3861     0FE8  0086               	movwf	6
  3862     0FE9  0187               	clrf	7
  3863     0FEA  3F40               	moviw [0]fsr1
  3864     0FEB  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3865     0FEC  3F41               	moviw [1]fsr1
  3866     0FED  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3867     0FEE  082D               	movf	??_vfpfcnvrt^(0+128),w
  3868     0FEF  0084               	movwf	4
  3869     0FF0  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3870     0FF1  0085               	movwf	5
  3871     0FF2  0800               	movf	0,w	;code access
  3872     0FF3  00AF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3873     0FF4  01B0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3874     0FF5  082F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3875     0FF6  00A0               	movwf	fputc@c^(0+128)
  3876     0FF7  0830               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3877     0FF8  00A1               	movwf	(fputc@c+1)^(0+128)
  3878     0FF9  0832               	movf	vfpfcnvrt@fp^(0+128),w
  3879     0FFA  00A2               	movwf	fputc@fp^(0+128)
  3880     0FFB  3187  27AE  318F   	fcall	_fputc
  3881     0FFE  2FDD               	goto	l2575
  3882     0FFF                     l883:
  3883     0FFF  0008               	return
  3884     1000                     __end_of_vfpfcnvrt:
  3885                           
  3886                           	psect	text13
  3887     07AE                     __ptext13:	
  3888 ;; *************** function _fputc *****************
  3889 ;; Defined at:
  3890 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  c               2    0[BANK1 ] int 
  3893 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3894 ;;		 -> sprintf@f(11), 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  2    0[BANK1 ] int 
  3899 ;; Registers used:
  3900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3906 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3908 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3909 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;Total ram usage:        8 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 4
  3913 ;; This function calls:
  3914 ;;		_putch
  3915 ;; This function is called by:
  3916 ;;		_vfpfcnvrt
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920     07AE                     _fputc:	
  3921                           ;psect for function _fputc
  3922                           
  3923     07AE                     l2517:	
  3924                           ;incstack = 0
  3925                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3926                           
  3927     07AE  0141               	movlb	1	; select bank1
  3928     07AF  0822               	movf	fputc@fp^(0+128),w
  3929     07B0  1903               	btfsc	3,2
  3930     07B1  2FB3               	goto	u2271
  3931     07B2  2FB4               	goto	u2270
  3932     07B3                     u2271:
  3933     07B3  2FB9               	goto	l2521
  3934     07B4                     u2270:
  3935     07B4                     l2519:
  3936     07B4  0822               	movf	fputc@fp^(0+128),w
  3937     07B5  1D03               	btfss	3,2
  3938     07B6  2FB8               	goto	u2281
  3939     07B7  2FB9               	goto	u2280
  3940     07B8                     u2281:
  3941     07B8  2FBE               	goto	l2523
  3942     07B9                     u2280:
  3943     07B9                     l2521:
  3944     07B9  0820               	movf	fputc@c^(0+128),w
  3945     07BA  3180  2003  3187   	fcall	_putch
  3946     07BD  2FFF               	goto	l908
  3947     07BE                     l2523:
  3948     07BE  0822               	movf	fputc@fp^(0+128),w
  3949     07BF  3E09               	addlw	9
  3950     07C0  0086               	movwf	6
  3951     07C1  0187               	clrf	7
  3952     07C2  0016               	moviw fsr1++
  3953     07C3  0401               	iorwf	1,w
  3954     07C4  1903               	btfsc	3,2
  3955     07C5  2FC7               	goto	u2291
  3956     07C6  2FC8               	goto	u2290
  3957     07C7                     u2291:
  3958     07C7  2FE6               	goto	l2527
  3959     07C8                     u2290:
  3960     07C8                     l2525:
  3961     07C8  0822               	movf	fputc@fp^(0+128),w
  3962     07C9  3E09               	addlw	9
  3963     07CA  0086               	movwf	6
  3964     07CB  0187               	clrf	7
  3965     07CC  3F40               	moviw [0]fsr1
  3966     07CD  00A3               	movwf	??_fputc^(0+128)
  3967     07CE  3F41               	moviw [1]fsr1
  3968     07CF  00A4               	movwf	(??_fputc^(0+128)+1)
  3969     07D0  0822               	movf	fputc@fp^(0+128),w
  3970     07D1  3E02               	addlw	2
  3971     07D2  0086               	movwf	6
  3972     07D3  0187               	clrf	7
  3973     07D4  3F40               	moviw [0]fsr1
  3974     07D5  00A5               	movwf	(??_fputc+2)^(0+128)
  3975     07D6  3F41               	moviw [1]fsr1
  3976     07D7  00A6               	movwf	((??_fputc+2)^(0+128)+1)
  3977     07D8  0826               	movf	(??_fputc+3)^(0+128),w
  3978     07D9  3A80               	xorlw	128
  3979     07DA  00A7               	movwf	(??_fputc+4)^(0+128)
  3980     07DB  0824               	movf	(??_fputc+1)^(0+128),w
  3981     07DC  3A80               	xorlw	128
  3982     07DD  0227               	subwf	(??_fputc+4)^(0+128),w
  3983     07DE  1D03               	skipz
  3984     07DF  2FE2               	goto	u2305
  3985     07E0  0823               	movf	??_fputc^(0+128),w
  3986     07E1  0225               	subwf	(??_fputc+2)^(0+128),w
  3987     07E2                     u2305:
  3988     07E2  1803               	skipnc
  3989     07E3  2FE5               	goto	u2301
  3990     07E4  2FE6               	goto	u2300
  3991     07E5                     u2301:
  3992     07E5  2FFF               	goto	l908
  3993     07E6                     u2300:
  3994     07E6                     l2527:
  3995     07E6  0141               	movlb	1	; select bank1
  3996     07E7  0822               	movf	fputc@fp^(0+128),w
  3997     07E8  0086               	movwf	6
  3998     07E9  0187               	clrf	7
  3999     07EA  0822               	movf	fputc@fp^(0+128),w
  4000     07EB  3E02               	addlw	2
  4001     07EC  0084               	movwf	4
  4002     07ED  0185               	clrf	5
  4003     07EE  0800               	movf	0,w
  4004     07EF  0701               	addwf	1,w
  4005     07F0  00A3               	movwf	??_fputc^(0+128)
  4006     07F1  0823               	movf	??_fputc^(0+128),w
  4007     07F2  0086               	movwf	6
  4008     07F3  0187               	clrf	7
  4009     07F4  0820               	movf	fputc@c^(0+128),w
  4010     07F5  0081               	movwf	1
  4011     07F6                     l2529:
  4012     07F6  0822               	movf	fputc@fp^(0+128),w
  4013     07F7  3E02               	addlw	2
  4014     07F8  0086               	movwf	6
  4015     07F9  0187               	clrf	7
  4016     07FA  3001               	movlw	1
  4017     07FB  0781               	addwf	1,f
  4018     07FC  3141               	addfsr 1,1
  4019     07FD  1803               	skipnc
  4020     07FE  0A81               	incf	1,f
  4021     07FF                     l908:
  4022     07FF  0008               	return
  4023     0800                     __end_of_fputc:
  4024                           
  4025                           	psect	text14
  4026     0003                     __ptext14:	
  4027 ;; *************** function _putch *****************
  4028 ;; Defined at:
  4029 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  c               1    wreg     unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  c               1    0[COMMON] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;Total ram usage:        0 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 3
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_fputc
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057     0003                     _putch:	
  4058                           ;psect for function _putch
  4059                           
  4060     0003                     l919:	
  4061                           ;incstack = 0
  4062                           ; Regs used in _putch: [wreg]
  4063                           
  4064     0003  0008               	return
  4065     0004                     __end_of_putch:
  4066                           
  4067                           	psect	text15
  4068     0C11                     __ptext15:	
  4069 ;; *************** function _abs *****************
  4070 ;; Defined at:
  4071 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  a               2    7[BANK1 ] int 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2    7[BANK1 ] int 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4085 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4088 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4089 ;;Total ram usage:        4 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 3
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_vfpfcnvrt
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099     0C11                     _abs:	
  4100                           ;psect for function _abs
  4101                           
  4102     0C11                     l1817:	
  4103                           ;incstack = 0
  4104                           ; Regs used in _abs: [wreg+status,2+status,0]
  4105                           
  4106     0C11  0141               	movlb	1	; select bank1
  4107     0C12  1BA8               	btfsc	(abs@a+1)^(0+128),7
  4108     0C13  2C15               	goto	u1371
  4109     0C14  2C16               	goto	u1370
  4110     0C15                     u1371:
  4111     0C15  2C17               	goto	l1821
  4112     0C16                     u1370:
  4113     0C16                     l1819:
  4114     0C16  2C22               	goto	l896
  4115     0C17                     l1821:
  4116     0C17  0927               	comf	abs@a^(0+128),w
  4117     0C18  00A9               	movwf	??_abs^(0+128)
  4118     0C19  0928               	comf	(abs@a+1)^(0+128),w
  4119     0C1A  00AA               	movwf	(??_abs^(0+128)+1)
  4120     0C1B  0AA9               	incf	??_abs^(0+128),f
  4121     0C1C  1903               	skipnz
  4122     0C1D  0AAA               	incf	(??_abs^(0+128)+1),f
  4123     0C1E  0829               	movf	??_abs^(0+128),w
  4124     0C1F  00A7               	movwf	?_abs^(0+128)
  4125     0C20  082A               	movf	(??_abs+1)^(0+128),w
  4126     0C21  00A8               	movwf	(?_abs+1)^(0+128)
  4127     0C22                     l896:
  4128     0C22  0008               	return
  4129     0C23                     __end_of_abs:
  4130                           
  4131                           	psect	text16
  4132     0D9C                     __ptext16:	
  4133 ;; *************** function ___awmod *****************
  4134 ;; Defined at:
  4135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  divisor         2    0[BANK1 ] int 
  4138 ;;  dividend        2    2[BANK1 ] int 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  sign            1    6[BANK1 ] unsigned char 
  4141 ;;  counter         1    5[BANK1 ] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2    0[BANK1 ] int 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4151 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;Total ram usage:        7 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; Hardware stack levels required when called: 3
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_vfpfcnvrt
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165     0D9C                     ___awmod:	
  4166                           ;psect for function ___awmod
  4167                           
  4168     0D9C                     l1763:	
  4169                           ;incstack = 0
  4170                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4171                           
  4172     0D9C  0141               	movlb	1	; select bank1
  4173     0D9D  01A6               	clrf	___awmod@sign^(0+128)
  4174     0D9E                     l1765:
  4175     0D9E  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  4176     0D9F  2DA1               	goto	u1241
  4177     0DA0  2DA2               	goto	u1240
  4178     0DA1                     u1241:
  4179     0DA1  2DA9               	goto	l1771
  4180     0DA2                     u1240:
  4181     0DA2                     l1767:
  4182     0DA2  09A2               	comf	___awmod@dividend^(0+128),f
  4183     0DA3  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4184     0DA4  0AA2               	incf	___awmod@dividend^(0+128),f
  4185     0DA5  1903               	skipnz
  4186     0DA6  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4187     0DA7                     l1769:
  4188     0DA7  01A6               	clrf	___awmod@sign^(0+128)
  4189     0DA8  0AA6               	incf	___awmod@sign^(0+128),f
  4190     0DA9                     l1771:
  4191     0DA9  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4192     0DAA  2DAC               	goto	u1251
  4193     0DAB  2DAD               	goto	u1250
  4194     0DAC                     u1251:
  4195     0DAC  2DB2               	goto	l1775
  4196     0DAD                     u1250:
  4197     0DAD                     l1773:
  4198     0DAD  09A0               	comf	___awmod@divisor^(0+128),f
  4199     0DAE  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  4200     0DAF  0AA0               	incf	___awmod@divisor^(0+128),f
  4201     0DB0  1903               	skipnz
  4202     0DB1  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  4203     0DB2                     l1775:
  4204     0DB2  0820               	movf	___awmod@divisor^(0+128),w
  4205     0DB3  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  4206     0DB4  1903               	btfsc	3,2
  4207     0DB5  2DB7               	goto	u1261
  4208     0DB6  2DB8               	goto	u1260
  4209     0DB7                     u1261:
  4210     0DB7  2DE1               	goto	l1793
  4211     0DB8                     u1260:
  4212     0DB8                     l1777:
  4213     0DB8  01A5               	clrf	___awmod@counter^(0+128)
  4214     0DB9  0AA5               	incf	___awmod@counter^(0+128),f
  4215     0DBA  2DC4               	goto	l1783
  4216     0DBB                     l1779:
  4217     0DBB  3001               	movlw	1
  4218     0DBC                     u1275:
  4219     0DBC  35A0               	lslf	___awmod@divisor^(0+128),f
  4220     0DBD  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  4221     0DBE  0B89               	decfsz	9,f
  4222     0DBF  2DBC               	goto	u1275
  4223     0DC0                     l1781:
  4224     0DC0  3001               	movlw	1
  4225     0DC1  00A4               	movwf	??___awmod^(0+128)
  4226     0DC2  0824               	movf	??___awmod^(0+128),w
  4227     0DC3  07A5               	addwf	___awmod@counter^(0+128),f
  4228     0DC4                     l1783:
  4229     0DC4  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4230     0DC5  2DC7               	goto	u1281
  4231     0DC6  2DC8               	goto	u1280
  4232     0DC7                     u1281:
  4233     0DC7  2DBB               	goto	l1779
  4234     0DC8                     u1280:
  4235     0DC8                     l1785:
  4236     0DC8  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4237     0DC9  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  4238     0DCA  1D03               	skipz
  4239     0DCB  2DCE               	goto	u1295
  4240     0DCC  0820               	movf	___awmod@divisor^(0+128),w
  4241     0DCD  0222               	subwf	___awmod@dividend^(0+128),w
  4242     0DCE                     u1295:
  4243     0DCE  1C03               	skipc
  4244     0DCF  2DD1               	goto	u1291
  4245     0DD0  2DD2               	goto	u1290
  4246     0DD1                     u1291:
  4247     0DD1  2DD6               	goto	l1789
  4248     0DD2                     u1290:
  4249     0DD2                     l1787:
  4250     0DD2  0820               	movf	___awmod@divisor^(0+128),w
  4251     0DD3  02A2               	subwf	___awmod@dividend^(0+128),f
  4252     0DD4  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4253     0DD5  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
  4254     0DD6                     l1789:
  4255     0DD6  3001               	movlw	1
  4256     0DD7                     u1305:
  4257     0DD7  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
  4258     0DD8  0CA0               	rrf	___awmod@divisor^(0+128),f
  4259     0DD9  0B89               	decfsz	9,f
  4260     0DDA  2DD7               	goto	u1305
  4261     0DDB                     l1791:
  4262     0DDB  3001               	movlw	1
  4263     0DDC  02A5               	subwf	___awmod@counter^(0+128),f
  4264     0DDD  1D03               	btfss	3,2
  4265     0DDE  2DE0               	goto	u1311
  4266     0DDF  2DE1               	goto	u1310
  4267     0DE0                     u1311:
  4268     0DE0  2DC8               	goto	l1785
  4269     0DE1                     u1310:
  4270     0DE1                     l1793:
  4271     0DE1  0826               	movf	___awmod@sign^(0+128),w
  4272     0DE2  1903               	btfsc	3,2
  4273     0DE3  2DE5               	goto	u1321
  4274     0DE4  2DE6               	goto	u1320
  4275     0DE5                     u1321:
  4276     0DE5  2DEB               	goto	l1797
  4277     0DE6                     u1320:
  4278     0DE6                     l1795:
  4279     0DE6  09A2               	comf	___awmod@dividend^(0+128),f
  4280     0DE7  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4281     0DE8  0AA2               	incf	___awmod@dividend^(0+128),f
  4282     0DE9  1903               	skipnz
  4283     0DEA  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4284     0DEB                     l1797:
  4285     0DEB  0823               	movf	(___awmod@dividend+1)^(0+128),w
  4286     0DEC  00A1               	movwf	(?___awmod+1)^(0+128)
  4287     0DED  0822               	movf	___awmod@dividend^(0+128),w
  4288     0DEE  00A0               	movwf	?___awmod^(0+128)
  4289     0DEF                     l548:
  4290     0DEF  0008               	return
  4291     0DF0                     __end_of___awmod:
  4292                           
  4293                           	psect	text17
  4294     0E46                     __ptext17:	
  4295 ;; *************** function ___awdiv *****************
  4296 ;; Defined at:
  4297 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  divisor         2    0[BANK1 ] int 
  4300 ;;  dividend        2    2[BANK1 ] int 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  quotient        2    7[BANK1 ] int 
  4303 ;;  sign            1    6[BANK1 ] unsigned char 
  4304 ;;  counter         1    5[BANK1 ] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  2    0[BANK1 ] int 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4314 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;Total ram usage:        9 bytes
  4319 ;; Hardware stack levels used: 1
  4320 ;; Hardware stack levels required when called: 3
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_vfpfcnvrt
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328     0E46                     ___awdiv:	
  4329                           ;psect for function ___awdiv
  4330                           
  4331     0E46                     l1719:	
  4332                           ;incstack = 0
  4333                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4334                           
  4335     0E46  0141               	movlb	1	; select bank1
  4336     0E47  01A6               	clrf	___awdiv@sign^(0+128)
  4337     0E48                     l1721:
  4338     0E48  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4339     0E49  2E4B               	goto	u1141
  4340     0E4A  2E4C               	goto	u1140
  4341     0E4B                     u1141:
  4342     0E4B  2E53               	goto	l1727
  4343     0E4C                     u1140:
  4344     0E4C                     l1723:
  4345     0E4C  09A0               	comf	___awdiv@divisor^(0+128),f
  4346     0E4D  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4347     0E4E  0AA0               	incf	___awdiv@divisor^(0+128),f
  4348     0E4F  1903               	skipnz
  4349     0E50  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4350     0E51                     l1725:
  4351     0E51  01A6               	clrf	___awdiv@sign^(0+128)
  4352     0E52  0AA6               	incf	___awdiv@sign^(0+128),f
  4353     0E53                     l1727:
  4354     0E53  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4355     0E54  2E56               	goto	u1151
  4356     0E55  2E57               	goto	u1150
  4357     0E56                     u1151:
  4358     0E56  2E60               	goto	l1733
  4359     0E57                     u1150:
  4360     0E57                     l1729:
  4361     0E57  09A2               	comf	___awdiv@dividend^(0+128),f
  4362     0E58  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4363     0E59  0AA2               	incf	___awdiv@dividend^(0+128),f
  4364     0E5A  1903               	skipnz
  4365     0E5B  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4366     0E5C                     l1731:
  4367     0E5C  3001               	movlw	1
  4368     0E5D  00A4               	movwf	??___awdiv^(0+128)
  4369     0E5E  0824               	movf	??___awdiv^(0+128),w
  4370     0E5F  06A6               	xorwf	___awdiv@sign^(0+128),f
  4371     0E60                     l1733:
  4372     0E60  01A7               	clrf	___awdiv@quotient^(0+128)
  4373     0E61  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  4374     0E62                     l1735:
  4375     0E62  0820               	movf	___awdiv@divisor^(0+128),w
  4376     0E63  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4377     0E64  1903               	btfsc	3,2
  4378     0E65  2E67               	goto	u1161
  4379     0E66  2E68               	goto	u1160
  4380     0E67                     u1161:
  4381     0E67  2E97               	goto	l1755
  4382     0E68                     u1160:
  4383     0E68                     l1737:
  4384     0E68  01A5               	clrf	___awdiv@counter^(0+128)
  4385     0E69  0AA5               	incf	___awdiv@counter^(0+128),f
  4386     0E6A  2E74               	goto	l1743
  4387     0E6B                     l1739:
  4388     0E6B  3001               	movlw	1
  4389     0E6C                     u1175:
  4390     0E6C  35A0               	lslf	___awdiv@divisor^(0+128),f
  4391     0E6D  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4392     0E6E  0B89               	decfsz	9,f
  4393     0E6F  2E6C               	goto	u1175
  4394     0E70                     l1741:
  4395     0E70  3001               	movlw	1
  4396     0E71  00A4               	movwf	??___awdiv^(0+128)
  4397     0E72  0824               	movf	??___awdiv^(0+128),w
  4398     0E73  07A5               	addwf	___awdiv@counter^(0+128),f
  4399     0E74                     l1743:
  4400     0E74  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4401     0E75  2E77               	goto	u1181
  4402     0E76  2E78               	goto	u1180
  4403     0E77                     u1181:
  4404     0E77  2E6B               	goto	l1739
  4405     0E78                     u1180:
  4406     0E78                     l1745:
  4407     0E78  3001               	movlw	1
  4408     0E79                     u1195:
  4409     0E79  35A7               	lslf	___awdiv@quotient^(0+128),f
  4410     0E7A  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  4411     0E7B  0B89               	decfsz	9,f
  4412     0E7C  2E79               	goto	u1195
  4413     0E7D  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4414     0E7E  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4415     0E7F  1D03               	skipz
  4416     0E80  2E83               	goto	u1205
  4417     0E81  0820               	movf	___awdiv@divisor^(0+128),w
  4418     0E82  0222               	subwf	___awdiv@dividend^(0+128),w
  4419     0E83                     u1205:
  4420     0E83  1C03               	skipc
  4421     0E84  2E86               	goto	u1201
  4422     0E85  2E87               	goto	u1200
  4423     0E86                     u1201:
  4424     0E86  2E8C               	goto	l1751
  4425     0E87                     u1200:
  4426     0E87                     l1747:
  4427     0E87  0820               	movf	___awdiv@divisor^(0+128),w
  4428     0E88  02A2               	subwf	___awdiv@dividend^(0+128),f
  4429     0E89  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4430     0E8A  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
  4431     0E8B                     l1749:
  4432     0E8B  1427               	bsf	___awdiv@quotient^(0+128),0
  4433     0E8C                     l1751:
  4434     0E8C  3001               	movlw	1
  4435     0E8D                     u1215:
  4436     0E8D  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
  4437     0E8E  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4438     0E8F  0B89               	decfsz	9,f
  4439     0E90  2E8D               	goto	u1215
  4440     0E91                     l1753:
  4441     0E91  3001               	movlw	1
  4442     0E92  02A5               	subwf	___awdiv@counter^(0+128),f
  4443     0E93  1D03               	btfss	3,2
  4444     0E94  2E96               	goto	u1221
  4445     0E95  2E97               	goto	u1220
  4446     0E96                     u1221:
  4447     0E96  2E78               	goto	l1745
  4448     0E97                     u1220:
  4449     0E97                     l1755:
  4450     0E97  0826               	movf	___awdiv@sign^(0+128),w
  4451     0E98  1903               	btfsc	3,2
  4452     0E99  2E9B               	goto	u1231
  4453     0E9A  2E9C               	goto	u1230
  4454     0E9B                     u1231:
  4455     0E9B  2EA1               	goto	l1759
  4456     0E9C                     u1230:
  4457     0E9C                     l1757:
  4458     0E9C  09A7               	comf	___awdiv@quotient^(0+128),f
  4459     0E9D  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  4460     0E9E  0AA7               	incf	___awdiv@quotient^(0+128),f
  4461     0E9F  1903               	skipnz
  4462     0EA0  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  4463     0EA1                     l1759:
  4464     0EA1  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  4465     0EA2  00A1               	movwf	(?___awdiv+1)^(0+128)
  4466     0EA3  0827               	movf	___awdiv@quotient^(0+128),w
  4467     0EA4  00A0               	movwf	?___awdiv^(0+128)
  4468     0EA5                     l535:
  4469     0EA5  0008               	return
  4470     0EA6                     __end_of___awdiv:
  4471                           
  4472                           	psect	text18
  4473     0C3A                     __ptext18:	
  4474 ;; *************** function _WriteString *****************
  4475 ;; Defined at:
  4476 ;;		line 207 in file "main.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  4479 ;;		 -> STR_2(3), Write_table@tx_data(8), 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4491 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;Total ram usage:        3 bytes
  4496 ;; Hardware stack levels used: 1
  4497 ;; Hardware stack levels required when called: 4
  4498 ;; This function calls:
  4499 ;;		_Write_Byte
  4500 ;; This function is called by:
  4501 ;;		_Write_table
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505     0C3A                     _WriteString:	
  4506                           ;psect for function _WriteString
  4507                           
  4508     0C3A                     l2611:	
  4509                           ;incstack = 0
  4510                           ; Regs used in _WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4511                           
  4512                           
  4513                           ;main.c: 208:     while (*str) {
  4514     0C3A  2C48               	goto	l2617
  4515     0C3B                     l2613:
  4516                           
  4517                           ;main.c: 209:         Write_Byte(*str);
  4518     0C3B  0821               	movf	WriteString@str^(0+128),w
  4519     0C3C  0084               	movwf	4
  4520     0C3D  0822               	movf	(WriteString@str+1)^(0+128),w
  4521     0C3E  0085               	movwf	5
  4522     0C3F  0800               	movf	0,w	;code access
  4523     0C40  318B  23ED  318C   	fcall	_Write_Byte
  4524     0C43                     l2615:
  4525                           
  4526                           ;main.c: 210:         str++;
  4527     0C43  3001               	movlw	1
  4528     0C44  0141               	movlb	1	; select bank1
  4529     0C45  07A1               	addwf	WriteString@str^(0+128),f
  4530     0C46  3000               	movlw	0
  4531     0C47  3DA2               	addwfc	(WriteString@str+1)^(0+128),f
  4532     0C48                     l2617:
  4533                           
  4534                           ;main.c: 208:     while (*str) {
  4535     0C48  0141               	movlb	1	; select bank1
  4536     0C49  0821               	movf	WriteString@str^(0+128),w
  4537     0C4A  0084               	movwf	4
  4538     0C4B  0822               	movf	(WriteString@str+1)^(0+128),w
  4539     0C4C  0085               	movwf	5
  4540     0C4D  0012               	moviw fsr0++
  4541     0C4E  1D03               	btfss	3,2
  4542     0C4F  2C51               	goto	u2431
  4543     0C50  2C52               	goto	u2430
  4544     0C51                     u2431:
  4545     0C51  2C3B               	goto	l2613
  4546     0C52                     u2430:
  4547     0C52                     l227:
  4548     0C52  0008               	return
  4549     0C53                     __end_of_WriteString:
  4550                           
  4551                           	psect	text19
  4552     0BED                     __ptext19:	
  4553 ;; *************** function _Write_Byte *****************
  4554 ;; Defined at:
  4555 ;;		line 198 in file "main.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  chr             1    wreg     unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  chr             1    0[BANK1 ] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;Total ram usage:        1 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; Hardware stack levels required when called: 3
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_WriteString
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583     0BED                     _Write_Byte:	
  4584                           ;psect for function _Write_Byte
  4585                           
  4586                           
  4587                           ;incstack = 0
  4588                           ; Regs used in _Write_Byte: [wreg]
  4589                           ;Write_Byte@chr stored from wreg
  4590     0BED  0141               	movlb	1	; select bank1
  4591     0BEE  00A0               	movwf	Write_Byte@chr^(0+128)
  4592     0BEF                     l2585:
  4593     0BEF                     l218:	
  4594                           ;main.c: 199:     while (!TRMT);
  4595                           
  4596     0BEF  0142               	movlb	2	; select bank2
  4597     0BF0  1C9E               	btfss	30,1	;volatile
  4598     0BF1  2BF3               	goto	u2411
  4599     0BF2  2BF4               	goto	u2410
  4600     0BF3                     u2411:
  4601     0BF3  2BEF               	goto	l218
  4602     0BF4                     u2410:
  4603     0BF4                     l2587:
  4604                           
  4605                           ;main.c: 200:     TX1REG = chr;
  4606     0BF4  0141               	movlb	1	; select bank1
  4607     0BF5  0820               	movf	Write_Byte@chr^(0+128),w
  4608     0BF6  0142               	movlb	2	; select bank2
  4609     0BF7  009A               	movwf	26	;volatile
  4610     0BF8                     l221:
  4611     0BF8  0008               	return
  4612     0BF9                     __end_of_Write_Byte:
  4613                           
  4614                           	psect	intentry
  4615     0004                     __pintentry:	
  4616 ;; *************** function _InterruptManager *****************
  4617 ;; Defined at:
  4618 ;;		line 298 in file "main.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;Total ram usage:        4 bytes
  4637 ;; Hardware stack levels used: 1
  4638 ;; Hardware stack levels required when called: 2
  4639 ;; This function calls:
  4640 ;;		_ccp1_disable
  4641 ;;		_ccp2_enable
  4642 ;;		_ignition_disable
  4643 ;;		i1___lwdiv
  4644 ;;		i1_calc_map
  4645 ;;		i1_ccp1_enable
  4646 ;;		i1_ccp2_disable
  4647 ;; This function is called by:
  4648 ;;		Interrupt level 1
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652     0004                     _InterruptManager:
  4653                           
  4654                           ;incstack = 0
  4655     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4656                           
  4657                           ; Regs used in _InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4658     0005  3180               	pagesel	$
  4659     0006                     i1l2381:
  4660                           
  4661                           ;main.c: 300:     if (CCP1IF) {
  4662     0006  014E               	movlb	14	; select bank14
  4663     0007  1F8D               	btfss	13,7	;volatile
  4664     0008  280A               	goto	u201_21
  4665     0009  280B               	goto	u201_20
  4666     000A                     u201_21:
  4667     000A  28FB               	goto	i1l2473
  4668     000B                     u201_20:
  4669     000B                     i1l2383:
  4670                           
  4671                           ;main.c: 301:         if (EG_state == EG_RUN) {
  4672     000B  0141               	movlb	1	; select bank1
  4673     000C  0365               	decf	_EG_state^(0+128),w
  4674     000D  1D03               	btfss	3,2
  4675     000E  2810               	goto	u202_21
  4676     000F  2811               	goto	u202_20
  4677     0010                     u202_21:
  4678     0010  28EC               	goto	i1l2461
  4679     0011                     u202_20:
  4680     0011                     i1l2385:
  4681                           
  4682                           ;main.c: 302:             TMR1ON = 0;
  4683     0011  0144               	movlb	4	; select bank4
  4684     0012  100E               	bcf	14,0	;volatile
  4685     0013                     i1l2387:
  4686                           
  4687                           ;main.c: 303:             TMR1H = 0x00;
  4688     0013  018D               	clrf	13	;volatile
  4689                           
  4690                           ;main.c: 304:             TMR1L = 0x00;
  4691     0014  018C               	clrf	12	;volatile
  4692     0015                     i1l2389:
  4693                           
  4694                           ;main.c: 305:             TMR1ON = 1;
  4695     0015  140E               	bsf	14,0	;volatile
  4696     0016                     i1l2391:
  4697                           
  4698                           ;main.c: 306:             ccp1_disable();
  4699     0016  318B  23B9  3180   	fcall	_ccp1_disable
  4700     0019                     i1l2393:
  4701                           
  4702                           ;main.c: 307:             t1_count = CCPR1;
  4703     0019  0146               	movlb	6	; select bank6
  4704     001A  080D               	movf	13,w	;volatile
  4705     001B  0141               	movlb	1	; select bank1
  4706     001C  00E8               	movwf	(_t1_count+1)^(0+128)
  4707     001D  0146               	movlb	6	; select bank6
  4708     001E  080C               	movf	12,w	;volatile
  4709     001F  0141               	movlb	1	; select bank1
  4710     0020  00E7               	movwf	_t1_count^(0+128)
  4711     0021                     i1l2395:
  4712                           
  4713                           ;main.c: 309:             rpm = (uint8_t) (numerator_rpm / (t1_count >> 4));
  4714     0021  0E67               	swapf	_t1_count^(0+128),w
  4715     0022  390F               	andlw	15
  4716     0023  00F0               	movwf	i1___lwdiv@divisor
  4717     0024  0E68               	swapf	(_t1_count+1)^(0+128),w
  4718     0025  39F0               	andlw	240
  4719     0026  04F0               	iorwf	i1___lwdiv@divisor,f
  4720     0027  0E68               	swapf	(_t1_count+1)^(0+128),w
  4721     0028  390F               	andlw	15
  4722     0029  00F1               	movwf	i1___lwdiv@divisor+1
  4723     002A  307C               	movlw	124
  4724     002B  00F2               	movwf	i1___lwdiv@dividend
  4725     002C  3092               	movlw	146
  4726     002D  00F3               	movwf	i1___lwdiv@dividend+1
  4727     002E  318D  2523  3180   	fcall	i1___lwdiv
  4728     0031  0870               	movf	?i1___lwdiv,w
  4729     0032  0141               	movlb	1	; select bank1
  4730     0033  00E6               	movwf	_rpm^(0+128)
  4731     0034                     i1l2397:
  4732                           
  4733                           ;main.c: 311:             if ((rpm > (10))&&(rpm <= (130))) {
  4734     0034  300B               	movlw	11
  4735     0035  0266               	subwf	_rpm^(0+128),w
  4736     0036  1C03               	skipc
  4737     0037  2839               	goto	u203_21
  4738     0038  283A               	goto	u203_20
  4739     0039                     u203_21:
  4740     0039  2885               	goto	i1l2419
  4741     003A                     u203_20:
  4742     003A                     i1l2399:
  4743     003A  3083               	movlw	131
  4744     003B  0266               	subwf	_rpm^(0+128),w
  4745     003C  1803               	skipnc
  4746     003D  283F               	goto	u204_21
  4747     003E  2840               	goto	u204_20
  4748     003F                     u204_21:
  4749     003F  2885               	goto	i1l2419
  4750     0040                     u204_20:
  4751     0040                     i1l2401:
  4752                           
  4753                           ;main.c: 312:                 ig_counter = IG_table[rpm];
  4754     0040  0866               	movf	_rpm^(0+128),w
  4755     0041  0140               	movlb	0	; select bank0
  4756     0042  00C4               	movwf	??_InterruptManager
  4757     0043  01C5               	clrf	??_InterruptManager+1
  4758     0044  35C4               	lslf	??_InterruptManager,f
  4759     0045  0DC5               	rlf	??_InterruptManager+1,f
  4760     0046  3067               	movlw	103
  4761     0047  00C6               	movwf	??_InterruptManager+2
  4762     0048  3022               	movlw	34
  4763     0049  00C7               	movwf	??_InterruptManager+3
  4764     004A  0844               	movf	??_InterruptManager,w
  4765     004B  0746               	addwf	??_InterruptManager+2,w
  4766     004C  0086               	movwf	6
  4767     004D  0845               	movf	??_InterruptManager+1,w
  4768     004E  3D47               	addwfc	??_InterruptManager+3,w
  4769     004F  0087               	movwf	7
  4770     0050  3F40               	moviw [0]fsr1
  4771     0051  0141               	movlb	1	; select bank1
  4772     0052  00E2               	movwf	_ig_counter^(0+128)
  4773     0053  3F41               	moviw [1]fsr1
  4774     0054  00E3               	movwf	(_ig_counter+1)^(0+128)
  4775     0055                     i1l2403:
  4776                           
  4777                           ;main.c: 313:                 LATC2 = (0);
  4778     0055  0140               	movlb	0	; select bank0
  4779     0056  111A               	bcf	26,2	;volatile
  4780     0057                     i1l2405:
  4781                           
  4782                           ;main.c: 314:                 if ((ig_counter - 15) > TMR1) {
  4783     0057  0141               	movlb	1	; select bank1
  4784     0058  0862               	movf	_ig_counter^(0+128),w
  4785     0059  3EF1               	addlw	241
  4786     005A  0140               	movlb	0	; select bank0
  4787     005B  00C4               	movwf	??_InterruptManager
  4788     005C  30FF               	movlw	255
  4789     005D  0141               	movlb	1	; select bank1
  4790     005E  3D63               	addwfc	(_ig_counter+1)^(0+128),w
  4791     005F  0140               	movlb	0	; select bank0
  4792     0060  00C5               	movwf	??_InterruptManager+1
  4793     0061  0845               	movf	??_InterruptManager+1,w
  4794     0062  0144               	movlb	4	; select bank4
  4795     0063  020D               	subwf	13,w	;volatile
  4796     0064  1D03               	skipz
  4797     0065  286A               	goto	u205_25
  4798     0066  0140               	movlb	0	; select bank0
  4799     0067  0844               	movf	??_InterruptManager,w
  4800     0068  0144               	movlb	4	; select bank4
  4801     0069  020C               	subwf	12,w	;volatile
  4802     006A                     u205_25:
  4803     006A  1803               	skipnc
  4804     006B  286D               	goto	u205_21
  4805     006C  286E               	goto	u205_20
  4806     006D                     u205_21:
  4807     006D  287A               	goto	i1l2411
  4808     006E                     u205_20:
  4809     006E                     i1l2407:
  4810                           
  4811                           ;main.c: 315:                     CCPR2 = ig_counter;
  4812     006E  0141               	movlb	1	; select bank1
  4813     006F  0863               	movf	(_ig_counter+1)^(0+128),w
  4814     0070  0146               	movlb	6	; select bank6
  4815     0071  0091               	movwf	17	;volatile
  4816     0072  0141               	movlb	1	; select bank1
  4817     0073  0862               	movf	_ig_counter^(0+128),w
  4818     0074  0146               	movlb	6	; select bank6
  4819     0075  0090               	movwf	16	;volatile
  4820     0076                     i1l2409:
  4821                           
  4822                           ;main.c: 316:                     ccp2_enable();
  4823     0076  318B  23C8  3180   	fcall	_ccp2_enable
  4824                           
  4825                           ;main.c: 317:                 } else {
  4826     0079  288A               	goto	i1l2423
  4827     007A                     i1l2411:
  4828                           
  4829                           ;main.c: 318:                     ccp2_disable();
  4830     007A  318B  23BE  3180   	fcall	i1_ccp2_disable
  4831     007D                     i1l2413:
  4832                           
  4833                           ;main.c: 319:                     LATC1 = (1);
  4834     007D  0140               	movlb	0	; select bank0
  4835     007E  149A               	bsf	26,1	;volatile
  4836     007F                     i1l2415:
  4837                           
  4838                           ;main.c: 320:                     _delay((unsigned long)((60)*(32000000/4000000.0)));
  4839     007F  30A0               	movlw	160
  4840     0080                     u261_27:
  4841     0080  0B89               	decfsz	9,f
  4842     0081  2880               	goto	u261_27
  4843     0082                     i1l2417:
  4844                           
  4845                           ;main.c: 321:                     LATC1 = (0);
  4846     0082  0140               	movlb	0	; select bank0
  4847     0083  109A               	bcf	26,1	;volatile
  4848     0084  288A               	goto	i1l2423
  4849     0085                     i1l2419:
  4850                           
  4851                           ;main.c: 325:                 ccp2_disable();
  4852     0085  318B  23BE  3180   	fcall	i1_ccp2_disable
  4853     0088                     i1l2421:
  4854                           
  4855                           ;main.c: 326:                 LATC2 = (0);
  4856     0088  0140               	movlb	0	; select bank0
  4857     0089  111A               	bcf	26,2	;volatile
  4858     008A                     i1l2423:
  4859                           
  4860                           ;main.c: 330:             if (revlimit_state == REVLIMIT_ENABLE) {
  4861     008A  0140               	movlb	0	; select bank0
  4862     008B  0857               	movf	_revlimit_state,w
  4863     008C  1D03               	btfss	3,2
  4864     008D  288F               	goto	u206_21
  4865     008E  2890               	goto	u206_20
  4866     008F                     u206_21:
  4867     008F  28BE               	goto	i1l2441
  4868     0090                     u206_20:
  4869     0090                     i1l2425:
  4870                           
  4871                           ;main.c: 331:                 if (rpm > (97)) {
  4872     0090  3062               	movlw	98
  4873     0091  0141               	movlb	1	; select bank1
  4874     0092  0266               	subwf	_rpm^(0+128),w
  4875     0093  1C03               	skipc
  4876     0094  2896               	goto	u207_21
  4877     0095  2897               	goto	u207_20
  4878     0096                     u207_21:
  4879     0096  28A5               	goto	i1l2431
  4880     0097                     u207_20:
  4881     0097                     i1l2427:
  4882                           
  4883                           ;main.c: 332:                     orev_counter++;
  4884     0097  3001               	movlw	1
  4885     0098  0140               	movlb	0	; select bank0
  4886     0099  00C4               	movwf	??_InterruptManager
  4887     009A  0844               	movf	??_InterruptManager,w
  4888     009B  07D8               	addwf	_orev_counter,f
  4889                           
  4890                           ;main.c: 333:                     if (orev_counter == 1) ignition_disable();
  4891     009C  0358               	decf	_orev_counter,w
  4892     009D  1D03               	btfss	3,2
  4893     009E  28A0               	goto	u208_21
  4894     009F  28A1               	goto	u208_20
  4895     00A0                     u208_21:
  4896     00A0  28BE               	goto	i1l2441
  4897     00A1                     u208_20:
  4898     00A1                     i1l2429:
  4899     00A1  318B  23E3  3180   	fcall	_ignition_disable
  4900     00A4  28BE               	goto	i1l2441
  4901     00A5                     i1l2431:
  4902     00A5  3063               	movlw	99
  4903     00A6  0266               	subwf	_rpm^(0+128),w
  4904     00A7  1C03               	skipc
  4905     00A8  28AA               	goto	u209_21
  4906     00A9  28AB               	goto	u209_20
  4907     00AA                     u209_21:
  4908     00AA  28B7               	goto	i1l2437
  4909     00AB                     u209_20:
  4910     00AB                     i1l2433:
  4911                           
  4912                           ;main.c: 335:                     orev_counter++;
  4913     00AB  3001               	movlw	1
  4914     00AC  0140               	movlb	0	; select bank0
  4915     00AD  00C4               	movwf	??_InterruptManager
  4916     00AE  0844               	movf	??_InterruptManager,w
  4917     00AF  07D8               	addwf	_orev_counter,f
  4918                           
  4919                           ;main.c: 336:                     if (orev_counter == 2) ignition_disable();
  4920     00B0  3002               	movlw	2
  4921     00B1  0658               	xorwf	_orev_counter,w
  4922     00B2  1D03               	btfss	3,2
  4923     00B3  28B5               	goto	u210_21
  4924     00B4  28B6               	goto	u210_20
  4925     00B5                     u210_21:
  4926     00B5  28BE               	goto	i1l273
  4927     00B6                     u210_20:
  4928     00B6  28A1               	goto	i1l2429
  4929     00B7                     i1l2437:
  4930     00B7  3064               	movlw	100
  4931     00B8  0266               	subwf	_rpm^(0+128),w
  4932     00B9  1C03               	skipc
  4933     00BA  28BC               	goto	u211_21
  4934     00BB  28BD               	goto	u211_20
  4935     00BC                     u211_21:
  4936     00BC  28BE               	goto	i1l273
  4937     00BD                     u211_20:
  4938     00BD  28A1               	goto	i1l2429
  4939     00BE                     i1l273:
  4940     00BE                     i1l2441:
  4941                           
  4942                           ;main.c: 341:             if (pwj_state == PWJ_ENABLE) {
  4943     00BE  0140               	movlb	0	; select bank0
  4944     00BF  0856               	movf	_pwj_state,w
  4945     00C0  1D03               	btfss	3,2
  4946     00C1  28C3               	goto	u212_21
  4947     00C2  28C4               	goto	u212_20
  4948     00C3                     u212_21:
  4949     00C3  28D7               	goto	i1l2451
  4950     00C4                     u212_20:
  4951     00C4                     i1l2443:
  4952                           
  4953                           ;main.c: 342:                 if (rpm > (85)) LATA0 = 1;
  4954     00C4  3056               	movlw	86
  4955     00C5  0141               	movlb	1	; select bank1
  4956     00C6  0266               	subwf	_rpm^(0+128),w
  4957     00C7  1C03               	skipc
  4958     00C8  28CA               	goto	u213_21
  4959     00C9  28CB               	goto	u213_20
  4960     00CA                     u213_21:
  4961     00CA  28CE               	goto	i1l2447
  4962     00CB                     u213_20:
  4963     00CB                     i1l2445:
  4964     00CB  0140               	movlb	0	; select bank0
  4965     00CC  1418               	bsf	24,0	;volatile
  4966     00CD  28F9               	goto	i1l2471
  4967     00CE                     i1l2447:
  4968     00CE  3053               	movlw	83
  4969     00CF  0266               	subwf	_rpm^(0+128),w
  4970     00D0  1803               	skipnc
  4971     00D1  28D3               	goto	u214_21
  4972     00D2  28D4               	goto	u214_20
  4973     00D3                     u214_21:
  4974     00D3  28EB               	goto	i1l282
  4975     00D4                     u214_20:
  4976     00D4                     i1l2449:
  4977     00D4  0140               	movlb	0	; select bank0
  4978     00D5  1018               	bcf	24,0	;volatile
  4979     00D6  28F9               	goto	i1l2471
  4980     00D7                     i1l2451:
  4981     00D7  0356               	decf	_pwj_state,w
  4982     00D8  1D03               	btfss	3,2
  4983     00D9  28DB               	goto	u215_21
  4984     00DA  28DC               	goto	u215_20
  4985     00DB                     u215_21:
  4986     00DB  28F9               	goto	i1l2471
  4987     00DC                     u215_20:
  4988     00DC                     i1l2453:
  4989                           
  4990                           ;main.c: 345:                 if (rpm > (30)) LATA0 = 1;
  4991     00DC  301F               	movlw	31
  4992     00DD  0141               	movlb	1	; select bank1
  4993     00DE  0266               	subwf	_rpm^(0+128),w
  4994     00DF  1C03               	skipc
  4995     00E0  28E2               	goto	u216_21
  4996     00E1  28E3               	goto	u216_20
  4997     00E2                     u216_21:
  4998     00E2  28E4               	goto	i1l2457
  4999     00E3                     u216_20:
  5000     00E3  28CB               	goto	i1l2445
  5001     00E4                     i1l2457:
  5002     00E4  301C               	movlw	28
  5003     00E5  0266               	subwf	_rpm^(0+128),w
  5004     00E6  1803               	skipnc
  5005     00E7  28E9               	goto	u217_21
  5006     00E8  28EA               	goto	u217_20
  5007     00E9                     u217_21:
  5008     00E9  28F9               	goto	i1l2471
  5009     00EA                     u217_20:
  5010     00EA  28D4               	goto	i1l2449
  5011     00EB                     i1l282:
  5012                           
  5013                           ;main.c: 348:         } else if (EG_state == EG_LOW) {
  5014     00EB  28F9               	goto	i1l2471
  5015     00EC                     i1l2461:
  5016     00EC  0865               	movf	_EG_state^(0+128),w
  5017     00ED  1D03               	btfss	3,2
  5018     00EE  28F0               	goto	u218_21
  5019     00EF  28F1               	goto	u218_20
  5020     00F0                     u218_21:
  5021     00F0  28F9               	goto	i1l2471
  5022     00F1                     u218_20:
  5023     00F1                     i1l2463:
  5024                           
  5025                           ;main.c: 349:             TMR1ON = 0;
  5026     00F1  0144               	movlb	4	; select bank4
  5027     00F2  100E               	bcf	14,0	;volatile
  5028     00F3                     i1l2465:
  5029                           
  5030                           ;main.c: 350:             TMR1H = 0x00;
  5031     00F3  018D               	clrf	13	;volatile
  5032                           
  5033                           ;main.c: 351:             TMR1L = 0x00;
  5034     00F4  018C               	clrf	12	;volatile
  5035     00F5                     i1l2467:
  5036                           
  5037                           ;main.c: 352:             TMR1ON = 1;
  5038     00F5  140E               	bsf	14,0	;volatile
  5039     00F6                     i1l2469:
  5040                           
  5041                           ;main.c: 353:             EG_state = EG_RUN;
  5042     00F6  0141               	movlb	1	; select bank1
  5043     00F7  01E5               	clrf	_EG_state^(0+128)
  5044     00F8  0AE5               	incf	_EG_state^(0+128),f
  5045     00F9                     i1l2471:
  5046                           
  5047                           ;main.c: 355:         CCP1IF = 0;
  5048     00F9  014E               	movlb	14	; select bank14
  5049     00FA  138D               	bcf	13,7	;volatile
  5050     00FB                     i1l2473:
  5051                           
  5052                           ;main.c: 358:     if (CCP2IF) {
  5053     00FB  1F8E               	btfss	14,7	;volatile
  5054     00FC  28FE               	goto	u219_21
  5055     00FD  28FF               	goto	u219_20
  5056     00FE                     u219_21:
  5057     00FE  2914               	goto	i1l2485
  5058     00FF                     u219_20:
  5059     00FF                     i1l2475:
  5060                           
  5061                           ;main.c: 359:         _delay((unsigned long)((60)*(32000000/4000000.0)));
  5062     00FF  30A0               	movlw	160
  5063     0100                     u262_27:
  5064     0100  0B89               	decfsz	9,f
  5065     0101  2900               	goto	u262_27
  5066     0102                     i1l2477:
  5067                           
  5068                           ;main.c: 360:         ccp2_disable();
  5069     0102  318B  23BE  3180   	fcall	i1_ccp2_disable
  5070     0105                     i1l2479:
  5071                           
  5072                           ;main.c: 361:         LATC1 = 0;
  5073     0105  0140               	movlb	0	; select bank0
  5074     0106  109A               	bcf	26,1	;volatile
  5075                           
  5076                           ;main.c: 362:         ccp1_enable();
  5077     0107  318B  23D1  3180   	fcall	i1_ccp1_enable
  5078     010A                     i1l2481:
  5079                           
  5080                           ;main.c: 363:         if (rpm < 30) calc_map();
  5081     010A  301E               	movlw	30
  5082     010B  0141               	movlb	1	; select bank1
  5083     010C  0266               	subwf	_rpm^(0+128),w
  5084     010D  1803               	skipnc
  5085     010E  2910               	goto	u220_21
  5086     010F  2911               	goto	u220_20
  5087     0110                     u220_21:
  5088     0110  2914               	goto	i1l2485
  5089     0111                     u220_20:
  5090     0111                     i1l2483:
  5091     0111  3181  21C4  3180   	fcall	i1_calc_map
  5092     0114                     i1l2485:
  5093                           
  5094                           ;main.c: 367:     if (IOCAF2) {
  5095     0114  017E               	movlb	62	; select bank62
  5096     0115  1D3F               	btfss	63,2	;volatile
  5097     0116  2918               	goto	u221_21
  5098     0117  2919               	goto	u221_20
  5099     0118                     u221_21:
  5100     0118  295B               	goto	i1l2503
  5101     0119                     u221_20:
  5102     0119                     i1l2487:
  5103                           
  5104                           ;main.c: 368:         if (EG_state == EG_RUN) {
  5105     0119  0141               	movlb	1	; select bank1
  5106     011A  0365               	decf	_EG_state^(0+128),w
  5107     011B  1D03               	btfss	3,2
  5108     011C  291E               	goto	u222_21
  5109     011D  291F               	goto	u222_20
  5110     011E                     u222_21:
  5111     011E  2959               	goto	i1l2501
  5112     011F                     u222_20:
  5113     011F                     i1l2489:
  5114                           
  5115                           ;main.c: 369:             pu1_2_period_count = TMR1;
  5116     011F  0144               	movlb	4	; select bank4
  5117     0120  080D               	movf	13,w	;volatile
  5118     0121  0140               	movlb	0	; select bank0
  5119     0122  00D5               	movwf	_pu1_2_period_count+1
  5120     0123  0144               	movlb	4	; select bank4
  5121     0124  080C               	movf	12,w	;volatile
  5122     0125  0140               	movlb	0	; select bank0
  5123     0126  00D4               	movwf	_pu1_2_period_count
  5124                           
  5125                           ;main.c: 370:             if ((rpm < 25)&&((t1_count - pu1_2_period_count)<(pu1_2_period
      +                          _count << 2))) {
  5126     0127  3019               	movlw	25
  5127     0128  0141               	movlb	1	; select bank1
  5128     0129  0266               	subwf	_rpm^(0+128),w
  5129     012A  1803               	skipnc
  5130     012B  292D               	goto	u223_21
  5131     012C  292E               	goto	u223_20
  5132     012D                     u223_21:
  5133     012D  294C               	goto	i1l2495
  5134     012E                     u223_20:
  5135     012E                     i1l2491:
  5136     012E  0140               	movlb	0	; select bank0
  5137     012F  0855               	movf	_pu1_2_period_count+1,w
  5138     0130  00C5               	movwf	??_InterruptManager+1
  5139     0131  0854               	movf	_pu1_2_period_count,w
  5140     0132  00C4               	movwf	??_InterruptManager
  5141     0133  35C4               	lslf	??_InterruptManager,f
  5142     0134  0DC5               	rlf	??_InterruptManager+1,f
  5143     0135  35C4               	lslf	??_InterruptManager,f
  5144     0136  0DC5               	rlf	??_InterruptManager+1,f
  5145     0137  0854               	movf	_pu1_2_period_count,w
  5146     0138  0141               	movlb	1	; select bank1
  5147     0139  0267               	subwf	_t1_count^(0+128),w
  5148     013A  0140               	movlb	0	; select bank0
  5149     013B  00C6               	movwf	??_InterruptManager+2
  5150     013C  0855               	movf	_pu1_2_period_count+1,w
  5151     013D  0141               	movlb	1	; select bank1
  5152     013E  3B68               	subwfb	(_t1_count+1)^(0+128),w
  5153     013F  0140               	movlb	0	; select bank0
  5154     0140  00C7               	movwf	??_InterruptManager+3
  5155     0141  0845               	movf	??_InterruptManager+1,w
  5156     0142  0247               	subwf	??_InterruptManager+3,w
  5157     0143  1D03               	skipz
  5158     0144  2947               	goto	u224_25
  5159     0145  0844               	movf	??_InterruptManager,w
  5160     0146  0246               	subwf	??_InterruptManager+2,w
  5161     0147                     u224_25:
  5162     0147  1803               	skipnc
  5163     0148  294A               	goto	u224_21
  5164     0149  294B               	goto	u224_20
  5165     014A                     u224_21:
  5166     014A  294C               	goto	i1l2495
  5167     014B                     u224_20:
  5168     014B                     i1l2493:
  5169                           
  5170                           ;main.c: 371:                 LATC2 = (1);
  5171     014B  151A               	bsf	26,2	;volatile
  5172     014C                     i1l2495:
  5173                           
  5174                           ;main.c: 373:             ccp1_enable();
  5175     014C  318B  23D1  3180   	fcall	i1_ccp1_enable
  5176     014F                     i1l2497:
  5177                           
  5178                           ;main.c: 374:             if (rpm < 40) calc_map();
  5179     014F  3028               	movlw	40
  5180     0150  0141               	movlb	1	; select bank1
  5181     0151  0266               	subwf	_rpm^(0+128),w
  5182     0152  1803               	skipnc
  5183     0153  2955               	goto	u225_21
  5184     0154  2956               	goto	u225_20
  5185     0155                     u225_21:
  5186     0155  2959               	goto	i1l2501
  5187     0156                     u225_20:
  5188     0156                     i1l2499:
  5189     0156  3181  21C4  3180   	fcall	i1_calc_map
  5190     0159                     i1l2501:
  5191                           
  5192                           ;main.c: 376:         IOCAF2 = 0;
  5193     0159  017E               	movlb	62	; select bank62
  5194     015A  113F               	bcf	63,2	;volatile
  5195     015B                     i1l2503:
  5196                           
  5197                           ;main.c: 379:     if (TMR1IF) {
  5198     015B  014E               	movlb	14	; select bank14
  5199     015C  1E8D               	btfss	13,5	;volatile
  5200     015D  295F               	goto	u226_21
  5201     015E  2960               	goto	u226_20
  5202     015F                     u226_21:
  5203     015F  2972               	goto	i1l295
  5204     0160                     u226_20:
  5205     0160                     i1l2505:
  5206                           
  5207                           ;main.c: 381:         TMR1ON = 0;
  5208     0160  0144               	movlb	4	; select bank4
  5209     0161  100E               	bcf	14,0	;volatile
  5210     0162                     i1l2507:
  5211                           
  5212                           ;main.c: 382:         TMR1H = 0x00;
  5213     0162  018D               	clrf	13	;volatile
  5214                           
  5215                           ;main.c: 383:         TMR1L = 0x00;
  5216     0163  018C               	clrf	12	;volatile
  5217                           
  5218                           ;main.c: 384:         CCPR1 = 0;
  5219     0164  0146               	movlb	6	; select bank6
  5220     0165  018C               	clrf	12	;volatile
  5221     0166  018D               	clrf	13	;volatile
  5222                           
  5223                           ;main.c: 385:         CCPR2 = 0;
  5224     0167  0190               	clrf	16	;volatile
  5225     0168  0191               	clrf	17	;volatile
  5226     0169                     i1l2509:
  5227                           
  5228                           ;main.c: 386:         TMR1IF = 0;
  5229     0169  014E               	movlb	14	; select bank14
  5230     016A  128D               	bcf	13,5	;volatile
  5231     016B                     i1l2511:
  5232                           
  5233                           ;main.c: 387:         LATA0 = 0;
  5234     016B  0140               	movlb	0	; select bank0
  5235     016C  1018               	bcf	24,0	;volatile
  5236     016D                     i1l2513:
  5237                           
  5238                           ;main.c: 388:         ccp2_disable();
  5239     016D  318B  23BE  3180   	fcall	i1_ccp2_disable
  5240     0170                     i1l2515:
  5241                           
  5242                           ;main.c: 389:         LATC1 = 0;
  5243     0170  0140               	movlb	0	; select bank0
  5244     0171  109A               	bcf	26,1	;volatile
  5245     0172                     i1l295:	
  5246                           ;main.c: 390:     }
  5247                           
  5248     0172  0064               	clrwdt	;# 
  5249     0173                     i1l296:
  5250     0173  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5251     0174  0009               	retfie
  5252     0175                     __end_of_InterruptManager:
  5253                           
  5254                           	psect	text21
  5255     01C4                     __ptext21:	
  5256 ;; *************** function i1_calc_map *****************
  5257 ;; Defined at:
  5258 ;;		line 218 in file "main.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  temp1           3   18[BANK0 ] unsigned um
  5263 ;;  temp            3   15[BANK0 ] unsigned um
  5264 ;;  p4y             2   29[BANK0 ] unsigned short 
  5265 ;;  p3y             2   27[BANK0 ] unsigned short 
  5266 ;;  p2y             2   25[BANK0 ] unsigned short 
  5267 ;;  p1y             2   23[BANK0 ] unsigned short 
  5268 ;;  a               1   35[BANK0 ] unsigned char 
  5269 ;;  p4x             1   34[BANK0 ] unsigned char 
  5270 ;;  p3x             1   33[BANK0 ] unsigned char 
  5271 ;;  p2x             1   32[BANK0 ] unsigned char 
  5272 ;;  p1x             1   31[BANK0 ] unsigned char 
  5273 ;;  coeff_p3_p4     1   22[BANK0 ] unsigned char 
  5274 ;;  coeff_p1_p2     1   21[BANK0 ] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;Total ram usage:       33 bytes
  5289 ;; Hardware stack levels used: 1
  5290 ;; Hardware stack levels required when called: 1
  5291 ;; This function calls:
  5292 ;;		i1___lwdiv
  5293 ;;		i1___tmul
  5294 ;;		i1___wmul
  5295 ;; This function is called by:
  5296 ;;		_InterruptManager
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300     01C4                     i1_calc_map:	
  5301                           ;psect for function i1_calc_map
  5302                           
  5303     01C4                     i1l2281:	
  5304                           ;incstack = 0
  5305                           ; Regs used in i1_calc_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5306                           
  5307                           
  5308                           ;main.c: 219:     uint8_t p1x, p2x, p3x, p4x;;main.c: 220:     uint16_t p1y, p2y, p3y, p
      +                          4y;;main.c: 221:     uint8_t coeff_p1_p2, coeff_p3_p4;;main.c: 222:     uint8_t a;;main.
      +                          c: 223:     uint24_t temp;;main.c: 224:     uint24_t temp1;;main.c: 226:     p1x = adv_s
      +                          tart_rpm_table[sw1_pos];
  5309     01C4  0141               	movlb	1	; select bank1
  5310     01C5  086C               	movf	_sw1_pos^(0+128),w
  5311     01C6  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  5312     01C7  0084               	movwf	4
  5313     01C8  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  5314     01C9  1803               	skipnc
  5315     01CA  3E01               	addlw	1
  5316     01CB  0085               	movwf	5
  5317     01CC  0800               	movf	0,w	;code access
  5318     01CD  0140               	movlb	0	; select bank0
  5319     01CE  00BF               	movwf	i1calc_map@p1x
  5320     01CF                     i1l2283:
  5321                           
  5322                           ;main.c: 227:     p2x = adv_start_rpm_table[sw1_pos] + max_adv_grad_table[sw3_pos];
  5323     01CF  0141               	movlb	1	; select bank1
  5324     01D0  086A               	movf	_sw3_pos^(0+128),w
  5325     01D1  3E16               	addlw	low (_max_adv_grad_table| (0+32768))
  5326     01D2  0084               	movwf	4
  5327     01D3  3090               	movlw	high (_max_adv_grad_table| (0+32768))
  5328     01D4  1803               	skipnc
  5329     01D5  3E01               	addlw	1
  5330     01D6  0085               	movwf	5
  5331     01D7  0800               	movf	0,w	;code access
  5332     01D8  0140               	movlb	0	; select bank0
  5333     01D9  00A3               	movwf	??i1_calc_map
  5334     01DA  0141               	movlb	1	; select bank1
  5335     01DB  086C               	movf	_sw1_pos^(0+128),w
  5336     01DC  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  5337     01DD  0084               	movwf	4
  5338     01DE  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  5339     01DF  1803               	skipnc
  5340     01E0  3E01               	addlw	1
  5341     01E1  0085               	movwf	5
  5342     01E2  0800               	movf	0,w	;code access
  5343     01E3  0140               	movlb	0	; select bank0
  5344     01E4  0723               	addwf	??i1_calc_map,w
  5345     01E5  00C0               	movwf	i1calc_map@p2x
  5346     01E6                     i1l2285:
  5347                           
  5348                           ;main.c: 228:     p3x = (55);
  5349     01E6  3037               	movlw	55
  5350     01E7  00C1               	movwf	i1calc_map@p3x
  5351     01E8                     i1l2287:
  5352                           
  5353                           ;main.c: 229:     p4x = (80);
  5354     01E8  3050               	movlw	80
  5355     01E9  00C2               	movwf	i1calc_map@p4x
  5356     01EA                     i1l2289:
  5357                           
  5358                           ;main.c: 230:     p1y = (500);
  5359     01EA  30F4               	movlw	244
  5360     01EB  00B7               	movwf	i1calc_map@p1y
  5361     01EC  3001               	movlw	1
  5362     01ED  00B8               	movwf	i1calc_map@p1y+1
  5363     01EE                     i1l2291:
  5364                           
  5365                           ;main.c: 231:     p2y = max_adv_table[sw2_pos];
  5366     01EE  0141               	movlb	1	; select bank1
  5367     01EF  086B               	movf	_sw2_pos^(0+128),w
  5368     01F0  0140               	movlb	0	; select bank0
  5369     01F1  00A3               	movwf	??i1_calc_map
  5370     01F2  01A4               	clrf	??i1_calc_map+1
  5371     01F3  35A3               	lslf	??i1_calc_map,f
  5372     01F4  0DA4               	rlf	??i1_calc_map+1,f
  5373     01F5  3008               	movlw	low _max_adv_table
  5374     01F6  0723               	addwf	??i1_calc_map,w
  5375     01F7  0084               	movwf	4
  5376     01F8  3010               	movlw	high _max_adv_table
  5377     01F9  3D24               	addwfc	??i1_calc_map+1,w
  5378     01FA  3880               	iorlw	128
  5379     01FB  0085               	movwf	5
  5380     01FC  3F00               	moviw [0]fsr0
  5381     01FD  00B9               	movwf	i1calc_map@p2y
  5382     01FE  3F01               	moviw [1]fsr0
  5383     01FF  00BA               	movwf	i1calc_map@p2y+1
  5384     0200                     i1l2293:
  5385                           
  5386                           ;main.c: 232:     p3y = p2y;
  5387     0200  083A               	movf	i1calc_map@p2y+1,w
  5388     0201  00BC               	movwf	i1calc_map@p3y+1
  5389     0202  0839               	movf	i1calc_map@p2y,w
  5390     0203  00BB               	movwf	i1calc_map@p3y
  5391     0204                     i1l2295:
  5392                           
  5393                           ;main.c: 233:     p4y = min_ret_table[sw4_pos];
  5394     0204  0141               	movlb	1	; select bank1
  5395     0205  0869               	movf	_sw4_pos^(0+128),w
  5396     0206  0140               	movlb	0	; select bank0
  5397     0207  00A3               	movwf	??i1_calc_map
  5398     0208  01A4               	clrf	??i1_calc_map+1
  5399     0209  35A3               	lslf	??i1_calc_map,f
  5400     020A  0DA4               	rlf	??i1_calc_map+1,f
  5401     020B  3000               	movlw	low _min_ret_table
  5402     020C  0723               	addwf	??i1_calc_map,w
  5403     020D  0084               	movwf	4
  5404     020E  3010               	movlw	high _min_ret_table
  5405     020F  3D24               	addwfc	??i1_calc_map+1,w
  5406     0210  3880               	iorlw	128
  5407     0211  0085               	movwf	5
  5408     0212  3F00               	moviw [0]fsr0
  5409     0213  00BD               	movwf	i1calc_map@p4y
  5410     0214  3F01               	moviw [1]fsr0
  5411     0215  00BE               	movwf	i1calc_map@p4y+1
  5412     0216                     i1l2297:
  5413                           
  5414                           ;main.c: 234:     coeff_p1_p2 = (uint8_t) ((p2y - p1y) / (p2x - p1x));
  5415     0216  083F               	movf	i1calc_map@p1x,w
  5416     0217  0240               	subwf	i1calc_map@p2x,w
  5417     0218  00F0               	movwf	i1___lwdiv@divisor
  5418     0219  01F1               	clrf	i1___lwdiv@divisor+1
  5419     021A  1C03               	skipc
  5420     021B  03F1               	decf	i1___lwdiv@divisor+1,f
  5421     021C  0839               	movf	i1calc_map@p2y,w
  5422     021D  3E0C               	addlw	12
  5423     021E  00F2               	movwf	i1___lwdiv@dividend
  5424     021F  30FE               	movlw	254
  5425     0220  3D3A               	addwfc	i1calc_map@p2y+1,w
  5426     0221  00F3               	movwf	i1___lwdiv@dividend+1
  5427     0222  318D  2523  3181   	fcall	i1___lwdiv
  5428     0225  0870               	movf	?i1___lwdiv,w
  5429     0226  0140               	movlb	0	; select bank0
  5430     0227  00B5               	movwf	i1calc_map@coeff_p1_p2
  5431     0228                     i1l2299:
  5432                           
  5433                           ;main.c: 235:     coeff_p3_p4 = (uint8_t) ((p3y - p4y) / (p4x - p3x));
  5434     0228  3019               	movlw	25
  5435     0229  00F0               	movwf	i1___lwdiv@divisor
  5436     022A  3000               	movlw	0
  5437     022B  00F1               	movwf	i1___lwdiv@divisor+1
  5438     022C  083D               	movf	i1calc_map@p4y,w
  5439     022D  023B               	subwf	i1calc_map@p3y,w
  5440     022E  00F2               	movwf	i1___lwdiv@dividend
  5441     022F  083E               	movf	i1calc_map@p4y+1,w
  5442     0230  3B3C               	subwfb	i1calc_map@p3y+1,w
  5443     0231  00F3               	movwf	i1___lwdiv@dividend+1
  5444     0232  318D  2523  3181   	fcall	i1___lwdiv
  5445     0235  0870               	movf	?i1___lwdiv,w
  5446     0236  0140               	movlb	0	; select bank0
  5447     0237  00B6               	movwf	i1calc_map@coeff_p3_p4
  5448     0238                     i1l2301:
  5449                           
  5450                           ;main.c: 238:     for (a = 15; a <= p1x; a++) {
  5451     0238  300F               	movlw	15
  5452     0239  00C3               	movwf	i1calc_map@a
  5453     023A  2A52               	goto	i1l2307
  5454     023B                     i1l2303:
  5455                           
  5456                           ;main.c: 239:         IG_table[a] = p1y;
  5457     023B  0843               	movf	i1calc_map@a,w
  5458     023C  00A3               	movwf	??i1_calc_map
  5459     023D  01A4               	clrf	??i1_calc_map+1
  5460     023E  35A3               	lslf	??i1_calc_map,f
  5461     023F  0DA4               	rlf	??i1_calc_map+1,f
  5462     0240  3067               	movlw	103
  5463     0241  00A5               	movwf	??i1_calc_map+2
  5464     0242  3022               	movlw	34
  5465     0243  00A6               	movwf	??i1_calc_map+3
  5466     0244  0823               	movf	??i1_calc_map,w
  5467     0245  0725               	addwf	??i1_calc_map+2,w
  5468     0246  0086               	movwf	6
  5469     0247  0824               	movf	??i1_calc_map+1,w
  5470     0248  3D26               	addwfc	??i1_calc_map+3,w
  5471     0249  0087               	movwf	7
  5472     024A  0837               	movf	i1calc_map@p1y,w
  5473     024B  3FC0               	movwi [0]fsr1
  5474     024C  0838               	movf	i1calc_map@p1y+1,w
  5475     024D  3FC1               	movwi [1]fsr1
  5476     024E                     i1l2305:
  5477                           
  5478                           ;main.c: 240:     }
  5479     024E  3001               	movlw	1
  5480     024F  00A3               	movwf	??i1_calc_map
  5481     0250  0823               	movf	??i1_calc_map,w
  5482     0251  07C3               	addwf	i1calc_map@a,f
  5483     0252                     i1l2307:
  5484     0252  0843               	movf	i1calc_map@a,w
  5485     0253  023F               	subwf	i1calc_map@p1x,w
  5486     0254  1803               	skipnc
  5487     0255  2A57               	goto	u193_21
  5488     0256  2A58               	goto	u193_20
  5489     0257                     u193_21:
  5490     0257  2A3B               	goto	i1l2303
  5491     0258                     u193_20:
  5492     0258                     i1l2309:
  5493                           
  5494                           ;main.c: 241:     for (a = p1x + 1; a <= p2x; a++) {
  5495     0258  083F               	movf	i1calc_map@p1x,w
  5496     0259  3E01               	addlw	1
  5497     025A  00C3               	movwf	i1calc_map@a
  5498     025B  2A8D               	goto	i1l2315
  5499     025C                     i1l2311:
  5500                           
  5501                           ;main.c: 242:         IG_table[a] = coeff_p1_p2 + IG_table[a - 1];
  5502     025C  0843               	movf	i1calc_map@a,w
  5503     025D  00A3               	movwf	??i1_calc_map
  5504     025E  01A4               	clrf	??i1_calc_map+1
  5505     025F  35A3               	lslf	??i1_calc_map,f
  5506     0260  0DA4               	rlf	??i1_calc_map+1,f
  5507     0261  3065               	movlw	101
  5508     0262  00A5               	movwf	??i1_calc_map+2
  5509     0263  3022               	movlw	34
  5510     0264  00A6               	movwf	??i1_calc_map+3
  5511     0265  0823               	movf	??i1_calc_map,w
  5512     0266  0725               	addwf	??i1_calc_map+2,w
  5513     0267  0086               	movwf	6
  5514     0268  0824               	movf	??i1_calc_map+1,w
  5515     0269  3D26               	addwfc	??i1_calc_map+3,w
  5516     026A  0087               	movwf	7
  5517     026B  3F40               	moviw [0]fsr1
  5518     026C  00A7               	movwf	??i1_calc_map+4
  5519     026D  3F41               	moviw [1]fsr1
  5520     026E  00A8               	movwf	??i1_calc_map+5
  5521     026F  0835               	movf	i1calc_map@coeff_p1_p2,w
  5522     0270  0727               	addwf	??i1_calc_map+4,w
  5523     0271  00A9               	movwf	??i1_calc_map+6
  5524     0272  0828               	movf	??i1_calc_map+5,w
  5525     0273  1803               	skipnc
  5526     0274  0A28               	incf	??i1_calc_map+5,w
  5527     0275  00AA               	movwf	??i1_calc_map+7
  5528     0276  0843               	movf	i1calc_map@a,w
  5529     0277  00AB               	movwf	??i1_calc_map+8
  5530     0278  01AC               	clrf	??i1_calc_map+9
  5531     0279  35AB               	lslf	??i1_calc_map+8,f
  5532     027A  0DAC               	rlf	??i1_calc_map+9,f
  5533     027B  3067               	movlw	103
  5534     027C  00AD               	movwf	??i1_calc_map+10
  5535     027D  3022               	movlw	34
  5536     027E  00AE               	movwf	??i1_calc_map+11
  5537     027F  082B               	movf	??i1_calc_map+8,w
  5538     0280  072D               	addwf	??i1_calc_map+10,w
  5539     0281  0086               	movwf	6
  5540     0282  082C               	movf	??i1_calc_map+9,w
  5541     0283  3D2E               	addwfc	??i1_calc_map+11,w
  5542     0284  0087               	movwf	7
  5543     0285  0829               	movf	??i1_calc_map+6,w
  5544     0286  3FC0               	movwi [0]fsr1
  5545     0287  082A               	movf	??i1_calc_map+7,w
  5546     0288  3FC1               	movwi [1]fsr1
  5547     0289                     i1l2313:
  5548                           
  5549                           ;main.c: 243:     }
  5550     0289  3001               	movlw	1
  5551     028A  00A3               	movwf	??i1_calc_map
  5552     028B  0823               	movf	??i1_calc_map,w
  5553     028C  07C3               	addwf	i1calc_map@a,f
  5554     028D                     i1l2315:
  5555     028D  0843               	movf	i1calc_map@a,w
  5556     028E  0240               	subwf	i1calc_map@p2x,w
  5557     028F  1803               	skipnc
  5558     0290  2A92               	goto	u194_21
  5559     0291  2A93               	goto	u194_20
  5560     0292                     u194_21:
  5561     0292  2A5C               	goto	i1l2311
  5562     0293                     u194_20:
  5563     0293                     i1l2317:
  5564                           
  5565                           ;main.c: 244:     for (a = p2x + 1; a <= p3x; a++) {
  5566     0293  0840               	movf	i1calc_map@p2x,w
  5567     0294  3E01               	addlw	1
  5568     0295  00C3               	movwf	i1calc_map@a
  5569     0296  2AAE               	goto	i1l2323
  5570     0297                     i1l2319:
  5571                           
  5572                           ;main.c: 245:         IG_table[a] = p3y;
  5573     0297  0843               	movf	i1calc_map@a,w
  5574     0298  00A3               	movwf	??i1_calc_map
  5575     0299  01A4               	clrf	??i1_calc_map+1
  5576     029A  35A3               	lslf	??i1_calc_map,f
  5577     029B  0DA4               	rlf	??i1_calc_map+1,f
  5578     029C  3067               	movlw	103
  5579     029D  00A5               	movwf	??i1_calc_map+2
  5580     029E  3022               	movlw	34
  5581     029F  00A6               	movwf	??i1_calc_map+3
  5582     02A0  0823               	movf	??i1_calc_map,w
  5583     02A1  0725               	addwf	??i1_calc_map+2,w
  5584     02A2  0086               	movwf	6
  5585     02A3  0824               	movf	??i1_calc_map+1,w
  5586     02A4  3D26               	addwfc	??i1_calc_map+3,w
  5587     02A5  0087               	movwf	7
  5588     02A6  083B               	movf	i1calc_map@p3y,w
  5589     02A7  3FC0               	movwi [0]fsr1
  5590     02A8  083C               	movf	i1calc_map@p3y+1,w
  5591     02A9  3FC1               	movwi [1]fsr1
  5592     02AA                     i1l2321:
  5593                           
  5594                           ;main.c: 246:     }
  5595     02AA  3001               	movlw	1
  5596     02AB  00A3               	movwf	??i1_calc_map
  5597     02AC  0823               	movf	??i1_calc_map,w
  5598     02AD  07C3               	addwf	i1calc_map@a,f
  5599     02AE                     i1l2323:
  5600     02AE  0843               	movf	i1calc_map@a,w
  5601     02AF  0241               	subwf	i1calc_map@p3x,w
  5602     02B0  1803               	skipnc
  5603     02B1  2AB3               	goto	u195_21
  5604     02B2  2AB4               	goto	u195_20
  5605     02B3                     u195_21:
  5606     02B3  2A97               	goto	i1l2319
  5607     02B4                     u195_20:
  5608     02B4                     i1l2325:
  5609                           
  5610                           ;main.c: 247:     for (a = p3x + 1; a <= p4x; a++) {
  5611     02B4  0841               	movf	i1calc_map@p3x,w
  5612     02B5  3E01               	addlw	1
  5613     02B6  00C3               	movwf	i1calc_map@a
  5614     02B7  2AE9               	goto	i1l2331
  5615     02B8                     i1l2327:
  5616                           
  5617                           ;main.c: 248:         IG_table[a] = IG_table[a - 1] - coeff_p3_p4;
  5618     02B8  0843               	movf	i1calc_map@a,w
  5619     02B9  00A3               	movwf	??i1_calc_map
  5620     02BA  01A4               	clrf	??i1_calc_map+1
  5621     02BB  35A3               	lslf	??i1_calc_map,f
  5622     02BC  0DA4               	rlf	??i1_calc_map+1,f
  5623     02BD  3065               	movlw	101
  5624     02BE  00A5               	movwf	??i1_calc_map+2
  5625     02BF  3022               	movlw	34
  5626     02C0  00A6               	movwf	??i1_calc_map+3
  5627     02C1  0823               	movf	??i1_calc_map,w
  5628     02C2  0725               	addwf	??i1_calc_map+2,w
  5629     02C3  0086               	movwf	6
  5630     02C4  0824               	movf	??i1_calc_map+1,w
  5631     02C5  3D26               	addwfc	??i1_calc_map+3,w
  5632     02C6  0087               	movwf	7
  5633     02C7  3F40               	moviw [0]fsr1
  5634     02C8  00A7               	movwf	??i1_calc_map+4
  5635     02C9  3F41               	moviw [1]fsr1
  5636     02CA  00A8               	movwf	??i1_calc_map+5
  5637     02CB  0828               	movf	??i1_calc_map+5,w
  5638     02CC  00AA               	movwf	??i1_calc_map+7
  5639     02CD  0836               	movf	i1calc_map@coeff_p3_p4,w
  5640     02CE  0227               	subwf	??i1_calc_map+4,w
  5641     02CF  00A9               	movwf	??i1_calc_map+6
  5642     02D0  1C03               	skipc
  5643     02D1  03AA               	decf	??i1_calc_map+7,f
  5644     02D2  0843               	movf	i1calc_map@a,w
  5645     02D3  00AB               	movwf	??i1_calc_map+8
  5646     02D4  01AC               	clrf	??i1_calc_map+9
  5647     02D5  35AB               	lslf	??i1_calc_map+8,f
  5648     02D6  0DAC               	rlf	??i1_calc_map+9,f
  5649     02D7  3067               	movlw	103
  5650     02D8  00AD               	movwf	??i1_calc_map+10
  5651     02D9  3022               	movlw	34
  5652     02DA  00AE               	movwf	??i1_calc_map+11
  5653     02DB  082B               	movf	??i1_calc_map+8,w
  5654     02DC  072D               	addwf	??i1_calc_map+10,w
  5655     02DD  0086               	movwf	6
  5656     02DE  082C               	movf	??i1_calc_map+9,w
  5657     02DF  3D2E               	addwfc	??i1_calc_map+11,w
  5658     02E0  0087               	movwf	7
  5659     02E1  0829               	movf	??i1_calc_map+6,w
  5660     02E2  3FC0               	movwi [0]fsr1
  5661     02E3  082A               	movf	??i1_calc_map+7,w
  5662     02E4  3FC1               	movwi [1]fsr1
  5663     02E5                     i1l2329:
  5664                           
  5665                           ;main.c: 249:     }
  5666     02E5  3001               	movlw	1
  5667     02E6  00A3               	movwf	??i1_calc_map
  5668     02E7  0823               	movf	??i1_calc_map,w
  5669     02E8  07C3               	addwf	i1calc_map@a,f
  5670     02E9                     i1l2331:
  5671     02E9  0843               	movf	i1calc_map@a,w
  5672     02EA  0242               	subwf	i1calc_map@p4x,w
  5673     02EB  1803               	skipnc
  5674     02EC  2AEE               	goto	u196_21
  5675     02ED  2AEF               	goto	u196_20
  5676     02EE                     u196_21:
  5677     02EE  2AB8               	goto	i1l2327
  5678     02EF                     u196_20:
  5679     02EF                     i1l2333:
  5680                           
  5681                           ;main.c: 250:     for (a = p4x + 1; a <= 130; a++) {
  5682     02EF  0842               	movf	i1calc_map@p4x,w
  5683     02F0  3E01               	addlw	1
  5684     02F1  00C3               	movwf	i1calc_map@a
  5685     02F2                     i1l2335:
  5686     02F2  3083               	movlw	131
  5687     02F3  0243               	subwf	i1calc_map@a,w
  5688     02F4  1C03               	skipc
  5689     02F5  2AF7               	goto	u197_21
  5690     02F6  2AF8               	goto	u197_20
  5691     02F7                     u197_21:
  5692     02F7  2AF9               	goto	i1l2339
  5693     02F8                     u197_20:
  5694     02F8  2B11               	goto	i1l2345
  5695     02F9                     i1l2339:
  5696                           
  5697                           ;main.c: 251:         IG_table[a] = p4y;
  5698     02F9  0843               	movf	i1calc_map@a,w
  5699     02FA  00A3               	movwf	??i1_calc_map
  5700     02FB  01A4               	clrf	??i1_calc_map+1
  5701     02FC  35A3               	lslf	??i1_calc_map,f
  5702     02FD  0DA4               	rlf	??i1_calc_map+1,f
  5703     02FE  3067               	movlw	103
  5704     02FF  00A5               	movwf	??i1_calc_map+2
  5705     0300  3022               	movlw	34
  5706     0301  00A6               	movwf	??i1_calc_map+3
  5707     0302  0823               	movf	??i1_calc_map,w
  5708     0303  0725               	addwf	??i1_calc_map+2,w
  5709     0304  0086               	movwf	6
  5710     0305  0824               	movf	??i1_calc_map+1,w
  5711     0306  3D26               	addwfc	??i1_calc_map+3,w
  5712     0307  0087               	movwf	7
  5713     0308  083D               	movf	i1calc_map@p4y,w
  5714     0309  3FC0               	movwi [0]fsr1
  5715     030A  083E               	movf	i1calc_map@p4y+1,w
  5716     030B  3FC1               	movwi [1]fsr1
  5717     030C                     i1l2341:
  5718                           
  5719                           ;main.c: 252:     }
  5720     030C  3001               	movlw	1
  5721     030D  00A3               	movwf	??i1_calc_map
  5722     030E  0823               	movf	??i1_calc_map,w
  5723     030F  07C3               	addwf	i1calc_map@a,f
  5724     0310  2AF2               	goto	i1l2335
  5725     0311                     i1l2345:
  5726                           
  5727                           ;main.c: 254:     for (a = 15; a <= 130; a++) {
  5728     0311  300F               	movlw	15
  5729     0312  00C3               	movwf	i1calc_map@a
  5730     0313                     i1l2349:
  5731                           
  5732                           ;main.c: 255:         deg_table[a] = (uint8_t) (IG_table[a] / 100);
  5733     0313  3064               	movlw	100
  5734     0314  00F0               	movwf	i1___lwdiv@divisor
  5735     0315  3000               	movlw	0
  5736     0316  00F1               	movwf	i1___lwdiv@divisor+1
  5737     0317  0843               	movf	i1calc_map@a,w
  5738     0318  00A3               	movwf	??i1_calc_map
  5739     0319  01A4               	clrf	??i1_calc_map+1
  5740     031A  35A3               	lslf	??i1_calc_map,f
  5741     031B  0DA4               	rlf	??i1_calc_map+1,f
  5742     031C  3067               	movlw	103
  5743     031D  00A5               	movwf	??i1_calc_map+2
  5744     031E  3022               	movlw	34
  5745     031F  00A6               	movwf	??i1_calc_map+3
  5746     0320  0823               	movf	??i1_calc_map,w
  5747     0321  0725               	addwf	??i1_calc_map+2,w
  5748     0322  0086               	movwf	6
  5749     0323  0824               	movf	??i1_calc_map+1,w
  5750     0324  3D26               	addwfc	??i1_calc_map+3,w
  5751     0325  0087               	movwf	7
  5752     0326  3F40               	moviw [0]fsr1
  5753     0327  00F2               	movwf	i1___lwdiv@dividend
  5754     0328  3F41               	moviw [1]fsr1
  5755     0329  00F3               	movwf	i1___lwdiv@dividend+1
  5756     032A  318D  2523  3181   	fcall	i1___lwdiv
  5757     032D  0870               	movf	?i1___lwdiv,w
  5758     032E  0140               	movlb	0	; select bank0
  5759     032F  00A7               	movwf	??i1_calc_map+4
  5760     0330  0843               	movf	i1calc_map@a,w
  5761     0331  3E6D               	addlw	109
  5762     0332  00A8               	movwf	??i1_calc_map+5
  5763     0333  01A9               	clrf	??i1_calc_map+6
  5764     0334  3023               	movlw	35
  5765     0335  3DA9               	addwfc	??i1_calc_map+6,f
  5766     0336  0828               	movf	??i1_calc_map+5,w
  5767     0337  0086               	movwf	6
  5768     0338  0829               	movf	??i1_calc_map+6,w
  5769     0339  0087               	movwf	7
  5770     033A  0827               	movf	??i1_calc_map+4,w
  5771     033B  0081               	movwf	1
  5772     033C                     i1l2351:
  5773                           
  5774                           ;main.c: 256:     }
  5775     033C  3001               	movlw	1
  5776     033D  00A3               	movwf	??i1_calc_map
  5777     033E  0823               	movf	??i1_calc_map,w
  5778     033F  07C3               	addwf	i1calc_map@a,f
  5779     0340                     i1l2353:
  5780     0340  3083               	movlw	131
  5781     0341  0243               	subwf	i1calc_map@a,w
  5782     0342  1C03               	skipc
  5783     0343  2B45               	goto	u198_21
  5784     0344  2B46               	goto	u198_20
  5785     0345                     u198_21:
  5786     0345  2B13               	goto	i1l2349
  5787     0346                     u198_20:
  5788     0346                     i1l2355:
  5789                           
  5790                           ;main.c: 258:     for (a = 15; a <= 130; a++) {
  5791     0346  300F               	movlw	15
  5792     0347  00C3               	movwf	i1calc_map@a
  5793     0348                     i1l2359:
  5794                           
  5795                           ;main.c: 259:         temp1 = (((3500) - IG_table[a]) >> 1);
  5796     0348  0843               	movf	i1calc_map@a,w
  5797     0349  00A3               	movwf	??i1_calc_map
  5798     034A  01A4               	clrf	??i1_calc_map+1
  5799     034B  35A3               	lslf	??i1_calc_map,f
  5800     034C  0DA4               	rlf	??i1_calc_map+1,f
  5801     034D  3067               	movlw	103
  5802     034E  00A5               	movwf	??i1_calc_map+2
  5803     034F  3022               	movlw	34
  5804     0350  00A6               	movwf	??i1_calc_map+3
  5805     0351  0823               	movf	??i1_calc_map,w
  5806     0352  0725               	addwf	??i1_calc_map+2,w
  5807     0353  0086               	movwf	6
  5808     0354  0824               	movf	??i1_calc_map+1,w
  5809     0355  3D26               	addwfc	??i1_calc_map+3,w
  5810     0356  0087               	movwf	7
  5811     0357  30AC               	movlw	172
  5812     0358  00A7               	movwf	??i1_calc_map+4
  5813     0359  300D               	movlw	13
  5814     035A  00A8               	movwf	??i1_calc_map+5
  5815     035B  3F40               	moviw [0]fsr1
  5816     035C  0227               	subwf	??i1_calc_map+4,w
  5817     035D  00A9               	movwf	??i1_calc_map+6
  5818     035E  3F41               	moviw [1]fsr1
  5819     035F  3B28               	subwfb	??i1_calc_map+5,w
  5820     0360  00AA               	movwf	??i1_calc_map+7
  5821     0361  36AA               	lsrf	??i1_calc_map+7,f
  5822     0362  0CA9               	rrf	??i1_calc_map+6,f
  5823     0363  0829               	movf	??i1_calc_map+6,w
  5824     0364  00B2               	movwf	i1calc_map@temp1
  5825     0365  082A               	movf	??i1_calc_map+7,w
  5826     0366  00B3               	movwf	i1calc_map@temp1+1
  5827     0367  01B4               	clrf	i1calc_map@temp1+2
  5828     0368                     i1l2361:
  5829                           
  5830                           ;main.c: 260:         temp = ((deg2time_coeff[a] * temp1) >> 10);
  5831     0368  0843               	movf	i1calc_map@a,w
  5832     0369  00A3               	movwf	??i1_calc_map
  5833     036A  01A4               	clrf	??i1_calc_map+1
  5834     036B  0823               	movf	??i1_calc_map,w
  5835     036C  00F0               	movwf	i1___wmul@multiplier
  5836     036D  0824               	movf	??i1_calc_map+1,w
  5837     036E  00F1               	movwf	i1___wmul@multiplier+1
  5838     036F  3003               	movlw	3
  5839     0370  00F2               	movwf	i1___wmul@multiplicand
  5840     0371  3000               	movlw	0
  5841     0372  00F3               	movwf	i1___wmul@multiplicand+1
  5842     0373  318C  248C  3181   	fcall	i1___wmul
  5843     0376  30DE               	movlw	222
  5844     0377  0140               	movlb	0	; select bank0
  5845     0378  00A5               	movwf	??i1_calc_map+2
  5846     0379  3020               	movlw	32
  5847     037A  00A6               	movwf	??i1_calc_map+3
  5848     037B  0870               	movf	?i1___wmul,w
  5849     037C  0725               	addwf	??i1_calc_map+2,w
  5850     037D  0086               	movwf	6
  5851     037E  0871               	movf	?i1___wmul+1,w
  5852     037F  3D26               	addwfc	??i1_calc_map+3,w
  5853     0380  0087               	movwf	7
  5854     0381  3F40               	moviw [0]fsr1
  5855     0382  00F6               	movwf	i1___tmul@multiplier
  5856     0383  3F41               	moviw [1]fsr1
  5857     0384  00F7               	movwf	i1___tmul@multiplier+1
  5858     0385  3F42               	moviw [2]fsr1
  5859     0386  00F8               	movwf	i1___tmul@multiplier+2
  5860     0387  0832               	movf	i1calc_map@temp1,w
  5861     0388  00F9               	movwf	i1___tmul@multiplicand
  5862     0389  0833               	movf	i1calc_map@temp1+1,w
  5863     038A  00FA               	movwf	i1___tmul@multiplicand+1
  5864     038B  0834               	movf	i1calc_map@temp1+2,w
  5865     038C  00FB               	movwf	i1___tmul@multiplicand+2
  5866     038D  318C  24F6  3181   	fcall	i1___tmul
  5867     0390  0876               	movf	?i1___tmul,w
  5868     0391  0140               	movlb	0	; select bank0
  5869     0392  00A7               	movwf	??i1_calc_map+4
  5870     0393  0877               	movf	?i1___tmul+1,w
  5871     0394  00A8               	movwf	??i1_calc_map+5
  5872     0395  0878               	movf	?i1___tmul+2,w
  5873     0396  00A9               	movwf	??i1_calc_map+6
  5874     0397  300A               	movlw	10
  5875     0398                     u199_25:
  5876     0398  36A9               	lsrf	??i1_calc_map+6,f
  5877     0399  0CA8               	rrf	??i1_calc_map+5,f
  5878     039A  0CA7               	rrf	??i1_calc_map+4,f
  5879     039B                     u199_20:
  5880     039B  0B89               	decfsz	9,f
  5881     039C  2B98               	goto	u199_25
  5882     039D  0827               	movf	??i1_calc_map+4,w
  5883     039E  00AF               	movwf	i1calc_map@temp
  5884     039F  0828               	movf	??i1_calc_map+5,w
  5885     03A0  00B0               	movwf	i1calc_map@temp+1
  5886     03A1  0829               	movf	??i1_calc_map+6,w
  5887     03A2  00B1               	movwf	i1calc_map@temp+2
  5888     03A3                     i1l2363:
  5889                           
  5890                           ;main.c: 261:         IG_table[a] = temp;
  5891     03A3  0843               	movf	i1calc_map@a,w
  5892     03A4  00A3               	movwf	??i1_calc_map
  5893     03A5  01A4               	clrf	??i1_calc_map+1
  5894     03A6  35A3               	lslf	??i1_calc_map,f
  5895     03A7  0DA4               	rlf	??i1_calc_map+1,f
  5896     03A8  3067               	movlw	103
  5897     03A9  00A5               	movwf	??i1_calc_map+2
  5898     03AA  3022               	movlw	34
  5899     03AB  00A6               	movwf	??i1_calc_map+3
  5900     03AC  0823               	movf	??i1_calc_map,w
  5901     03AD  0725               	addwf	??i1_calc_map+2,w
  5902     03AE  0086               	movwf	6
  5903     03AF  0824               	movf	??i1_calc_map+1,w
  5904     03B0  3D26               	addwfc	??i1_calc_map+3,w
  5905     03B1  0087               	movwf	7
  5906     03B2  082F               	movf	i1calc_map@temp,w
  5907     03B3  3FC0               	movwi [0]fsr1
  5908     03B4  0830               	movf	i1calc_map@temp+1,w
  5909     03B5  3FC1               	movwi [1]fsr1
  5910     03B6                     i1l2365:
  5911                           
  5912                           ;main.c: 262:     }
  5913     03B6  3001               	movlw	1
  5914     03B7  00A3               	movwf	??i1_calc_map
  5915     03B8  0823               	movf	??i1_calc_map,w
  5916     03B9  07C3               	addwf	i1calc_map@a,f
  5917     03BA                     i1l2367:
  5918     03BA  3083               	movlw	131
  5919     03BB  0243               	subwf	i1calc_map@a,w
  5920     03BC  1C03               	skipc
  5921     03BD  2BBF               	goto	u200_21
  5922     03BE  2BC0               	goto	u200_20
  5923     03BF                     u200_21:
  5924     03BF  2B48               	goto	i1l2359
  5925     03C0                     u200_20:
  5926     03C0                     i1l248:
  5927     03C0  0008               	return
  5928     03C1                     __end_ofi1_calc_map:
  5929                           
  5930                           	psect	text22
  5931     0C8C                     __ptext22:	
  5932 ;; *************** function i1___wmul *****************
  5933 ;; Defined at:
  5934 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  multiplier      2    0[COMMON] unsigned int 
  5937 ;;  multiplicand    2    2[COMMON] unsigned int 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;  product         2    4[COMMON] unsigned int 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  2    0[COMMON] unsigned int 
  5942 ;; Registers used:
  5943 ;;		wreg, status,2, status,0
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;Total ram usage:        6 bytes
  5954 ;; Hardware stack levels used: 1
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		i1_calc_map
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962     0C8C                     i1___wmul:	
  5963                           ;psect for function i1___wmul
  5964                           
  5965     0C8C                     i1l1979:	
  5966                           ;incstack = 0
  5967                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5968                           
  5969     0C8C  01F4               	clrf	i1___wmul@product
  5970     0C8D  01F5               	clrf	i1___wmul@product+1
  5971     0C8E                     i1l1981:
  5972     0C8E  1C70               	btfss	i1___wmul@multiplier,0
  5973     0C8F  2C91               	goto	u166_21
  5974     0C90  2C92               	goto	u166_20
  5975     0C91                     u166_21:
  5976     0C91  2C96               	goto	i1l382
  5977     0C92                     u166_20:
  5978     0C92                     i1l1983:
  5979     0C92  0872               	movf	i1___wmul@multiplicand,w
  5980     0C93  07F4               	addwf	i1___wmul@product,f
  5981     0C94  0873               	movf	i1___wmul@multiplicand+1,w
  5982     0C95  3DF5               	addwfc	i1___wmul@product+1,f
  5983     0C96                     i1l382:
  5984     0C96  3001               	movlw	1
  5985     0C97                     u167_25:
  5986     0C97  35F2               	lslf	i1___wmul@multiplicand,f
  5987     0C98  0DF3               	rlf	i1___wmul@multiplicand+1,f
  5988     0C99  0B89               	decfsz	9,f
  5989     0C9A  2C97               	goto	u167_25
  5990     0C9B                     i1l1985:
  5991     0C9B  3001               	movlw	1
  5992     0C9C                     u168_25:
  5993     0C9C  36F1               	lsrf	i1___wmul@multiplier+1,f
  5994     0C9D  0CF0               	rrf	i1___wmul@multiplier,f
  5995     0C9E  0B89               	decfsz	9,f
  5996     0C9F  2C9C               	goto	u168_25
  5997     0CA0                     i1l1987:
  5998     0CA0  0870               	movf	i1___wmul@multiplier,w
  5999     0CA1  0471               	iorwf	i1___wmul@multiplier+1,w
  6000     0CA2  1D03               	btfss	3,2
  6001     0CA3  2CA5               	goto	u169_21
  6002     0CA4  2CA6               	goto	u169_20
  6003     0CA5                     u169_21:
  6004     0CA5  2C8E               	goto	i1l1981
  6005     0CA6                     u169_20:
  6006     0CA6                     i1l1989:
  6007     0CA6  0875               	movf	i1___wmul@product+1,w
  6008     0CA7  00F1               	movwf	?i1___wmul+1
  6009     0CA8  0874               	movf	i1___wmul@product,w
  6010     0CA9  00F0               	movwf	?i1___wmul
  6011     0CAA                     i1l384:
  6012     0CAA  0008               	return
  6013     0CAB                     __end_ofi1___wmul:
  6014                           
  6015                           	psect	text23
  6016     0CF6                     __ptext23:	
  6017 ;; *************** function i1___tmul *****************
  6018 ;; Defined at:
  6019 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul24.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  multiplier      3    6[COMMON] unsigned um
  6022 ;;  multiplicand    3    9[COMMON] unsigned um
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  product         3    0[BANK0 ] unsigned um
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  3    6[COMMON] unsigned um
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, status,0
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6034 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;Total ram usage:        9 bytes
  6039 ;; Hardware stack levels used: 1
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		i1_calc_map
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047     0CF6                     i1___tmul:	
  6048                           ;psect for function i1___tmul
  6049                           
  6050     0CF6                     i1l1993:	
  6051                           ;incstack = 0
  6052                           ; Regs used in i1___tmul: [wreg+status,2+status,0]
  6053                           
  6054     0CF6  3000               	movlw	0
  6055     0CF7  0140               	movlb	0	; select bank0
  6056     0CF8  00A0               	movwf	i1___tmul@product
  6057     0CF9  3000               	movlw	0
  6058     0CFA  00A1               	movwf	i1___tmul@product+1
  6059     0CFB  3000               	movlw	0
  6060     0CFC  00A2               	movwf	i1___tmul@product+2
  6061     0CFD                     i1l1995:
  6062     0CFD  1C76               	btfss	i1___tmul@multiplier,0
  6063     0CFE  2D00               	goto	u170_21
  6064     0CFF  2D01               	goto	u170_20
  6065     0D00                     u170_21:
  6066     0D00  2D08               	goto	i1l1999
  6067     0D01                     u170_20:
  6068     0D01                     i1l1997:
  6069     0D01  0879               	movf	i1___tmul@multiplicand,w
  6070     0D02  0140               	movlb	0	; select bank0
  6071     0D03  07A0               	addwf	i1___tmul@product,f
  6072     0D04  087A               	movf	i1___tmul@multiplicand+1,w
  6073     0D05  3DA1               	addwfc	i1___tmul@product+1,f
  6074     0D06  087B               	movf	i1___tmul@multiplicand+2,w
  6075     0D07  3DA2               	addwfc	i1___tmul@product+2,f
  6076     0D08                     i1l1999:
  6077     0D08  3001               	movlw	1
  6078     0D09                     u171_25:
  6079     0D09  35F9               	lslf	i1___tmul@multiplicand,f
  6080     0D0A  0DFA               	rlf	i1___tmul@multiplicand+1,f
  6081     0D0B  0DFB               	rlf	i1___tmul@multiplicand+2,f
  6082     0D0C  0B89               	decfsz	9,f
  6083     0D0D  2D09               	goto	u171_25
  6084     0D0E                     i1l2001:
  6085     0D0E  3001               	movlw	1
  6086     0D0F                     u172_25:
  6087     0D0F  36F8               	lsrf	i1___tmul@multiplier+2,f
  6088     0D10  0CF7               	rrf	i1___tmul@multiplier+1,f
  6089     0D11  0CF6               	rrf	i1___tmul@multiplier,f
  6090     0D12  0B89               	decfsz	9,f
  6091     0D13  2D0F               	goto	u172_25
  6092     0D14  0878               	movf	i1___tmul@multiplier+2,w
  6093     0D15  0477               	iorwf	i1___tmul@multiplier+1,w
  6094     0D16  0476               	iorwf	i1___tmul@multiplier,w
  6095     0D17  1D03               	skipz
  6096     0D18  2D1A               	goto	u173_21
  6097     0D19  2D1B               	goto	u173_20
  6098     0D1A                     u173_21:
  6099     0D1A  2CFD               	goto	i1l1995
  6100     0D1B                     u173_20:
  6101     0D1B                     i1l2003:
  6102     0D1B  0140               	movlb	0	; select bank0
  6103     0D1C  0820               	movf	i1___tmul@product,w
  6104     0D1D  00F6               	movwf	?i1___tmul
  6105     0D1E  0821               	movf	i1___tmul@product+1,w
  6106     0D1F  00F7               	movwf	?i1___tmul+1
  6107     0D20  0822               	movf	i1___tmul@product+2,w
  6108     0D21  00F8               	movwf	?i1___tmul+2
  6109     0D22                     i1l390:
  6110     0D22  0008               	return
  6111     0D23                     __end_ofi1___tmul:
  6112                           
  6113                           	psect	text24
  6114     0D23                     __ptext24:	
  6115 ;; *************** function i1___lwdiv *****************
  6116 ;; Defined at:
  6117 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  divisor         2    0[COMMON] unsigned int 
  6120 ;;  dividend        2    2[COMMON] unsigned int 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  quotient        2    5[COMMON] unsigned int 
  6123 ;;  counter         1    7[COMMON] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2    0[COMMON] unsigned int 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;Total ram usage:        8 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_InterruptManager
  6143 ;;		i1_calc_map
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147     0D23                     i1___lwdiv:	
  6148                           ;psect for function i1___lwdiv
  6149                           
  6150     0D23                     i1l2007:	
  6151                           ;incstack = 0
  6152                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6153                           
  6154     0D23  01F5               	clrf	i1___lwdiv@quotient
  6155     0D24  01F6               	clrf	i1___lwdiv@quotient+1
  6156     0D25                     i1l2009:
  6157     0D25  0870               	movf	i1___lwdiv@divisor,w
  6158     0D26  0471               	iorwf	i1___lwdiv@divisor+1,w
  6159     0D27  1903               	btfsc	3,2
  6160     0D28  2D2A               	goto	u174_21
  6161     0D29  2D2B               	goto	u174_20
  6162     0D2A                     u174_21:
  6163     0D2A  2D5A               	goto	i1l2029
  6164     0D2B                     u174_20:
  6165     0D2B                     i1l2011:
  6166     0D2B  01F7               	clrf	i1___lwdiv@counter
  6167     0D2C  0AF7               	incf	i1___lwdiv@counter,f
  6168     0D2D  2D37               	goto	i1l2017
  6169     0D2E                     i1l2013:
  6170     0D2E  3001               	movlw	1
  6171     0D2F                     u175_25:
  6172     0D2F  35F0               	lslf	i1___lwdiv@divisor,f
  6173     0D30  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6174     0D31  0B89               	decfsz	9,f
  6175     0D32  2D2F               	goto	u175_25
  6176     0D33                     i1l2015:
  6177     0D33  3001               	movlw	1
  6178     0D34  00F4               	movwf	??i1___lwdiv
  6179     0D35  0874               	movf	??i1___lwdiv,w
  6180     0D36  07F7               	addwf	i1___lwdiv@counter,f
  6181     0D37                     i1l2017:
  6182     0D37  1FF1               	btfss	i1___lwdiv@divisor+1,7
  6183     0D38  2D3A               	goto	u176_21
  6184     0D39  2D3B               	goto	u176_20
  6185     0D3A                     u176_21:
  6186     0D3A  2D2E               	goto	i1l2013
  6187     0D3B                     u176_20:
  6188     0D3B                     i1l2019:
  6189     0D3B  3001               	movlw	1
  6190     0D3C                     u177_25:
  6191     0D3C  35F5               	lslf	i1___lwdiv@quotient,f
  6192     0D3D  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6193     0D3E  0B89               	decfsz	9,f
  6194     0D3F  2D3C               	goto	u177_25
  6195     0D40  0871               	movf	i1___lwdiv@divisor+1,w
  6196     0D41  0273               	subwf	i1___lwdiv@dividend+1,w
  6197     0D42  1D03               	skipz
  6198     0D43  2D46               	goto	u178_25
  6199     0D44  0870               	movf	i1___lwdiv@divisor,w
  6200     0D45  0272               	subwf	i1___lwdiv@dividend,w
  6201     0D46                     u178_25:
  6202     0D46  1C03               	skipc
  6203     0D47  2D49               	goto	u178_21
  6204     0D48  2D4A               	goto	u178_20
  6205     0D49                     u178_21:
  6206     0D49  2D4F               	goto	i1l2025
  6207     0D4A                     u178_20:
  6208     0D4A                     i1l2021:
  6209     0D4A  0870               	movf	i1___lwdiv@divisor,w
  6210     0D4B  02F2               	subwf	i1___lwdiv@dividend,f
  6211     0D4C  0871               	movf	i1___lwdiv@divisor+1,w
  6212     0D4D  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  6213     0D4E                     i1l2023:
  6214     0D4E  1475               	bsf	i1___lwdiv@quotient,0
  6215     0D4F                     i1l2025:
  6216     0D4F  3001               	movlw	1
  6217     0D50                     u179_25:
  6218     0D50  36F1               	lsrf	i1___lwdiv@divisor+1,f
  6219     0D51  0CF0               	rrf	i1___lwdiv@divisor,f
  6220     0D52  0B89               	decfsz	9,f
  6221     0D53  2D50               	goto	u179_25
  6222     0D54                     i1l2027:
  6223     0D54  3001               	movlw	1
  6224     0D55  02F7               	subwf	i1___lwdiv@counter,f
  6225     0D56  1D03               	btfss	3,2
  6226     0D57  2D59               	goto	u180_21
  6227     0D58  2D5A               	goto	u180_20
  6228     0D59                     u180_21:
  6229     0D59  2D3B               	goto	i1l2019
  6230     0D5A                     u180_20:
  6231     0D5A                     i1l2029:
  6232     0D5A  0876               	movf	i1___lwdiv@quotient+1,w
  6233     0D5B  00F1               	movwf	?i1___lwdiv+1
  6234     0D5C  0875               	movf	i1___lwdiv@quotient,w
  6235     0D5D  00F0               	movwf	?i1___lwdiv
  6236     0D5E                     i1l662:
  6237     0D5E  0008               	return
  6238     0D5F                     __end_ofi1___lwdiv:
  6239                           
  6240                           	psect	text25
  6241     0BE3                     __ptext25:	
  6242 ;; *************** function _ignition_disable *****************
  6243 ;; Defined at:
  6244 ;;		line 398 in file "main.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0, pclath, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used: 1
  6264 ;; Hardware stack levels required when called: 1
  6265 ;; This function calls:
  6266 ;;		i1_ccp1_enable
  6267 ;;		i1_ccp2_disable
  6268 ;; This function is called by:
  6269 ;;		_InterruptManager
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273     0BE3                     _ignition_disable:	
  6274                           ;psect for function _ignition_disable
  6275                           
  6276     0BE3                     i1l2273:	
  6277                           ;incstack = 0
  6278                           ; Regs used in _ignition_disable: [wreg+status,2+status,0+pclath+cstack]
  6279                           
  6280                           
  6281                           ;main.c: 399:     ccp2_disable();
  6282     0BE3  318B  23BE  318B   	fcall	i1_ccp2_disable
  6283     0BE6                     i1l2275:
  6284                           
  6285                           ;main.c: 400:     LATC2 = (1);
  6286     0BE6  0140               	movlb	0	; select bank0
  6287     0BE7  151A               	bsf	26,2	;volatile
  6288     0BE8                     i1l2277:
  6289                           
  6290                           ;main.c: 401:     orev_counter = 0;
  6291     0BE8  01D8               	clrf	_orev_counter
  6292     0BE9                     i1l2279:
  6293                           
  6294                           ;main.c: 402:     ccp1_enable();
  6295     0BE9  318B  23D1  318B   	fcall	i1_ccp1_enable
  6296     0BEC                     i1l299:
  6297     0BEC  0008               	return
  6298     0BED                     __end_of_ignition_disable:
  6299                           
  6300                           	psect	text26
  6301     0BBE                     __ptext26:	
  6302 ;; *************** function i1_ccp2_disable *****************
  6303 ;; Defined at:
  6304 ;;		line 440 in file "main.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;		None
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		status,2
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;Total ram usage:        0 bytes
  6323 ;; Hardware stack levels used: 1
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_InterruptManager
  6328 ;;		_ignition_disable
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332     0BBE                     i1_ccp2_disable:	
  6333                           ;psect for function i1_ccp2_disable
  6334                           
  6335     0BBE                     i1l1975:	
  6336                           ;incstack = 0
  6337                           ; Regs used in i1_ccp2_disable: [status,2]
  6338                           
  6339                           
  6340                           ;main.c: 441:     CCP2IE = 0;
  6341     0BBE  014E               	movlb	14	; select bank14
  6342     0BBF  1398               	bcf	24,7	;volatile
  6343     0BC0                     i1l1977:
  6344                           
  6345                           ;main.c: 442:     CCP2CON = 0;
  6346     0BC0  0146               	movlb	6	; select bank6
  6347     0BC1  0192               	clrf	18	;volatile
  6348     0BC2                     i1l311:
  6349     0BC2  0008               	return
  6350     0BC3                     __end_ofi1_ccp2_disable:
  6351                           
  6352                           	psect	text27
  6353     0BD1                     __ptext27:	
  6354 ;; *************** function i1_ccp1_enable *****************
  6355 ;; Defined at:
  6356 ;;		line 409 in file "main.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;		None
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      void 
  6363 ;; Registers used:
  6364 ;;		wreg
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6374 ;;Total ram usage:        0 bytes
  6375 ;; Hardware stack levels used: 1
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_InterruptManager
  6380 ;;		_ignition_disable
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384     0BD1                     i1_ccp1_enable:	
  6385                           ;psect for function i1_ccp1_enable
  6386                           
  6387     0BD1                     i1l1969:	
  6388                           ;incstack = 0
  6389                           ; Regs used in i1_ccp1_enable: [wreg]
  6390                           
  6391                           
  6392                           ;main.c: 410:     CCP1IE = 0;
  6393     0BD1  014E               	movlb	14	; select bank14
  6394     0BD2  1397               	bcf	23,7	;volatile
  6395                           
  6396                           ;main.c: 411:     CCP1IF = 0;
  6397     0BD3  138D               	bcf	13,7	;volatile
  6398     0BD4                     i1l1971:
  6399                           
  6400                           ;main.c: 412:     CCP1CON = 0x84;
  6401     0BD4  3084               	movlw	132
  6402     0BD5  0146               	movlb	6	; select bank6
  6403     0BD6  008E               	movwf	14	;volatile
  6404     0BD7                     i1l1973:
  6405                           
  6406                           ;main.c: 413:     CCP1IE = 1;
  6407     0BD7  014E               	movlb	14	; select bank14
  6408     0BD8  1797               	bsf	23,7	;volatile
  6409     0BD9                     i1l302:
  6410     0BD9  0008               	return
  6411     0BDA                     __end_ofi1_ccp1_enable:
  6412                           
  6413                           	psect	text28
  6414     0BC8                     __ptext28:	
  6415 ;; *************** function _ccp2_enable *****************
  6416 ;; Defined at:
  6417 ;;		line 429 in file "main.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;		None
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;		None
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      void 
  6424 ;; Registers used:
  6425 ;;		wreg
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;Total ram usage:        0 bytes
  6436 ;; Hardware stack levels used: 1
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_InterruptManager
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444     0BC8                     _ccp2_enable:	
  6445                           ;psect for function _ccp2_enable
  6446                           
  6447     0BC8                     i1l2267:	
  6448                           ;incstack = 0
  6449                           ; Regs used in _ccp2_enable: [wreg]
  6450                           
  6451                           
  6452                           ;main.c: 430:     CCP2IE = 0;
  6453     0BC8  014E               	movlb	14	; select bank14
  6454     0BC9  1398               	bcf	24,7	;volatile
  6455                           
  6456                           ;main.c: 431:     CCP2IF = 0;
  6457     0BCA  138E               	bcf	14,7	;volatile
  6458     0BCB                     i1l2269:
  6459                           
  6460                           ;main.c: 432:     CCP2CON = 0x88;
  6461     0BCB  3088               	movlw	136
  6462     0BCC  0146               	movlb	6	; select bank6
  6463     0BCD  0092               	movwf	18	;volatile
  6464     0BCE                     i1l2271:
  6465                           
  6466                           ;main.c: 433:     CCP2IE = 1;
  6467     0BCE  014E               	movlb	14	; select bank14
  6468     0BCF  1798               	bsf	24,7	;volatile
  6469     0BD0                     i1l308:
  6470     0BD0  0008               	return
  6471     0BD1                     __end_of_ccp2_enable:
  6472                           
  6473                           	psect	text29
  6474     0BB9                     __ptext29:	
  6475 ;; *************** function _ccp1_disable *****************
  6476 ;; Defined at:
  6477 ;;		line 420 in file "main.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;		None
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      void 
  6484 ;; Registers used:
  6485 ;;		status,2
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;Total ram usage:        0 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_InterruptManager
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504     0BB9                     _ccp1_disable:	
  6505                           ;psect for function _ccp1_disable
  6506                           
  6507     0BB9                     i1l2263:	
  6508                           ;incstack = 0
  6509                           ; Regs used in _ccp1_disable: [status,2]
  6510                           
  6511                           
  6512                           ;main.c: 421:     CCP1IE = 0;
  6513     0BB9  014E               	movlb	14	; select bank14
  6514     0BBA  1397               	bcf	23,7	;volatile
  6515     0BBB                     i1l2265:
  6516                           
  6517                           ;main.c: 422:     CCP1CON = 0;
  6518     0BBB  0146               	movlb	6	; select bank6
  6519     0BBC  018E               	clrf	14	;volatile
  6520     0BBD                     i1l305:
  6521     0BBD  0008               	return
  6522     0BBE                     __end_of_ccp1_disable:
  6523     007E                     btemp	set	126	;btemp
  6524     007E                     int$flags	set	126
  6525     007E                     wtemp0	set	126
  6526     20DE                     
  6527                           	psect	config
  6528                           
  6529                           ;Config register CONFIG1 @ 0x8007
  6530                           ;	External Oscillator Mode Selection bits
  6531                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  6532                           ;	Power-up Default Value for COSC bits
  6533                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  6534                           ;	Clock Out Enable bit
  6535                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6536                           ;	VDD Range Analog Calibration Selection bit
  6537                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6538     8007                     	org	32775
  6539     8007  3FCF               	dw	16335
  6540                           
  6541                           ;Config register CONFIG2 @ 0x8008
  6542                           ;	Master Clear Enable bit
  6543                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6544                           ;	Power-up Timer Selection bits
  6545                           ;	PWRTS = PWRT_1, PWRT set at 1 ms
  6546                           ;	WDT Operating Mode bits
  6547                           ;	WDTE = SWDTEN, WDT enabled/disabled by SEN bit
  6548                           ;	Brown-out Reset Enable bits
  6549                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6550                           ;	Brown-out Reset Voltage Selection bit
  6551                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6552                           ;	PPSLOCKED One-Way Set Enable bit
  6553                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  6554                           ;	Stack Overflow/Underflow Reset Enable bit
  6555                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6556     8008                     	org	32776
  6557     8008  3FE9               	dw	16361
  6558                           
  6559                           ;Config register CONFIG4 @ 0x800A
  6560                           ;	Boot Block Size Selection bits
  6561                           ;	BBSIZE = BB512, 512 words boot block size
  6562                           ;	Boot Block Enable bit
  6563                           ;	BBEN = OFF, Boot Block is disabled
  6564                           ;	SAF Enable bit
  6565                           ;	SAFEN = OFF, SAF is disabled
  6566                           ;	Application Block Write Protection bit
  6567                           ;	WRTAPP = OFF, Application Block is not write-protected
  6568                           ;	Boot Block Write Protection bit
  6569                           ;	WRTB = OFF, Boot Block is not write-protected
  6570                           ;	Configuration Registers Write Protection bit
  6571                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6572                           ;	Storage Area Flash (SAF) Write Protection bit
  6573                           ;	WRTSAF = OFF, SAF is not write-protected
  6574                           ;	Low Voltage Programming Enable bit
  6575                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6576     800A                     	org	32778
  6577     800A  3FFF               	dw	16383
  6578                           
  6579                           ;Config register CONFIG5 @ 0x800B
  6580                           ;	User Program Flash Memory Code Protection bit
  6581                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6582     800B                     	org	32779
  6583     800B  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    26
    Data        397
    BSS         61
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     40      57
    BANK1            80     62      77
    BANK2            62      0      32
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S602$buffer	PTR unsigned char  size(2) Largest target is 0

    S602$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 8
		 -> Write_table@tx_data(BANK1[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    WriteString@str	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[3]), Write_table@tx_data(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptManager in COMMON

    i1_calc_map->i1___tmul
    i1___tmul->i1___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    _InterruptManager->i1_calc_map
    i1_calc_map->i1___tmul

Critical Paths under _main in BANK1

    _main->_Write_table
    _calc_map->___tmul
    ___tmul->___wmul
    _Write_table->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _WriteString->_Write_Byte

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7125
                        _Write_table
                           _calc_map
                        _ccp1_enable
                     _check_sw_state
                  _initialize_system
 ---------------------------------------------------------------------------------
 (1) _initialize_system                                    0     0      0       0
                       _ccp2_disable
 ---------------------------------------------------------------------------------
 (2) _ccp2_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_sw_state                                       2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ccp1_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_map                                            33    33      0    2854
                                             15 BANK1     33    33      0
                            ___lwdiv
                             ___tmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6     316
                                              6 BANK1      9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     718
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Write_table                                         11    11      0    4271
                                             51 BANK1     11    11      0
                        _WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    16      4    3816
                                             33 BANK1     18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    3384
                                             26 BANK1      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2    2977
                                             11 BANK1     15    13      2
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              0 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) _WriteString                                          3     1      2     276
                                              1 BANK1      3     1      2
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (3) _Write_Byte                                           1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     4     4      0    2066
                                             36 BANK0      4     4      0
                       _ccp1_disable
                        _ccp2_enable
                   _ignition_disable
                          i1___lwdiv
                         i1_calc_map
                      i1_ccp1_enable
                     i1_ccp2_disable
 ---------------------------------------------------------------------------------
 (8) i1_calc_map                                          33    33      0    1696
                                              3 BANK0     33    33      0
                          i1___lwdiv
                           i1___tmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___tmul                                             9     3      6     144
                                              6 COMMON     6     0      6
                                              0 BANK0      3     3      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     370
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _ignition_disable                                     0     0      0       0
                      i1_ccp1_enable
                     i1_ccp2_disable
 ---------------------------------------------------------------------------------
 (8) i1_ccp2_disable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_ccp1_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ccp2_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ccp1_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Write_table
     _WriteString
       _Write_Byte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _calc_map
     ___lwdiv
     ___tmul
       ___wmul (ARG)
     ___wmul
   _ccp1_enable
   _check_sw_state
   _initialize_system
     _ccp2_disable

 _InterruptManager (ROOT)
   _ccp1_disable
   _ccp2_enable
   _ignition_disable
     i1_ccp1_enable
     i1_ccp2_disable
   i1___lwdiv
   i1_calc_map
     i1___lwdiv
     i1___tmul
       i1___wmul (ARG)
     i1___wmul
   i1_ccp1_enable
   i1_ccp2_disable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      39       6       71.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     3E      4D       8       96.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               3E      0      20      10       51.6%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Feb 09 13:52:36 2025

         ??_InterruptManager 0044                 ___awdiv@sign 00A6          ___wmul@multiplicand 00A2  
           i1___wmul@product 0074                   i1_calc_map 01C4                          l221 0BF8  
                        l302 0BE2                          l215 07AD                          l311 0BC7  
                        l218 0BEF                          l314 0F0F                          l227 0C52  
                        l252 0DF1                          l248 05B4                          l256 0E01  
                        l259 0E45                          l390 0CF5                          l382 0CB6  
                        l535 0EA5                          l384 0CCA                          l548 0DEF  
                        l662 0D9B                          l908 07FF                          l845 0C8B  
                        l919 0003                          l883 0FFF                          l896 0C22  
                        l889 0C6E                          _GIE 005F                          _RA4 0064  
                        _RC5 0075                          _abs 0C11                          _rpm 00E6  
               ___awmod@sign 00A6                          wreg 0009                 _ccp1_disable 0BB9  
               _ccp2_disable 0BC3                         ?_abs 00A7                         l2121 0DF0  
                       l2123 0DF4                         l2133 0E06                         l2135 0E10  
                       l2127 0DF6                         l2137 0E33                         l2129 0E04  
                       l2139 0E35                         l1721 0E48                         l2521 07B9  
                       l2601 0C75                         l2611 0C3A                         l1731 0E5C  
                       l1723 0E4C                         l2523 07BE                         l2603 0C77  
                       l2613 0C3B                         l1741 0E70                         l1733 0E60  
                       l1725 0E51                         l1821 0C17                         l2525 07C8  
                       l2517 07AE                         l2541 0F36                         l2533 0F12  
                       l2605 0C79                         l2621 0BC5                         l2701 0EE8  
                       l2615 0C43                         l1751 0E8C                         l1743 0E74  
                       l1735 0E62                         l1727 0E53                         l1719 0E46  
                       l2527 07E6                         l2519 07B4                         l2551 0F6A  
                       l2543 0F3D                         l2535 0F23                         l2607 0C83  
                       l2631 0CC0                         l2623 0CAB                         l2711 0EF8  
                       l2703 0EEB                         l2617 0C48                         l1753 0E91  
                       l1745 0E78                         l1737 0E68                         l1729 0E57  
                       l1817 0C11                         l2529 07F6                         l2561 0FA7  
                       l2553 0F6C                         l2545 0F47                         l2537 0F2B  
                       l2641 0CD6                         l2633 0CC6                         l2625 0CAE  
                       l2721 0F03                         l2713 0EFA                         l2705 0EED  
                       l1747 0E87                         l1739 0E6B                         l1755 0E97  
                       l1771 0DA9                         l1763 0D9C                         l1819 0C16  
                       l2571 0FD1                         l2563 0FAC                         l2555 0F73  
                       l2547 0F51                         l2539 0F32                         l2643 0CDC  
                       l2627 0CB2                         l2811 0534                         l2803 0505  
                       l2619 0BC3                         l2731 0F08                         l2723 0F04  
                       l2715 0EFD                         l2707 0EF4                         l2651 0EA6  
                       l1757 0E9C                         l1749 0E8B                         l1781 0DC0  
                       l1773 0DAD                         l1765 0D9E                         l2565 0FB1  
                       l2573 0FD6                         l2557 0F91                         l2549 0F5D  
                       l2645 0CE2                         l2637 0CCB                         l2629 0CBB  
                       l2821 0597                         l2813 053A                         l2741 03CB  
                       l2733 0F09                         l2725 0F05                         l2717 0F00  
                       l2709 0EF6                         l2661 0EB0                         l2653 0EAB  
                       l1759 0EA1                         l1791 0DDB                         l1783 0DC4  
                       l1775 0DB2                         l1767 0DA2                         l2567 0FB6  
                       l2559 0FA1                         l2575 0FDD                         l2591 0C5A  
                       l1951 0D70                         l1943 0D5F                         l2647 0CEF  
                       l2639 0CD2                         l2823 05AA                         l2807 0507  
                       l2751 03F6                         l2743 03DE                         l2831 0BE0  
                       l2735 0F0A                         l2727 0F06                         l2719 0F02  
                       l2671 0EB6                         l2663 0EB1                         l2655 0EAC  
                       l2585 0BEF                         l1785 0DC8                         l1777 0DB8  
                       l1793 0DE1                         l1769 0DA7                         l2569 0FC0  
                       l2593 0C62                         l2841 076A                         l2833 073E  
                       l1961 0D8C                         l1953 0D74                         l1945 0D62  
                       l2825 05AE                         l2817 053C                         l2809 0530  
                       l2761 042F                         l2753 03FA                         l2745 03E0  
                       l2737 0F0D                         l2729 0F07                         l2681 0ED1  
                       l2673 0ECA                         l2665 0EB2                         l2657 0EAE  
                       l2587 0BF4                         l1795 0DE6                         l1787 0DD2  
                       l1779 0DBB                         l2579 0FE7                         l2595 0C6C  
                       l2851 0783                         l2843 0776                         l2835 0749  
                       l1963 0D91                         l1955 0D78                         l1947 0D68  
                       l2819 055C                         l2771 047D                         l2763 0442  
                       l2755 040A                         l2747 03E2                         l2739 03C1  
                       l2827 0BDA                         l2691 0EDB                         l2683 0ED3  
                       l2675 0ECC                         l2667 0EB3                         l2659 0EAF  
                       l1797 0DEB                         l1789 0DD6                         l2589 0C55  
                       l2853 0793                         l2845 0781                         l2837 075A  
                       l1957 0D87                         l1949 0D6B                         l1965 0D97  
                       l2781 04A2                         l2773 0481                         l2765 0446  
                       l2757 041C                         l2749 03E6                         l2829 0BDD  
                       l2693 0EDD                         l2685 0ED5                         l2677 0ECE  
                       l2669 0EB5                         l2861 0C23                         l2599 0C71  
                       l2855 079B                         l2839 0762                         l1959 0D8B  
                       l2791 04E3                         l2783 04A8                         l2775 0487  
                       l2767 044C                         l2759 042C                         l2695 0EDF  
                       l2687 0ED8                         l2679 0ECF                         l2871 0C31  
                       l2863 0C26                         l2857 07A0                         l2793 04E6  
                       l2785 04AC                         l2777 048B                         l2769 0450  
                       l2697 0EE2                         l2689 0EDA                         l2865 0C28  
                       l2859 07A6                         l2787 04D9                         l2779 049E  
                       l2699 0EE5                         l2867 0C2B                         l2797 04ED  
                       l2789 04DD                         l2869 0C2E                         l2799 0500  
                       STR_1 1012                         STR_2 101E                         u1200 0E87  
                       u1201 0E86                         u1220 0E97                         u1140 0E4C  
                       u1221 0E96                         u1205 0E83                         u1141 0E4B  
                       u1230 0E9C                         u1150 0E57                         u1310 0DE1  
                       u1231 0E9B                         u1215 0E8D                         u1151 0E56  
                       u1311 0DE0                         u1160 0E68                         u1320 0DE6  
                       u1240 0DA2                         u1161 0E67                         u1321 0DE5  
                       u1305 0DD7                         u1241 0DA1                         u1250 0DAD  
                       u1251 0DAC                         u1180 0E78                         u1260 0DB8  
                       u2300 07E6                         u1181 0E77                         u1261 0DB7  
                       u2301 07E5                         _LATA 0018                         u2310 0F23  
                       _LATB 0019                         u1175 0E6C                         u2311 0F22  
                       _LATC 001A                         u1280 0DC8                         u2400 0FDC  
                       u2320 0F47                         u1281 0DC7                         u2305 07E2  
                       u2401 0FDB                         u2321 0F46                         u2410 0BF4  
                       u1290 0DD2                         u1370 0C16                         u2330 0F51  
                       u1610 0D78                         u2411 0BF3                         u1195 0E79  
                       u1291 0DD1                         u1275 0DBC                         u1371 0C15  
                       u2331 0F50                         u1611 0D77                         u2340 0F71  
                       u2420 0C6C                         u2341 0F6F                         u2421 0C6B  
                       u1605 0D6C                         u2430 0C52                         u2270 07B4  
                       u2350 0F72                         u1630 0D87                         u2510 0CEF  
                       u2431 0C51                         u1295 0DCE                         u2271 07B3  
                       u1631 0D86                         u2511 0CEE                         u2280 07B9  
                       u2360 0FA7                         u2600 07A6                         u2440 0CB2  
                       u2520 044C                         u2281 07B8                         u2361 0FA6  
                       u2601 07A5                         u1625 0D79                         u2505 0CE3  
                       u2441 0CB1                         u2521 044B                         u2290 07C8  
                       u2370 0FAC                         u1650 0D97                         u2530 0487  
                       u2291 07C7                         u2371 0FAB                         u1651 0D96  
                       u1635 0D83                         u2531 0486                         u2380 0FB1  
                       u2540 04A8                         u2381 0FB0                         u1645 0D8D  
                       u2541 04A7                         u2390 0FB6                         u1590 0D68  
                       u2470 0CC6                         u2550 04E3                         u2391 0FB5  
                       u1591 0D67                         u2471 0CC5                         u2455 0CB7  
                       u2551 04E2                         u1815 0E15                         u2480 0CD6  
                       u2560 04EC                         u2481 0CD5                         u2465 0CBC  
                       u2561 04EB                         u1825 0E29                         u2570 053A  
                       u2571 0539                         u1835 0E3C                         u2580 058F  
                       u2590 05B4                         u2495 0CDD                         u2591 05B3  
                       u2585 058C                         _PEIE 005E                         _PIR0 070C  
                       _PIR1 070D                         _PIR2 070E                         _TMR1 020C  
                       _TRMT 08F1                         abs@a 00A7                         _dbuf 0120  
                       _main 0C23                i1_ccp1_enable 0BD1                         _prec 00E0  
                       fsr0h 0005                         fsr1h 0007                         indf0 0000  
                       fsr0l 0004                         indf1 0001                         fsr1l 0006  
                       btemp 007E                         start 0175               _check_sw_state 0DF0  
                i1calc_map@a 0043                        ??_abs 00A9  __end_of_adv_start_rpm_table 101E  
                      ?_main 0070              __end_of___awdiv 0EA6                        _CCPR1 030C  
                      _CCPR2 0310              __end_of___awmod 0DF0                        _T1CLK 0211  
            ___awdiv@divisor 00A0                        _T1CON 020E                        _LATA0 00C0  
                      _LATC1 00D1                        _LATC2 00D2                        _IOCIE 38B4  
            __end_of___lwdiv 0D9C                        i1l302 0BD9                        i1l311 0BC2  
                      i1l305 0BBD                        i1l308 0BD0                        i1l248 03C0  
                      i1l273 00BE                        i1l282 00EB                        i1l390 0D22  
                      i1l382 0C96                        i1l295 0172                        i1l384 0CAA  
                      i1l296 0173                        i1l299 0BEC                        i1l662 0D5E  
            ___awdiv@counter 00A5                        _OSCEN 0891                 vfpfcnvrt@fmt 00AB  
                      _TMR1H 020D                        _TMR1L 020C                        _PORTA 000C  
                      _PORTB 000D                        _PORTC 000E                        _TRISA 0012  
                      _TRISB 0013                        _TRISC 0014                        _flags 00E4  
                      _fputc 07AE                        _width 00DE                        _putch 0003  
             i1_ccp2_disable 0BBE             __end_ofi1___tmul 0D23             __end_ofi1___wmul 0CAB  
             ?i1_ccp1_enable 0070       __end_of_check_sw_state 0E46                        status 0003  
        i1___wmul@multiplier 0070                        wtemp0 007E              __end_of_sprintf 0C8C  
            __initialization 0177              i1calc_map@temp1 0032                 __end_of_main 0C3A  
                ?i1_calc_map 0070                       ??_main 00DE       __end_ofi1_ccp2_disable 0BC3  
                     _CCP1IE 38BF                       _CCP1IF 386F                       _CCP2IE 38C7  
                     _CCP2IF 3877                       ?_fputc 00A0             ___awdiv@dividend 00A2  
                     _ANSELA 1F38                       ?_putch 0070                       _ANSELB 1F43  
                     _ANSELC 1F4E                       _IOCAF2 F9FA                       _IOCAN2 F9F2  
                     _RC1PPS 1F21                       _RC1STA 011D                       i1l2001 0D0E  
                     i1l2011 0D2B                       i1l2003 0D1B                       _RB6PPS 1F1E  
                     i1l2021 0D4A                       i1l2013 0D2E                       i1l2023 0D4E  
                     i1l2015 0D33                       i1l2007 0D23                       i1l2025 0D4F  
                     i1l2017 0D37                       i1l2009 0D25                       i1l2027 0D54  
                     i1l2019 0D3B                       i1l2029 0D5A                       i1l2301 0238  
                     i1l2311 025C                       i1l2303 023B                       u200_20 03C0  
                     u200_21 03BF                       i1l2321 02AA                       i1l2313 0289  
                     i1l2305 024E                       i1l2401 0040                       i1l2331 02E9  
                     i1l2323 02AE                       i1l2315 028D                       i1l2307 0252  
                     i1l2411 007A                       i1l2403 0055                       i1l2341 030C  
                     i1l2333 02EF                       i1l2325 02B4                       i1l2317 0293  
                     i1l2309 0258                       i1l2501 0159                       i1l2421 0088  
                     i1l2413 007D                       i1l2405 0057                       i1l2263 0BB9  
                     i1l2271 0BCE                       i1l2351 033C                       i1l2335 02F2  
                     i1l2327 02B8                       i1l2319 0297                       i1l2511 016B  
                     i1l2503 015B                       i1l2431 00A5                       i1l2415 007F  
                     i1l2423 008A                       i1l2407 006E                       u201_20 000B  
                     i1l2265 0BBB                       i1l2273 0BE3                       i1l2361 0368  
                     i1l2353 0340                       i1l2345 0311                       i1l2329 02E5  
                     i1l2281 01C4                       i1l2513 016D                       i1l2505 0160  
                     i1l2433 00AB                       i1l2425 0090                       i1l2441 00BE  
                     i1l2417 0082                       i1l2409 0076                       u201_21 000A  
                     i1l2267 0BC8                       i1l2275 0BE6                       i1l2363 03A3  
                     i1l2355 0346                       i1l2339 02F9                       i1l2291 01EE  
                     i1l2283 01CF                       i1l2515 0170                       i1l2507 0162  
                     i1l2443 00C4                       i1l2451 00D7                       i1l2427 0097  
                     i1l2419 0085                       i1l2269 0BCB                       i1l2277 0BE8  
                     i1l2365 03B6                       i1l2349 0313                       i1l2293 0200  
                     i1l2285 01E6                       i1l2509 0169                       i1l2453 00DC  
                     i1l2445 00CB                       i1l2437 00B7                       i1l2429 00A1  
                     i1l2461 00EC                       i1l2381 0006                       i1l2279 0BE9  
                     i1l2367 03BA                       i1l2359 0348                       i1l2295 0204  
                     i1l2287 01E8                       i1l2463 00F1                       i1l2471 00F9  
                     i1l2447 00CE                       i1l2391 0016                       i1l2383 000B  
                     u210_20 00B6                       u202_20 0011                       i1l2297 0216  
                     i1l2289 01EA                       i1l2481 010A                       i1l2465 00F3  
                     i1l2457 00E4                       i1l2449 00D4                       u210_21 00B5  
                     i1l2393 0019                       i1l2385 0011                       u202_21 0010  
                     i1l2473 00FB                       i1l2299 0228                       i1l2491 012E  
                     i1l2483 0111                       i1l2475 00FF                       i1l2467 00F5  
                     i1l2395 0021                       i1l2387 0013                       i1l2493 014B  
                     i1l2477 0102                       i1l2485 0114                       i1l2469 00F6  
                     i1l2397 0034                       i1l2389 0015                       i1l2495 014C  
                     i1l2487 0119                       i1l2479 0105                       i1l2399 003A  
                     u211_20 00BD                       u203_20 003A                       i1l2497 014F  
                     i1l2489 011F                       u211_21 00BC                       u203_21 0039  
                     i1l1971 0BD4                       i1l2499 0156                       i1l1973 0BD7  
                     i1l1981 0C8E                       i1l1975 0BBE                       i1l1983 0C92  
                     u220_20 0111                       u212_20 00C4                       u204_20 0040  
                     i1l1969 0BD1                       i1l1977 0BC0                       i1l1993 0CF6  
                     i1l1985 0C9B                       u220_21 0110                       u212_21 00C3  
                     u204_21 003F                       i1l1995 0CFD                       i1l1987 0CA0  
                     i1l1979 0C8C                       i1l1997 0D01                       i1l1989 0CA6  
                     i1l1999 0D08                       u221_20 0119                       u213_20 00CB  
                     u205_20 006E                       u221_21 0118                       u213_21 00CA  
                     u205_21 006D                       u205_25 006A                       u222_20 011F  
                     u214_20 00D4                       u206_20 0090                       u222_21 011E  
                     u214_21 00D3                       u206_21 008F                       u223_20 012E  
                     u215_20 00DC                       u207_20 0097                       u223_21 012D  
                     u215_21 00DB                       u207_21 0096                       u224_20 014B  
                     u216_20 00E3                       u208_20 00A1                       u224_21 014A  
                     u216_21 00E2                       u208_21 00A0                       _INLVLA 1F3C  
                     _INLVLB 1F47                       _INLVLC 1F52                       u224_25 0147  
                     u225_20 0156                       u217_20 00EA                       u209_20 00AB  
                     u225_21 0155                       u217_21 00E9                       u209_21 00AA  
                     u170_20 0D01                       u226_20 0160                       u218_20 00F1  
                     u170_21 0D00                       u226_21 015F                       u218_21 00F0  
                     u219_20 00FF                       u219_21 00FE                       u171_25 0D09  
                     u180_20 0D5A                       u180_21 0D59                       u172_25 0D0F  
                     u173_20 0D1B                       u173_21 0D1A                       u261_27 0080  
                     u174_20 0D2B                       u166_20 0C92                       u174_21 0D2A  
                     u166_21 0C91                       u262_27 0100                       u175_25 0D2F  
                     u167_25 0C97                       u176_20 0D3B                       u176_21 0D3A  
                     u168_25 0C9C                       u169_20 0CA6                       u193_20 0258  
                     u169_21 0CA5                       u193_21 0257                       u177_25 0D3C  
                     u178_20 0D4A                       u194_20 0293                       u178_21 0D49  
                     u194_21 0292                       u178_25 0D46                       u195_20 02B4  
                     u195_21 02B3                       u179_25 0D50                       u196_20 02EF  
                     u196_21 02EE                       u197_20 02F8                       u197_21 02F7  
                     u198_20 0346                       u198_21 0345                       u199_20 039B  
                     u199_25 0398                       _OSCFRQ 0893                vfpfcnvrt@done 00B1  
           __end_of_calc_map 05B5                       _RX1PPS 1ECB                       _TMR1IE 38BD  
                     _TMR1IF 386D                       _TMR1ON 1070                       _TX1REG 011A  
                     _WDTCON 080C                       _TX1STA 011E              ?_check_sw_state 0070  
               vfprintf@cfmt 00BF                       ___tmul 0CCB                       ___wmul 0CAB  
                  ??___awdiv 00A4                    ??___awmod 00A4                    ??___lwdiv 00A4  
           ___awdiv@quotient 00A7              ___awmod@divisor 00A0              ___awmod@counter 00A5  
              _max_adv_table 1008                       _tx_buf 0048                 __pdataBIGRAM 20DE  
                     fputc@c 00A0            __end_ofi1___lwdiv 0D5F             _ignition_disable 0BE3  
      i1___tmul@multiplicand 0079                       putch@c 0070             __end_of_vfprintf 0C6F  
            ?i1_ccp2_disable 0070                    ??_sprintf 00C5              ??i1_ccp1_enable 0070  
    __end_of__initialization 01C0               __pcstackCOMMON 0070                 __pidataBANK1 0BB5  
                 _Write_Byte 0BED                __end_of_fputc 0800                __end_of_putch 0004  
              i1calc_map@p1x 003F                i1calc_map@p1y 0037                i1calc_map@p2x 0040  
              i1calc_map@p2y 0039                i1calc_map@p3x 0041                i1calc_map@p3y 003B  
              i1calc_map@p4x 0042                i1calc_map@p4y 003D                    ?i1___tmul 0076  
                  ?i1___wmul 0070                      ??_fputc 00A3          i1___tmul@multiplier 0076  
                    ??_putch 00A0                   __pbssBANK0 0048                   __pbssBANK1 00DE  
                 __pbssBANK2 0120               _deg2time_coeff 20DE                ??_ccp1_enable 00A0  
              ??_ccp2_enable 0070                   __pmaintext 0C23           Write_table@tx_data 00D5  
                    ?___tmul 00A6                      ?___wmul 00A0                   __pintentry 0004  
                    _CCP1CAP 030F                      _CCP2CAP 0313                      _CCP1CON 030E  
                    _CCP2CON 0312                      _CCP1PPS 1EA1                      _CCP2PPS 1EA2  
              ??_WriteString 00A3                   ??i1___tmul 007C                   ??i1___wmul 0074  
              ??_Write_table 00D3                    ?_calc_map 0070                   _ig_counter 00E2  
                    _SP1BRGH 011C                      _SP1BRGL 011B                 Write_table@a 00DD  
                    _OSCTUNE 0892                      _PPSLOCK 1E8F            _initialize_system 0EA6  
              _min_ret_table 1000           ?_initialize_system 0070          __end_of_ccp1_enable 0BE3  
        __end_of_ccp2_enable 0BD1               WriteString@str 00A1                      ___awdiv 0E46  
                ?_Write_Byte 0070                      ___awmod 0D9C                      ___lwdiv 0D5F  
                  ?_vfprintf 00BA          ??_initialize_system 00A0                 ??i1_calc_map 0023  
                    __ptext1 0EA6                      __ptext2 0BC3                      __ptext3 0DF0  
                    __ptext4 0BDA                      __ptext5 03C1                      __ptext6 0CAB  
                    __ptext7 0CCB                      __ptext8 0D5F                      __ptext9 073E  
                 ??_calc_map 00AF                      _map_sel 007C            i1___lwdiv@divisor 0070  
                    _sw1_pos 00EC                      _sw2_pos 00EB                      _sw3_pos 00EA  
                    _sw4_pos 00E9            i1___lwdiv@counter 0077        i1calc_map@coeff_p1_p2 0035  
      i1calc_map@coeff_p3_p4 0036             ___awmod@dividend 00A2        __end_of_numerator_rpm 1012  
        __end_of_WriteString 0C53             ??_check_sw_state 00A0          __end_of_Write_table 07AE  
                    _sprintf 0C6F                      clrloop0 0BFA         end_of_initialization 01C0  
  __end_of_initialize_system 0F10                      fputc@fp 00A2                      init_ram 0C05  
                    initloop 0C06           __end_ofi1_calc_map 03C1     __end_of_ignition_disable 0BED  
          __end_of_vfpfcnvrt 1000             vfpfcnvrt@convarg 00B5                   ??_vfprintf 00BD  
      i1___wmul@multiplicand 0072                    _PORTAbits 000C                    _PORTBbits 000D  
                  _PORTCbits 000E             _InterruptManager 0004             ??i1_ccp2_disable 0070  
               calc_map@temp 00BB                    i1___lwdiv 0D23                  _ccp1_enable 0BDA  
                _ccp2_enable 0BC8                __pidataBIGRAM 05B5               __end_of___tmul 0CF6  
                vfpfcnvrt@ap 00AC                  vfpfcnvrt@cp 00B3                  vfpfcnvrt@fp 00B2  
             __end_of___wmul 0CCB                  _WriteString 0C3A                  _Write_table 073E  
        start_initialization 0177                ?_ccp1_disable 0070               i1calc_map@temp 002F  
                __end_of_abs 0C23                ?_ccp2_disable 0070                   ?i1___lwdiv 0070  
      __end_ofi1_ccp1_enable 0BDA                  vfprintf@fmt 00BA                     ??___tmul 00AC  
                   ??___wmul 00A4                  __pdataBANK1 00E9               ___tmul@product 00AC  
                __pbssBIGRAM 2267               ??_ccp1_disable 0070                  __pbssCOMMON 007C  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
             ??_ccp2_disable 00A0               _revlimit_state 0057                Write_Byte@chr 00A0  
                  _deg_table 236D   __end_of_max_adv_grad_table 101A             ___lwdiv@dividend 00A2  
        _adv_start_rpm_table 101A                 ??_Write_Byte 00A0                     ?___awdiv 00A0  
                   ?___awmod 00A0                     ?___lwdiv 00A0                    calc_map@a 00CF  
                   _BAUD1CON 011F             ___lwdiv@quotient 00A5                  ??i1___lwdiv 0074  
                   ?_sprintf 00C1           __end_of_Write_Byte 0BF9               ___wmul@product 00A4  
   __end_of_InterruptManager 0175                    clear_ram0 0BF9            ?_ignition_disable 0070  
                   _EG_state 00E5                     _IG_table 2267           ??_ignition_disable 0070  
                calc_map@p1x 00CB                  calc_map@p1y 00C3                  calc_map@p2x 00CC  
                calc_map@p2y 00C5                  calc_map@p3x 00CD                  calc_map@p3y 00C7  
                calc_map@p4x 00CE                  calc_map@p4y 00C9                    _vfpfcnvrt 0F10  
      __end_of_max_adv_table 1010                    _pwj_state 0056                     i1___tmul 0CF6  
          ___wmul@multiplier 00A0                     i1___wmul 0C8C          ___tmul@multiplicand 00A9  
                 vfpfcnvrt@c 00B9                 ?_ccp1_enable 0070                 ?_ccp2_enable 0070  
       __end_of_ccp1_disable 0BBE                   vfprintf@ap 00BC                   vfprintf@fp 00BE  
       __end_of_ccp2_disable 0BC8                     _t1_count 00E7                   ?_vfpfcnvrt 00AB  
               ?_WriteString 00A1                 ?_Write_table 0070                     _calc_map 03C1  
                 sprintf@fmt 00C1              ___lwdiv@divisor 00A0              ___lwdiv@counter 00A7  
                   __ptext10 0C6F                     __ptext11 0C53                     __ptext12 0F10  
                   __ptext21 01C4                     __ptext13 07AE                     __ptext22 0C8C  
                   __ptext14 0003                     __ptext23 0CF6                     __ptext15 0C11  
                   __ptext24 0D23                     __ptext16 0D9C                     __ptext25 0BE3  
                   __ptext17 0E46                     __ptext26 0BBE                     __ptext18 0C3A  
                   __ptext27 0BD1                     __ptext19 0BED                     __ptext28 0BC8  
                   __ptext29 0BB9           i1___lwdiv@dividend 0072                     int$flags 007E  
                   _vfprintf 0C53           i1___lwdiv@quotient 0075                 _orev_counter 0058  
              _numerator_rpm 1010                     intlevel1 0000                    sprintf@ap 00C6  
           i1___tmul@product 0020        __end_of_min_ret_table 1008                  _PPSLOCKbits 1E8F  
         _pu1_2_period_count 0054            ___tmul@multiplier 00A6                  ??_vfpfcnvrt 00AD  
              __pstringtext1 1000                __pstringtext2 1008                __pstringtext3 1016  
              __pstringtext4 101A                __pstringtext5 1010                __pstringtext6 101E  
              __pstringtext7 0000           _max_adv_grad_table 1016                     sprintf@f 00C8  
                   sprintf@s 00C7          calc_map@coeff_p1_p2 00C1          calc_map@coeff_p3_p4 00C2  
              calc_map@temp1 00BE            ?_InterruptManager 0070  
