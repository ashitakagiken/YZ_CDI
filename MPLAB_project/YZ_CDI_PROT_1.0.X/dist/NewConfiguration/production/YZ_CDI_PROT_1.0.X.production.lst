

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Feb 09 15:20:58 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F15245
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x620,48
    56                           	dabs	1,0x5A0,80
    57                           	dabs	1,0x56D,3
    58                           	dabs	1,0x520,77
    59                           	dabs	1,0x4A0,80
    60                           	dabs	1,0x420,80
    61                           	dabs	1,0x3D7,25
    62                           	dabs	1,0x3A0,55
    63                           	dabs	1,0x320,80
    64                           	dabs	1,0x2A0,80
    65                           	dabs	1,0x220,80
    66                           	dabs	1,0x1A0,80
    67                           	dabs	1,0x15E,18
    68                           	dabs	1,0x2267,0,_IG_table
    69                           	dabs	1,0x236D,0,_deg_table
    70                           	dabs	1,0x20DE,0,_deg2time_coeff
    71                           	dabs	1,0x7E,2
    72     0000                     
    73                           ; Generated 11/01/2024 GMT
    74                           ; 
    75                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F15245 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     0012                     	;# 
   123     0013                     	;# 
   124     0014                     	;# 
   125     0018                     	;# 
   126     0019                     	;# 
   127     001A                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     0119                     	;# 
   138     011A                     	;# 
   139     011B                     	;# 
   140     011B                     	;# 
   141     011C                     	;# 
   142     011D                     	;# 
   143     011E                     	;# 
   144     011F                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     018E                     	;# 
   148     018F                     	;# 
   149     0190                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     020C                     	;# 
   153     020C                     	;# 
   154     020D                     	;# 
   155     020E                     	;# 
   156     020E                     	;# 
   157     020F                     	;# 
   158     020F                     	;# 
   159     0210                     	;# 
   160     0210                     	;# 
   161     0211                     	;# 
   162     0211                     	;# 
   163     0211                     	;# 
   164     028C                     	;# 
   165     028C                     	;# 
   166     028D                     	;# 
   167     028D                     	;# 
   168     028E                     	;# 
   169     028F                     	;# 
   170     0290                     	;# 
   171     0291                     	;# 
   172     030C                     	;# 
   173     030C                     	;# 
   174     030D                     	;# 
   175     030E                     	;# 
   176     030F                     	;# 
   177     0310                     	;# 
   178     0310                     	;# 
   179     0311                     	;# 
   180     0312                     	;# 
   181     0313                     	;# 
   182     0314                     	;# 
   183     0314                     	;# 
   184     0315                     	;# 
   185     0316                     	;# 
   186     0318                     	;# 
   187     0318                     	;# 
   188     0319                     	;# 
   189     031A                     	;# 
   190     059C                     	;# 
   191     059C                     	;# 
   192     059D                     	;# 
   193     059D                     	;# 
   194     059E                     	;# 
   195     059F                     	;# 
   196     070C                     	;# 
   197     070D                     	;# 
   198     070E                     	;# 
   199     0716                     	;# 
   200     0717                     	;# 
   201     0718                     	;# 
   202     080C                     	;# 
   203     0811                     	;# 
   204     0813                     	;# 
   205     0814                     	;# 
   206     081A                     	;# 
   207     081A                     	;# 
   208     081B                     	;# 
   209     081C                     	;# 
   210     081C                     	;# 
   211     081D                     	;# 
   212     081E                     	;# 
   213     081F                     	;# 
   214     088E                     	;# 
   215     0890                     	;# 
   216     0891                     	;# 
   217     0892                     	;# 
   218     0893                     	;# 
   219     090C                     	;# 
   220     1E8F                     	;# 
   221     1E90                     	;# 
   222     1E91                     	;# 
   223     1E92                     	;# 
   224     1E93                     	;# 
   225     1E9C                     	;# 
   226     1EA1                     	;# 
   227     1EA2                     	;# 
   228     1EC3                     	;# 
   229     1EC5                     	;# 
   230     1EC6                     	;# 
   231     1EC7                     	;# 
   232     1ECB                     	;# 
   233     1ECB                     	;# 
   234     1ECB                     	;# 
   235     1ECC                     	;# 
   236     1ECC                     	;# 
   237     1ECC                     	;# 
   238     1F10                     	;# 
   239     1F11                     	;# 
   240     1F12                     	;# 
   241     1F14                     	;# 
   242     1F15                     	;# 
   243     1F1C                     	;# 
   244     1F1D                     	;# 
   245     1F1E                     	;# 
   246     1F1F                     	;# 
   247     1F20                     	;# 
   248     1F21                     	;# 
   249     1F22                     	;# 
   250     1F23                     	;# 
   251     1F24                     	;# 
   252     1F25                     	;# 
   253     1F26                     	;# 
   254     1F27                     	;# 
   255     1F38                     	;# 
   256     1F39                     	;# 
   257     1F3A                     	;# 
   258     1F3B                     	;# 
   259     1F3C                     	;# 
   260     1F3D                     	;# 
   261     1F3E                     	;# 
   262     1F3F                     	;# 
   263     1F43                     	;# 
   264     1F44                     	;# 
   265     1F45                     	;# 
   266     1F46                     	;# 
   267     1F47                     	;# 
   268     1F48                     	;# 
   269     1F49                     	;# 
   270     1F4A                     	;# 
   271     1F4E                     	;# 
   272     1F4F                     	;# 
   273     1F50                     	;# 
   274     1F51                     	;# 
   275     1F52                     	;# 
   276     1F53                     	;# 
   277     1F54                     	;# 
   278     1F55                     	;# 
   279     1FE4                     	;# 
   280     1FE5                     	;# 
   281     1FE6                     	;# 
   282     1FE7                     	;# 
   283     1FE8                     	;# 
   284     1FE8                     	;# 
   285     1FE9                     	;# 
   286     1FEA                     	;# 
   287     1FEB                     	;# 
   288     1FED                     	;# 
   289     1FEE                     	;# 
   290     1FEF                     	;_deg2time_coeff
   291                           
   292                           	psect	idataBIGRAM
   293     05B7                     __pidataBIGRAM:
   294                           
   295                           ;initializer for _deg2time_coeff
   296     05B7  3400               	retlw	0
   297     05B8  3400               	retlw	0
   298     05B9  3400               	retlw	0
   299     05BA  3400               	retlw	0
   300     05BB  3400               	retlw	0
   301     05BC  3400               	retlw	0
   302     05BD  3400               	retlw	0
   303     05BE  3400               	retlw	0
   304     05BF  3400               	retlw	0
   305     05C0  3400               	retlw	0
   306     05C1  3400               	retlw	0
   307     05C2  3400               	retlw	0
   308     05C3  3400               	retlw	0
   309     05C4  3400               	retlw	0
   310     05C5  3400               	retlw	0
   311     05C6  3400               	retlw	0
   312     05C7  3400               	retlw	0
   313     05C8  3400               	retlw	0
   314     05C9  3400               	retlw	0
   315     05CA  3400               	retlw	0
   316     05CB  3400               	retlw	0
   317     05CC  3400               	retlw	0
   318     05CD  3400               	retlw	0
   319     05CE  3400               	retlw	0
   320     05CF  3400               	retlw	0
   321     05D0  3400               	retlw	0
   322     05D1  3400               	retlw	0
   323     05D2  3400               	retlw	0
   324     05D3  3400               	retlw	0
   325     05D4  3400               	retlw	0
   326     05D5  3400               	retlw	0
   327     05D6  3400               	retlw	0
   328     05D7  3400               	retlw	0
   329     05D8  3400               	retlw	0
   330     05D9  3400               	retlw	0
   331     05DA  3400               	retlw	0
   332     05DB  3400               	retlw	0
   333     05DC  3400               	retlw	0
   334     05DD  3400               	retlw	0
   335     05DE  3400               	retlw	0
   336     05DF  3400               	retlw	0
   337     05E0  3400               	retlw	0
   338     05E1  3400               	retlw	0
   339     05E2  3400               	retlw	0
   340     05E3  3400               	retlw	0
   341     05E4  34E4               	retlw	228
   342     05E5  3408               	retlw	8
   343     05E6  3400               	retlw	0
   344     05E7  3455               	retlw	85
   345     05E8  3408               	retlw	8
   346     05E9  3400               	retlw	0
   347     05EA  34D8               	retlw	216
   348     05EB  3407               	retlw	7
   349     05EC  3400               	retlw	0
   350     05ED  3468               	retlw	104
   351     05EE  3407               	retlw	7
   352     05EF  3400               	retlw	0
   353     05F0  3404               	retlw	4
   354     05F1  3407               	retlw	7
   355     05F2  3400               	retlw	0
   356     05F3  34AB               	retlw	171
   357     05F4  3406               	retlw	6
   358     05F5  3400               	retlw	0
   359     05F6  3459               	retlw	89
   360     05F7  3406               	retlw	6
   361     05F8  3400               	retlw	0
   362     05F9  3410               	retlw	16
   363     05FA  3406               	retlw	6
   364     05FB  3400               	retlw	0
   365     05FC  34CC               	retlw	204
   366     05FD  3405               	retlw	5
   367     05FE  3400               	retlw	0
   368     05FF  348E               	retlw	142
   369     0600  3405               	retlw	5
   370     0601  3400               	retlw	0
   371     0602  3455               	retlw	85
   372     0603  3405               	retlw	5
   373     0604  3400               	retlw	0
   374     0605  3421               	retlw	33
   375     0606  3405               	retlw	5
   376     0607  3400               	retlw	0
   377     0608  34F0               	retlw	240
   378     0609  3404               	retlw	4
   379     060A  3400               	retlw	0
   380     060B  34C3               	retlw	195
   381     060C  3404               	retlw	4
   382     060D  3400               	retlw	0
   383     060E  3499               	retlw	153
   384     060F  3404               	retlw	4
   385     0610  3400               	retlw	0
   386     0611  3472               	retlw	114
   387     0612  3404               	retlw	4
   388     0613  3400               	retlw	0
   389     0614  344D               	retlw	77
   390     0615  3404               	retlw	4
   391     0616  3400               	retlw	0
   392     0617  342B               	retlw	43
   393     0618  3404               	retlw	4
   394     0619  3400               	retlw	0
   395     061A  340A               	retlw	10
   396     061B  3404               	retlw	4
   397     061C  3400               	retlw	0
   398     061D  34EC               	retlw	236
   399     061E  3403               	retlw	3
   400     061F  3400               	retlw	0
   401     0620  34CF               	retlw	207
   402     0621  3403               	retlw	3
   403     0622  3400               	retlw	0
   404     0623  34B4               	retlw	180
   405     0624  3403               	retlw	3
   406     0625  3400               	retlw	0
   407     0626  349B               	retlw	155
   408     0627  3403               	retlw	3
   409     0628  3400               	retlw	0
   410     0629  3482               	retlw	130
   411     062A  3403               	retlw	3
   412     062B  3400               	retlw	0
   413     062C  346B               	retlw	107
   414     062D  3403               	retlw	3
   415     062E  3400               	retlw	0
   416     062F  3455               	retlw	85
   417     0630  3403               	retlw	3
   418     0631  3400               	retlw	0
   419     0632  3441               	retlw	65
   420     0633  3403               	retlw	3
   421     0634  3400               	retlw	0
   422     0635  342D               	retlw	45
   423     0636  3403               	retlw	3
   424     0637  3400               	retlw	0
   425     0638  341A               	retlw	26
   426     0639  3403               	retlw	3
   427     063A  3400               	retlw	0
   428     063B  3408               	retlw	8
   429     063C  3403               	retlw	3
   430     063D  3400               	retlw	0
   431     063E  34F7               	retlw	247
   432     063F  3402               	retlw	2
   433     0640  3400               	retlw	0
   434     0641  34E6               	retlw	230
   435     0642  3402               	retlw	2
   436     0643  3400               	retlw	0
   437     0644  34D6               	retlw	214
   438     0645  3402               	retlw	2
   439     0646  3400               	retlw	0
   440     0647  34C7               	retlw	199
   441     0648  3402               	retlw	2
   442     0649  3400               	retlw	0
   443     064A  34B9               	retlw	185
   444     064B  3402               	retlw	2
   445     064C  3400               	retlw	0
   446     064D  34AB               	retlw	171
   447     064E  3402               	retlw	2
   448     064F  3400               	retlw	0
   449     0650  349D               	retlw	157
   450     0651  3402               	retlw	2
   451     0652  3400               	retlw	0
   452     0653  3490               	retlw	144
   453     0654  3402               	retlw	2
   454     0655  3400               	retlw	0
   455     0656  3484               	retlw	132
   456     0657  3402               	retlw	2
   457     0658  3400               	retlw	0
   458     0659  3478               	retlw	120
   459     065A  3402               	retlw	2
   460     065B  3400               	retlw	0
   461     065C  346D               	retlw	109
   462     065D  3402               	retlw	2
   463     065E  3400               	retlw	0
   464     065F  3462               	retlw	98
   465     0660  3402               	retlw	2
   466     0661  3400               	retlw	0
   467     0662  3457               	retlw	87
   468     0663  3402               	retlw	2
   469     0664  3400               	retlw	0
   470     0665  344D               	retlw	77
   471     0666  3402               	retlw	2
   472     0667  3400               	retlw	0
   473     0668  3443               	retlw	67
   474     0669  3402               	retlw	2
   475     066A  3400               	retlw	0
   476     066B  3439               	retlw	57
   477     066C  3402               	retlw	2
   478     066D  3400               	retlw	0
   479     066E  3430               	retlw	48
   480     066F  3402               	retlw	2
   481     0670  3400               	retlw	0
   482     0671  3427               	retlw	39
   483     0672  3402               	retlw	2
   484     0673  3400               	retlw	0
   485     0674  341E               	retlw	30
   486     0675  3402               	retlw	2
   487     0676  3400               	retlw	0
   488     0677  3415               	retlw	21
   489     0678  3402               	retlw	2
   490     0679  3400               	retlw	0
   491     067A  340D               	retlw	13
   492     067B  3402               	retlw	2
   493     067C  3400               	retlw	0
   494     067D  3405               	retlw	5
   495     067E  3402               	retlw	2
   496     067F  3400               	retlw	0
   497     0680  34FD               	retlw	253
   498     0681  3401               	retlw	1
   499     0682  3400               	retlw	0
   500     0683  34F6               	retlw	246
   501     0684  3401               	retlw	1
   502     0685  3400               	retlw	0
   503     0686  34EF               	retlw	239
   504     0687  3401               	retlw	1
   505     0688  3400               	retlw	0
   506     0689  34E8               	retlw	232
   507     068A  3401               	retlw	1
   508     068B  3400               	retlw	0
   509     068C  34E1               	retlw	225
   510     068D  3401               	retlw	1
   511     068E  3400               	retlw	0
   512     068F  34DA               	retlw	218
   513     0690  3401               	retlw	1
   514     0691  3400               	retlw	0
   515     0692  34D4               	retlw	212
   516     0693  3401               	retlw	1
   517     0694  3400               	retlw	0
   518     0695  34CD               	retlw	205
   519     0696  3401               	retlw	1
   520     0697  3400               	retlw	0
   521     0698  34C7               	retlw	199
   522     0699  3401               	retlw	1
   523     069A  3400               	retlw	0
   524     069B  34C1               	retlw	193
   525     069C  3401               	retlw	1
   526     069D  3400               	retlw	0
   527     069E  34BB               	retlw	187
   528     069F  3401               	retlw	1
   529     06A0  3400               	retlw	0
   530     06A1  34B6               	retlw	182
   531     06A2  3401               	retlw	1
   532     06A3  3400               	retlw	0
   533     06A4  34B0               	retlw	176
   534     06A5  3401               	retlw	1
   535     06A6  3400               	retlw	0
   536     06A7  34AB               	retlw	171
   537     06A8  3401               	retlw	1
   538     06A9  3400               	retlw	0
   539     06AA  34A5               	retlw	165
   540     06AB  3401               	retlw	1
   541     06AC  3400               	retlw	0
   542     06AD  34A0               	retlw	160
   543     06AE  3401               	retlw	1
   544     06AF  3400               	retlw	0
   545     06B0  349B               	retlw	155
   546     06B1  3401               	retlw	1
   547     06B2  3400               	retlw	0
   548     06B3  3496               	retlw	150
   549     06B4  3401               	retlw	1
   550     06B5  3400               	retlw	0
   551     06B6  3492               	retlw	146
   552     06B7  3401               	retlw	1
   553     06B8  3400               	retlw	0
   554     06B9  348D               	retlw	141
   555     06BA  3401               	retlw	1
   556     06BB  3400               	retlw	0
   557     06BC  3488               	retlw	136
   558     06BD  3401               	retlw	1
   559     06BE  3400               	retlw	0
   560     06BF  3484               	retlw	132
   561     06C0  3401               	retlw	1
   562     06C1  3400               	retlw	0
   563     06C2  3480               	retlw	128
   564     06C3  3401               	retlw	1
   565     06C4  3400               	retlw	0
   566     06C5  347B               	retlw	123
   567     06C6  3401               	retlw	1
   568     06C7  3400               	retlw	0
   569     06C8  3477               	retlw	119
   570     06C9  3401               	retlw	1
   571     06CA  3400               	retlw	0
   572     06CB  3473               	retlw	115
   573     06CC  3401               	retlw	1
   574     06CD  3400               	retlw	0
   575     06CE  346F               	retlw	111
   576     06CF  3401               	retlw	1
   577     06D0  3400               	retlw	0
   578     06D1  346B               	retlw	107
   579     06D2  3401               	retlw	1
   580     06D3  3400               	retlw	0
   581     06D4  3467               	retlw	103
   582     06D5  3401               	retlw	1
   583     06D6  3400               	retlw	0
   584     06D7  3464               	retlw	100
   585     06D8  3401               	retlw	1
   586     06D9  3400               	retlw	0
   587     06DA  3460               	retlw	96
   588     06DB  3401               	retlw	1
   589     06DC  3400               	retlw	0
   590     06DD  345C               	retlw	92
   591     06DE  3401               	retlw	1
   592     06DF  3400               	retlw	0
   593     06E0  3459               	retlw	89
   594     06E1  3401               	retlw	1
   595     06E2  3400               	retlw	0
   596     06E3  3455               	retlw	85
   597     06E4  3401               	retlw	1
   598     06E5  3400               	retlw	0
   599     06E6  3452               	retlw	82
   600     06E7  3401               	retlw	1
   601     06E8  3400               	retlw	0
   602     06E9  344F               	retlw	79
   603     06EA  3401               	retlw	1
   604     06EB  3400               	retlw	0
   605     06EC  344B               	retlw	75
   606     06ED  3401               	retlw	1
   607     06EE  3400               	retlw	0
   608     06EF  3448               	retlw	72
   609     06F0  3401               	retlw	1
   610     06F1  3400               	retlw	0
   611     06F2  3445               	retlw	69
   612     06F3  3401               	retlw	1
   613     06F4  3400               	retlw	0
   614     06F5  3442               	retlw	66
   615     06F6  3401               	retlw	1
   616     06F7  3400               	retlw	0
   617     06F8  343F               	retlw	63
   618     06F9  3401               	retlw	1
   619     06FA  3400               	retlw	0
   620     06FB  343C               	retlw	60
   621     06FC  3401               	retlw	1
   622     06FD  3400               	retlw	0
   623     06FE  3439               	retlw	57
   624     06FF  3401               	retlw	1
   625     0700  3400               	retlw	0
   626     0701  3436               	retlw	54
   627     0702  3401               	retlw	1
   628     0703  3400               	retlw	0
   629     0704  3434               	retlw	52
   630     0705  3401               	retlw	1
   631     0706  3400               	retlw	0
   632     0707  3431               	retlw	49
   633     0708  3401               	retlw	1
   634     0709  3400               	retlw	0
   635     070A  342E               	retlw	46
   636     070B  3401               	retlw	1
   637     070C  3400               	retlw	0
   638     070D  342B               	retlw	43
   639     070E  3401               	retlw	1
   640     070F  3400               	retlw	0
   641     0710  3429               	retlw	41
   642     0711  3401               	retlw	1
   643     0712  3400               	retlw	0
   644     0713  3426               	retlw	38
   645     0714  3401               	retlw	1
   646     0715  3400               	retlw	0
   647     0716  3424               	retlw	36
   648     0717  3401               	retlw	1
   649     0718  3400               	retlw	0
   650     0719  3421               	retlw	33
   651     071A  3401               	retlw	1
   652     071B  3400               	retlw	0
   653     071C  341F               	retlw	31
   654     071D  3401               	retlw	1
   655     071E  3400               	retlw	0
   656     071F  341C               	retlw	28
   657     0720  3401               	retlw	1
   658     0721  3400               	retlw	0
   659     0722  341A               	retlw	26
   660     0723  3401               	retlw	1
   661     0724  3400               	retlw	0
   662     0725  3418               	retlw	24
   663     0726  3401               	retlw	1
   664     0727  3400               	retlw	0
   665     0728  3416               	retlw	22
   666     0729  3401               	retlw	1
   667     072A  3400               	retlw	0
   668     072B  3413               	retlw	19
   669     072C  3401               	retlw	1
   670     072D  3400               	retlw	0
   671     072E  3411               	retlw	17
   672     072F  3401               	retlw	1
   673     0730  3400               	retlw	0
   674     0731  340F               	retlw	15
   675     0732  3401               	retlw	1
   676     0733  3400               	retlw	0
   677     0734  340D               	retlw	13
   678     0735  3401               	retlw	1
   679     0736  3400               	retlw	0
   680     0737  340B               	retlw	11
   681     0738  3401               	retlw	1
   682     0739  3400               	retlw	0
   683     073A  3409               	retlw	9
   684     073B  3401               	retlw	1
   685     073C  3400               	retlw	0
   686     073D  3407               	retlw	7
   687     073E  3401               	retlw	1
   688     073F  3400               	retlw	0
   689                           
   690                           	psect	idataBANK1
   691     0BAC                     __pidataBANK1:
   692                           
   693                           ;initializer for _sw4_pos
   694     0BAC  3403               	retlw	3
   695                           
   696                           ;initializer for _sw3_pos
   697     0BAD  3403               	retlw	3
   698                           
   699                           ;initializer for _sw2_pos
   700     0BAE  3403               	retlw	3
   701                           
   702                           ;initializer for _sw1_pos
   703     0BAF  3402               	retlw	2
   704                           
   705                           	psect	stringtext1
   706     1000                     __pstringtext1:
   707     1000                     _min_ret_table:
   708     1000  34DC               	retlw	220
   709     1001  3405               	retlw	5
   710     1002  3414               	retlw	20
   711     1003  3405               	retlw	5
   712     1004  344C               	retlw	76
   713     1005  3404               	retlw	4
   714     1006  3484               	retlw	132
   715     1007  3403               	retlw	3
   716     1008                     __end_of_min_ret_table:
   717                           
   718                           	psect	stringtext2
   719     1008                     __pstringtext2:
   720     1008                     _max_adv_table:
   721     1008  34C4               	retlw	196
   722     1009  3409               	retlw	9
   723     100A  3434               	retlw	52
   724     100B  3408               	retlw	8
   725     100C  34A4               	retlw	164
   726     100D  3406               	retlw	6
   727     100E  3414               	retlw	20
   728     100F  3405               	retlw	5
   729     1010                     __end_of_max_adv_table:
   730                           
   731                           	psect	stringtext3
   732     1016                     __pstringtext3:
   733     1016                     _max_adv_grad_table:
   734     1016  3428               	retlw	40
   735     1017  341E               	retlw	30
   736     1018  3414               	retlw	20
   737     1019  340A               	retlw	10
   738     101A                     __end_of_max_adv_grad_table:
   739                           
   740                           	psect	stringtext4
   741     101A                     __pstringtext4:
   742     101A                     _adv_start_rpm_table:
   743     101A  342D               	retlw	45
   744     101B  3423               	retlw	35
   745     101C  3419               	retlw	25
   746     101D  340F               	retlw	15
   747     101E                     __end_of_adv_start_rpm_table:
   748                           
   749                           	psect	stringtext5
   750     1010                     __pstringtext5:
   751     1010                     _numerator_rpm:
   752     1010  347C               	retlw	124
   753     1011  3492               	retlw	146
   754     1012                     __end_of_numerator_rpm:
   755     0014                     _TRISC	set	20
   756     0013                     _TRISB	set	19
   757     0012                     _TRISA	set	18
   758     001A                     _LATC	set	26
   759     0019                     _LATB	set	25
   760     0018                     _LATA	set	24
   761     000E                     _PORTC	set	14
   762     000D                     _PORTB	set	13
   763     000C                     _PORTA	set	12
   764     000D                     _PORTBbits	set	13
   765     000E                     _PORTCbits	set	14
   766     000C                     _PORTAbits	set	12
   767     005E                     _PEIE	set	94
   768     005F                     _GIE	set	95
   769     00C0                     _LATA0	set	192
   770     00D1                     _LATC1	set	209
   771     0064                     _RA4	set	100
   772     0075                     _RC5	set	117
   773     00D2                     _LATC2	set	210
   774     011C                     _SP1BRGH	set	284
   775     011B                     _SP1BRGL	set	283
   776     011E                     _TX1STA	set	286
   777     011D                     _RC1STA	set	285
   778     011F                     _BAUD1CON	set	287
   779     011A                     _TX1REG	set	282
   780     08F1                     _TRMT	set	2289
   781     020C                     _TMR1	set	524
   782     020E                     _T1CON	set	526
   783     0211                     _T1CLK	set	529
   784     020C                     _TMR1L	set	524
   785     020D                     _TMR1H	set	525
   786     1070                     _TMR1ON	set	4208
   787     0310                     _CCPR2	set	784
   788     030C                     _CCPR1	set	780
   789     0313                     _CCP2CAP	set	787
   790     030F                     _CCP1CAP	set	783
   791     0312                     _CCP2CON	set	786
   792     030E                     _CCP1CON	set	782
   793     070E                     _PIR2	set	1806
   794     070D                     _PIR1	set	1805
   795     070C                     _PIR0	set	1804
   796     38B4                     _IOCIE	set	14516
   797     38BD                     _TMR1IE	set	14525
   798     38C7                     _CCP2IE	set	14535
   799     38BF                     _CCP1IE	set	14527
   800     386D                     _TMR1IF	set	14445
   801     3877                     _CCP2IF	set	14455
   802     386F                     _CCP1IF	set	14447
   803     080C                     _WDTCON	set	2060
   804     0892                     _OSCTUNE	set	2194
   805     0893                     _OSCFRQ	set	2195
   806     0891                     _OSCEN	set	2193
   807     1ECB                     _RX1PPS	set	7883
   808     1EA2                     _CCP2PPS	set	7842
   809     1EA1                     _CCP1PPS	set	7841
   810     1E8F                     _PPSLOCKbits	set	7823
   811     1E8F                     _PPSLOCK	set	7823
   812     1F1E                     _RB6PPS	set	7966
   813     1F21                     _RC1PPS	set	7969
   814     1F52                     _INLVLC	set	8018
   815     1F47                     _INLVLB	set	8007
   816     1F3C                     _INLVLA	set	7996
   817     1F4E                     _ANSELC	set	8014
   818     1F43                     _ANSELB	set	8003
   819     1F38                     _ANSELA	set	7992
   820     F9F2                     _IOCAN2	set	63986
   821     F9FA                     _IOCAF2	set	63994
   822     1012                     STR_1:
   823     1012  3425               	retlw	37	;'%'
   824     1013  3464               	retlw	100	;'d'
   825     1014  342C               	retlw	44	;','
   826     1015  3400               	retlw	0
   827                           
   828                           	psect	stringtext6
   829     101E                     __pstringtext6:
   830     101E                     STR_2:
   831     101E  340D               	retlw	13
   832     101F  340A               	retlw	10
   833     1020  3400               	retlw	0
   834                           
   835                           	psect	stringtext7
   836     0000                     __pstringtext7:
   837                           
   838                           	psect	cinit
   839     0179                     start_initialization:	
   840                           ; #config settings
   841                           
   842     0179                     __initialization:	;BIGRAM
   843                           
   844                           ; Initialize objects allocated to BIGRAM
   845     0179  30B7               	movlw	low __pidataBIGRAM
   846     017A  0084               	movwf	4
   847     017B  3085               	movlw	(high __pidataBIGRAM)| (0+128)
   848     017C  0085               	movwf	5
   849     017D  30DE               	movlw	low (0+8414)
   850     017E  0086               	movwf	6
   851     017F  3020               	movlw	high (0+8414)
   852     0180  0087               	movwf	7
   853     0181  3001               	movlw	1
   854     0182  00FF               	movwf	btemp+1
   855     0183  3089               	movlw	137
   856     0184  318B  23FE  3181   	fcall	init_ram
   857                           
   858                           ; Initialize objects allocated to BANK1
   859     0187  30AC               	movlw	low __pidataBANK1
   860     0188  0084               	movwf	4
   861     0189  308B               	movlw	(high __pidataBANK1)| (0+128)
   862     018A  0085               	movwf	5
   863     018B  30E9               	movlw	low __pdataBANK1
   864     018C  0086               	movwf	6
   865     018D  3000               	movlw	high __pdataBANK1
   866     018E  0087               	movwf	7
   867     018F  3000               	movlw	0
   868     0190  00FF               	movwf	btemp+1
   869     0191  3004               	movlw	4
   870     0192  318B  23FE  3181   	fcall	init_ram
   871                           
   872                           ; Clear objects allocated to BIGRAM
   873     0195  3067               	movlw	low (0+8807)
   874     0196  0084               	movwf	4
   875     0197  3022               	movlw	high (0+8807)
   876     0198  0085               	movwf	5
   877     0199  3089               	movlw	137
   878     019A  00FE               	movwf	btemp
   879     019B  3001               	movlw	1
   880     019C  00FF               	movwf	btemp+1
   881     019D  318B  23F2  3181   	fcall	clear_ram0
   882                           
   883                           ; Clear objects allocated to COMMON
   884     01A0  01FC               	clrf	__pbssCOMMON& (0+127)
   885                           
   886                           ; Clear objects allocated to BANK0
   887     01A1  3048               	movlw	low __pbssBANK0
   888     01A2  0084               	movwf	4
   889     01A3  3000               	movlw	high __pbssBANK0
   890     01A4  0085               	movwf	5
   891     01A5  3011               	movlw	17
   892     01A6  00FE               	movwf	btemp
   893     01A7  3000               	movlw	0
   894     01A8  00FF               	movwf	btemp+1
   895     01A9  318B  23F2  3181   	fcall	clear_ram0
   896                           
   897                           ; Clear objects allocated to BANK1
   898     01AC  30DE               	movlw	low __pbssBANK1
   899     01AD  0084               	movwf	4
   900     01AE  3000               	movlw	high __pbssBANK1
   901     01AF  0085               	movwf	5
   902     01B0  300B               	movlw	11
   903     01B1  00FE               	movwf	btemp
   904     01B2  3000               	movlw	0
   905     01B3  00FF               	movwf	btemp+1
   906     01B4  318B  23F2  3181   	fcall	clear_ram0
   907                           
   908                           ; Clear objects allocated to BANK2
   909     01B7  3020               	movlw	low __pbssBANK2
   910     01B8  0084               	movwf	4
   911     01B9  3001               	movlw	high __pbssBANK2
   912     01BA  0085               	movwf	5
   913     01BB  3020               	movlw	32
   914     01BC  00FE               	movwf	btemp
   915     01BD  3000               	movlw	0
   916     01BE  00FF               	movwf	btemp+1
   917     01BF  318B  23F2  3181   	fcall	clear_ram0
   918     01C2                     end_of_initialization:	
   919                           ;End of C runtime variable initialization code
   920                           
   921     01C2                     __end_of__initialization:
   922     01C2  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   923     01C3  0140               	movlb	0
   924     01C4  318C  2C23         	ljmp	_main	;jump to C main() function
   925                           
   926                           	psect	bssCOMMON
   927     007C                     __pbssCOMMON:
   928     007C                     _map_sel:
   929     007C                     	ds	1
   930                           
   931                           	psect	bssBANK0
   932     0048                     __pbssBANK0:
   933     0048                     _tx_buf:
   934     0048                     	ds	12
   935     0054                     _pu1_2_period_count:
   936     0054                     	ds	2
   937     0056                     _pwj_state:
   938     0056                     	ds	1
   939     0057                     _revlimit_state:
   940     0057                     	ds	1
   941     0058                     _orev_counter:
   942     0058                     	ds	1
   943                           
   944                           	psect	bssBANK1
   945     00DE                     __pbssBANK1:
   946     00DE                     _width:
   947     00DE                     	ds	2
   948     00E0                     _prec:
   949     00E0                     	ds	2
   950     00E2                     _ig_counter:
   951     00E2                     	ds	2
   952     00E4                     _flags:
   953     00E4                     	ds	1
   954     00E5                     _EG_state:
   955     00E5                     	ds	1
   956     00E6                     _rpm:
   957     00E6                     	ds	1
   958     00E7                     _t1_count:
   959     00E7                     	ds	2
   960                           
   961                           	psect	dataBANK1
   962     00E9                     __pdataBANK1:
   963     00E9                     _sw4_pos:
   964     00E9                     	ds	1
   965     00EA                     _sw3_pos:
   966     00EA                     	ds	1
   967     00EB                     _sw2_pos:
   968     00EB                     	ds	1
   969     00EC                     _sw1_pos:
   970     00EC                     	ds	1
   971                           
   972                           	psect	bssBANK2
   973     0120                     __pbssBANK2:
   974     0120                     _dbuf:
   975     0120                     	ds	32
   976                           
   977                           	psect	inittext
   978     0BFE                     init_ram:
   979     0BFE  00FE               	movwf	btemp
   980     0BFF                     initloop:
   981     0BFF  0012               	moviw fsr0++
   982     0C00  001E               	movwi fsr1++
   983     0C01  3001               	movlw	1
   984     0C02  02FE               	subwf	btemp,f
   985     0C03  3000               	movlw	0
   986     0C04  3BFF               	subwfb	btemp+1,f
   987     0C05  087F               	movf	btemp+1,w
   988     0C06  047E               	iorwf	btemp,w
   989     0C07  1D03               	skipz
   990     0C08  2BFF               	goto	initloop
   991     0C09  3400               	retlw	0
   992                           
   993                           	psect	clrtext
   994     0BF2                     clear_ram0:	
   995                           ;	Called with FSR0 containing the base address, and
   996                           ;	btemp/btemp+1 has the size to clear
   997                           
   998     0BF2  0064               	clrwdt	;clear the watchdog before getting into this loop
   999     0BF3                     clrloop0:
  1000     0BF3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1001     0BF4  3101               	addfsr 0,1
  1002     0BF5  3001               	movlw	1
  1003     0BF6  02FE               	subwf	btemp,f
  1004     0BF7  3000               	movlw	0
  1005     0BF8  3BFF               	subwfb	btemp+1,f
  1006     0BF9  087F               	movf	btemp+1,w
  1007     0BFA  047E               	iorwf	btemp,w
  1008     0BFB  1D03               	skipz
  1009     0BFC  2BF3               	goto	clrloop0	;have we reached the end yet?
  1010     0BFD  3400               	retlw	0	;all done for this memory range, return
  1011                           
  1012                           	psect	cstackBANK1
  1013     00A0                     __pcstackBANK1:
  1014     00A0                     ??_initialize_system:
  1015     00A0                     ??_check_sw_state:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018     00A0                     ??_ccp1_enable:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021     00A0                     ??_ccp2_enable:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024     00A0                     ??_putch:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     00A0                     ??_Write_Byte:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     00A0                     ?_fputc:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     00A0                     ?___wmul:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036     00A0                     ?___awdiv:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039     00A0                     ?___awmod:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042     00A0                     ?___lwdiv:	
  1043                           ; 2 bytes @ 0x0
  1044                           
  1045     00A0                     Write_Byte@chr:	
  1046                           ; 2 bytes @ 0x0
  1047                           
  1048     00A0                     ___wmul@multiplier:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051     00A0                     ___awdiv@divisor:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054     00A0                     ___awmod@divisor:	
  1055                           ; 2 bytes @ 0x0
  1056                           
  1057     00A0                     ___lwdiv@divisor:	
  1058                           ; 2 bytes @ 0x0
  1059                           
  1060     00A0                     fputc@c:	
  1061                           ; 2 bytes @ 0x0
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x0
  1065     00A0                     	ds	1
  1066     00A1                     ?_WriteString:
  1067     00A1                     WriteString@str:	
  1068                           ; 1 bytes @ 0x1
  1069                           
  1070                           
  1071                           ; 2 bytes @ 0x1
  1072     00A1                     	ds	1
  1073     00A2                     fputc@fp:
  1074     00A2                     ___wmul@multiplicand:	
  1075                           ; 1 bytes @ 0x2
  1076                           
  1077     00A2                     ___awdiv@dividend:	
  1078                           ; 2 bytes @ 0x2
  1079                           
  1080     00A2                     ___awmod@dividend:	
  1081                           ; 2 bytes @ 0x2
  1082                           
  1083     00A2                     ___lwdiv@dividend:	
  1084                           ; 2 bytes @ 0x2
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x2
  1088     00A2                     	ds	1
  1089     00A3                     ??_WriteString:
  1090     00A3                     ??_fputc:	
  1091                           ; 1 bytes @ 0x3
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x3
  1095     00A3                     	ds	1
  1096     00A4                     ??___wmul:
  1097     00A4                     ??___awdiv:	
  1098                           ; 1 bytes @ 0x4
  1099                           
  1100     00A4                     ??___awmod:	
  1101                           ; 1 bytes @ 0x4
  1102                           
  1103     00A4                     ??___lwdiv:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106     00A4                     ___wmul@product:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x4
  1111     00A4                     	ds	1
  1112     00A5                     ___awdiv@counter:
  1113     00A5                     ___awmod@counter:	
  1114                           ; 1 bytes @ 0x5
  1115                           
  1116     00A5                     ___lwdiv@quotient:	
  1117                           ; 1 bytes @ 0x5
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x5
  1121     00A5                     	ds	1
  1122     00A6                     ?___tmul:
  1123     00A6                     ___awdiv@sign:	
  1124                           ; 3 bytes @ 0x6
  1125                           
  1126     00A6                     ___awmod@sign:	
  1127                           ; 1 bytes @ 0x6
  1128                           
  1129     00A6                     ___tmul@multiplier:	
  1130                           ; 1 bytes @ 0x6
  1131                           
  1132                           
  1133                           ; 3 bytes @ 0x6
  1134     00A6                     	ds	1
  1135     00A7                     ?_abs:
  1136     00A7                     ___lwdiv@counter:	
  1137                           ; 2 bytes @ 0x7
  1138                           
  1139     00A7                     ___awdiv@quotient:	
  1140                           ; 1 bytes @ 0x7
  1141                           
  1142     00A7                     abs@a:	
  1143                           ; 2 bytes @ 0x7
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x7
  1147     00A7                     	ds	2
  1148     00A9                     ??_abs:
  1149     00A9                     ___tmul@multiplicand:	
  1150                           ; 1 bytes @ 0x9
  1151                           
  1152                           
  1153                           ; 3 bytes @ 0x9
  1154     00A9                     	ds	2
  1155     00AB                     ?_vfpfcnvrt:
  1156     00AB                     vfpfcnvrt@fmt:	
  1157                           ; 1 bytes @ 0xB
  1158                           
  1159                           
  1160                           ; 1 bytes @ 0xB
  1161     00AB                     	ds	1
  1162     00AC                     ??___tmul:
  1163     00AC                     vfpfcnvrt@ap:	
  1164                           ; 1 bytes @ 0xC
  1165                           
  1166     00AC                     ___tmul@product:	
  1167                           ; 1 bytes @ 0xC
  1168                           
  1169                           
  1170                           ; 3 bytes @ 0xC
  1171     00AC                     	ds	1
  1172     00AD                     ??_vfpfcnvrt:
  1173                           
  1174                           ; 1 bytes @ 0xD
  1175     00AD                     	ds	2
  1176     00AF                     ??_calc_map:
  1177                           
  1178                           ; 1 bytes @ 0xF
  1179     00AF                     	ds	2
  1180     00B1                     vfpfcnvrt@done:
  1181                           
  1182                           ; 1 bytes @ 0x11
  1183     00B1                     	ds	1
  1184     00B2                     vfpfcnvrt@fp:
  1185                           
  1186                           ; 1 bytes @ 0x12
  1187     00B2                     	ds	1
  1188     00B3                     vfpfcnvrt@cp:
  1189                           
  1190                           ; 2 bytes @ 0x13
  1191     00B3                     	ds	2
  1192     00B5                     vfpfcnvrt@convarg:
  1193                           
  1194                           ; 4 bytes @ 0x15
  1195     00B5                     	ds	4
  1196     00B9                     vfpfcnvrt@c:
  1197                           
  1198                           ; 1 bytes @ 0x19
  1199     00B9                     	ds	1
  1200     00BA                     ?_vfprintf:
  1201     00BA                     vfprintf@fmt:	
  1202                           ; 2 bytes @ 0x1A
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0x1A
  1206     00BA                     	ds	1
  1207     00BB                     calc_map@temp:
  1208                           
  1209                           ; 3 bytes @ 0x1B
  1210     00BB                     	ds	1
  1211     00BC                     vfprintf@ap:
  1212                           
  1213                           ; 1 bytes @ 0x1C
  1214     00BC                     	ds	1
  1215     00BD                     ??_vfprintf:
  1216                           
  1217                           ; 1 bytes @ 0x1D
  1218     00BD                     	ds	1
  1219     00BE                     vfprintf@fp:
  1220     00BE                     calc_map@temp1:	
  1221                           ; 1 bytes @ 0x1E
  1222                           
  1223                           
  1224                           ; 3 bytes @ 0x1E
  1225     00BE                     	ds	1
  1226     00BF                     vfprintf@cfmt:
  1227                           
  1228                           ; 2 bytes @ 0x1F
  1229     00BF                     	ds	2
  1230     00C1                     ?_sprintf:
  1231     00C1                     calc_map@coeff_p1_p2:	
  1232                           ; 2 bytes @ 0x21
  1233                           
  1234     00C1                     sprintf@fmt:	
  1235                           ; 1 bytes @ 0x21
  1236                           
  1237                           
  1238                           ; 2 bytes @ 0x21
  1239     00C1                     	ds	1
  1240     00C2                     calc_map@coeff_p3_p4:
  1241                           
  1242                           ; 1 bytes @ 0x22
  1243     00C2                     	ds	1
  1244     00C3                     calc_map@p1y:
  1245                           
  1246                           ; 2 bytes @ 0x23
  1247     00C3                     	ds	2
  1248     00C5                     ??_sprintf:
  1249     00C5                     calc_map@p2y:	
  1250                           ; 1 bytes @ 0x25
  1251                           
  1252                           
  1253                           ; 2 bytes @ 0x25
  1254     00C5                     	ds	1
  1255     00C6                     sprintf@ap:
  1256                           
  1257                           ; 1 bytes @ 0x26
  1258     00C6                     	ds	1
  1259     00C7                     sprintf@s:
  1260     00C7                     calc_map@p3y:	
  1261                           ; 1 bytes @ 0x27
  1262                           
  1263                           
  1264                           ; 2 bytes @ 0x27
  1265     00C7                     	ds	1
  1266     00C8                     sprintf@f:
  1267                           
  1268                           ; 11 bytes @ 0x28
  1269     00C8                     	ds	1
  1270     00C9                     calc_map@p4y:
  1271                           
  1272                           ; 2 bytes @ 0x29
  1273     00C9                     	ds	2
  1274     00CB                     calc_map@p1x:
  1275                           
  1276                           ; 1 bytes @ 0x2B
  1277     00CB                     	ds	1
  1278     00CC                     calc_map@p2x:
  1279                           
  1280                           ; 1 bytes @ 0x2C
  1281     00CC                     	ds	1
  1282     00CD                     calc_map@p3x:
  1283                           
  1284                           ; 1 bytes @ 0x2D
  1285     00CD                     	ds	1
  1286     00CE                     calc_map@p4x:
  1287                           
  1288                           ; 1 bytes @ 0x2E
  1289     00CE                     	ds	1
  1290     00CF                     calc_map@a:
  1291                           
  1292                           ; 1 bytes @ 0x2F
  1293     00CF                     	ds	4
  1294     00D3                     ??_Write_table:
  1295                           
  1296                           ; 1 bytes @ 0x33
  1297     00D3                     	ds	2
  1298     00D5                     Write_table@tx_data:
  1299                           
  1300                           ; 8 bytes @ 0x35
  1301     00D5                     	ds	8
  1302     00DD                     Write_table@a:
  1303                           
  1304                           ; 1 bytes @ 0x3D
  1305     00DD                     	ds	1
  1306     00DE                     ??_main:
  1307                           
  1308                           	psect	cstackCOMMON
  1309     0070                     __pcstackCOMMON:	
  1310                           ; 1 bytes @ 0x3E
  1311                           
  1312     0070                     ?_initialize_system:
  1313     0070                     ?_check_sw_state:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316     0070                     ?_calc_map:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319     0070                     ?_ccp1_enable:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322     0070                     ?_ccp2_enable:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325     0070                     ?_Write_table:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328     0070                     ?_ccp1_disable:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331     0070                     ??_ccp1_disable:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334     0070                     ?_ccp2_disable:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337     0070                     ??_ccp2_disable:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340     0070                     ?_ignition_disable:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343     0070                     ??_ignition_disable:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346     0070                     ?_putch:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349     0070                     ?_main:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352     0070                     ?_Write_Byte:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355     0070                     ?_InterruptManager:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358     0070                     ?i1_calc_map:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361     0070                     ?i1_ccp1_enable:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364     0070                     ??i1_ccp1_enable:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367     0070                     ?i1_ccp2_enable:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370     0070                     ??i1_ccp2_enable:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373     0070                     ?i1___wmul:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376     0070                     ?i1___lwdiv:	
  1377                           ; 2 bytes @ 0x0
  1378                           
  1379     0070                     putch@c:	
  1380                           ; 2 bytes @ 0x0
  1381                           
  1382     0070                     i1___wmul@multiplier:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385     0070                     i1___lwdiv@divisor:	
  1386                           ; 2 bytes @ 0x0
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x0
  1390     0070                     	ds	2
  1391     0072                     i1___wmul@multiplicand:
  1392     0072                     i1___lwdiv@dividend:	
  1393                           ; 2 bytes @ 0x2
  1394                           
  1395                           
  1396                           ; 2 bytes @ 0x2
  1397     0072                     	ds	2
  1398     0074                     ??i1___wmul:
  1399     0074                     ??i1___lwdiv:	
  1400                           ; 1 bytes @ 0x4
  1401                           
  1402     0074                     i1___wmul@product:	
  1403                           ; 1 bytes @ 0x4
  1404                           
  1405                           
  1406                           ; 2 bytes @ 0x4
  1407     0074                     	ds	1
  1408     0075                     i1___lwdiv@quotient:
  1409                           
  1410                           ; 2 bytes @ 0x5
  1411     0075                     	ds	1
  1412     0076                     ?i1___tmul:
  1413     0076                     i1___tmul@multiplier:	
  1414                           ; 3 bytes @ 0x6
  1415                           
  1416                           
  1417                           ; 3 bytes @ 0x6
  1418     0076                     	ds	1
  1419     0077                     i1___lwdiv@counter:
  1420                           
  1421                           ; 1 bytes @ 0x7
  1422     0077                     	ds	2
  1423     0079                     i1___tmul@multiplicand:
  1424                           
  1425                           ; 3 bytes @ 0x9
  1426     0079                     	ds	3
  1427     007C                     ??i1___tmul:
  1428                           
  1429                           	psect	cstackBANK0
  1430     0020                     __pcstackBANK0:	
  1431                           ; 1 bytes @ 0xC
  1432                           
  1433     0020                     i1___tmul@product:
  1434                           
  1435                           ; 3 bytes @ 0x0
  1436     0020                     	ds	3
  1437     0023                     ??i1_calc_map:
  1438                           
  1439                           ; 1 bytes @ 0x3
  1440     0023                     	ds	12
  1441     002F                     i1calc_map@temp:
  1442                           
  1443                           ; 3 bytes @ 0xF
  1444     002F                     	ds	3
  1445     0032                     i1calc_map@temp1:
  1446                           
  1447                           ; 3 bytes @ 0x12
  1448     0032                     	ds	3
  1449     0035                     i1calc_map@coeff_p1_p2:
  1450                           
  1451                           ; 1 bytes @ 0x15
  1452     0035                     	ds	1
  1453     0036                     i1calc_map@coeff_p3_p4:
  1454                           
  1455                           ; 1 bytes @ 0x16
  1456     0036                     	ds	1
  1457     0037                     i1calc_map@p1y:
  1458                           
  1459                           ; 2 bytes @ 0x17
  1460     0037                     	ds	2
  1461     0039                     i1calc_map@p2y:
  1462                           
  1463                           ; 2 bytes @ 0x19
  1464     0039                     	ds	2
  1465     003B                     i1calc_map@p3y:
  1466                           
  1467                           ; 2 bytes @ 0x1B
  1468     003B                     	ds	2
  1469     003D                     i1calc_map@p4y:
  1470                           
  1471                           ; 2 bytes @ 0x1D
  1472     003D                     	ds	2
  1473     003F                     i1calc_map@p1x:
  1474                           
  1475                           ; 1 bytes @ 0x1F
  1476     003F                     	ds	1
  1477     0040                     i1calc_map@p2x:
  1478                           
  1479                           ; 1 bytes @ 0x20
  1480     0040                     	ds	1
  1481     0041                     i1calc_map@p3x:
  1482                           
  1483                           ; 1 bytes @ 0x21
  1484     0041                     	ds	1
  1485     0042                     i1calc_map@p4x:
  1486                           
  1487                           ; 1 bytes @ 0x22
  1488     0042                     	ds	1
  1489     0043                     i1calc_map@a:
  1490                           
  1491                           ; 1 bytes @ 0x23
  1492     0043                     	ds	1
  1493     0044                     ??_InterruptManager:
  1494                           
  1495                           ; 1 bytes @ 0x24
  1496     0044                     	ds	4
  1497                           
  1498                           	psect	maintext
  1499     0C23                     __pmaintext:	
  1500 ;;
  1501 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1502 ;;
  1503 ;; *************** function _main *****************
  1504 ;; Defined at:
  1505 ;;		line 161 in file "main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : B3F/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels required when called: 9
  1525 ;; This function calls:
  1526 ;;		_Write_table
  1527 ;;		_calc_map
  1528 ;;		_ccp1_enable
  1529 ;;		_ccp2_enable
  1530 ;;		_check_sw_state
  1531 ;;		_initialize_system
  1532 ;; This function is called by:
  1533 ;;		Startup code after reset
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537     0C23                     _main:	
  1538                           ;psect for function _main
  1539                           
  1540     0C23                     l2881:	
  1541                           ;incstack = 0
  1542                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1543                           
  1544                           
  1545                           ;main.c: 162:     initialize_system();
  1546     0C23  318E  26A5  318C   	fcall	_initialize_system
  1547     0C26                     l2883:
  1548                           
  1549                           ;main.c: 163:     LATC2 = (0);
  1550     0C26  0140               	movlb	0	; select bank0
  1551     0C27  111A               	bcf	26,2	;volatile
  1552     0C28                     l2885:
  1553                           
  1554                           ;main.c: 164:     check_sw_state();
  1555     0C28  318D  25EF  318C   	fcall	_check_sw_state
  1556     0C2B                     l2887:
  1557                           
  1558                           ;main.c: 165:     calc_map();
  1559     0C2B  3183  23C3  318C   	fcall	_calc_map
  1560     0C2E                     l2889:
  1561                           
  1562                           ;main.c: 166:     ccp1_enable();
  1563     0C2E  318B  23D3  318C   	fcall	_ccp1_enable
  1564     0C31                     l2891:
  1565                           
  1566                           ;main.c: 167:     ccp2_enable();
  1567     0C31  318B  23C2  318C   	fcall	_ccp2_enable
  1568     0C34                     l2893:
  1569                           
  1570                           ;main.c: 170:         check_sw_state();
  1571     0C34  318D  25EF  318C   	fcall	_check_sw_state
  1572     0C37                     l2895:
  1573                           
  1574                           ;main.c: 171:         Write_table();
  1575     0C37  3187  2740  318C   	fcall	_Write_table
  1576     0C3A  2C34               	goto	l2893
  1577     0C3B  3181  2977         	ljmp	start
  1578     0C3D                     __end_of_main:
  1579                           
  1580                           	psect	text1
  1581     0EA5                     __ptext1:	
  1582 ;; *************** function _initialize_system *****************
  1583 ;; Defined at:
  1584 ;;		line 453 in file "main.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;Total ram usage:        0 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 3
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612     0EA5                     _initialize_system:	
  1613                           ;psect for function _initialize_system
  1614                           
  1615     0EA5                     l2663:	
  1616                           ;incstack = 0
  1617                           ; Regs used in _initialize_system: [wreg+status,2]
  1618                           
  1619                           
  1620                           ;main.c: 455:     OSCEN = 0x40;
  1621     0EA5  3040               	movlw	64
  1622     0EA6  0151               	movlb	17	; select bank17
  1623     0EA7  0091               	movwf	17	;volatile
  1624                           
  1625                           ;main.c: 456:     OSCFRQ = 0x05;
  1626     0EA8  3005               	movlw	5
  1627     0EA9  0093               	movwf	19	;volatile
  1628     0EAA                     l2665:
  1629                           
  1630                           ;main.c: 457:     OSCTUNE = 0X00;
  1631     0EAA  0192               	clrf	18	;volatile
  1632     0EAB                     l2667:
  1633                           
  1634                           ;main.c: 460:     PORTA = 0x00;
  1635     0EAB  0140               	movlb	0	; select bank0
  1636     0EAC  018C               	clrf	12	;volatile
  1637     0EAD                     l2669:
  1638                           
  1639                           ;main.c: 461:     PORTB = 0x00;
  1640     0EAD  018D               	clrf	13	;volatile
  1641     0EAE                     l2671:
  1642                           
  1643                           ;main.c: 462:     PORTC = 0x00;
  1644     0EAE  018E               	clrf	14	;volatile
  1645     0EAF                     l2673:
  1646                           
  1647                           ;main.c: 463:     LATA = 0x00;
  1648     0EAF  0198               	clrf	24	;volatile
  1649     0EB0                     l2675:
  1650                           
  1651                           ;main.c: 464:     LATB = 0x00;
  1652     0EB0  0199               	clrf	25	;volatile
  1653     0EB1                     l2677:
  1654                           
  1655                           ;main.c: 465:     LATC = 0x00;
  1656     0EB1  019A               	clrf	26	;volatile
  1657     0EB2                     l2679:
  1658                           
  1659                           ;main.c: 466:     ANSELA = 0x00;
  1660     0EB2  017E               	movlb	62	; select bank62
  1661     0EB3  01B8               	clrf	56	;volatile
  1662     0EB4                     l2681:
  1663                           
  1664                           ;main.c: 467:     ANSELB = 0x00;
  1665     0EB4  01C3               	clrf	67	;volatile
  1666     0EB5                     l2683:
  1667                           
  1668                           ;main.c: 468:     ANSELC = 0x00;
  1669     0EB5  01CE               	clrf	78	;volatile
  1670                           
  1671                           ;main.c: 471:     TRISA = 0b00110100;
  1672     0EB6  3034               	movlw	52
  1673     0EB7  0140               	movlb	0	; select bank0
  1674     0EB8  0092               	movwf	18	;volatile
  1675                           
  1676                           ;main.c: 472:     TRISB = 0b10110000;
  1677     0EB9  30B0               	movlw	176
  1678     0EBA  0093               	movwf	19	;volatile
  1679                           
  1680                           ;main.c: 473:     TRISC = 0b11111001;
  1681     0EBB  30F9               	movlw	249
  1682     0EBC  0094               	movwf	20	;volatile
  1683                           
  1684                           ;main.c: 474:     INLVLA = 0b00110100;
  1685     0EBD  3034               	movlw	52
  1686     0EBE  017E               	movlb	62	; select bank62
  1687     0EBF  00BC               	movwf	60	;volatile
  1688                           
  1689                           ;main.c: 475:     INLVLB = 0b10110000;
  1690     0EC0  30B0               	movlw	176
  1691     0EC1  00C7               	movwf	71	;volatile
  1692                           
  1693                           ;main.c: 476:     INLVLC = 0b11111001;
  1694     0EC2  30F9               	movlw	249
  1695     0EC3  00D2               	movwf	82	;volatile
  1696                           
  1697                           ;main.c: 479:     T1CLK = 0b00000001;
  1698     0EC4  3001               	movlw	1
  1699     0EC5  0144               	movlb	4	; select bank4
  1700     0EC6  0091               	movwf	17	;volatile
  1701                           
  1702                           ;main.c: 480:     T1CON = 0b00110000;
  1703     0EC7  3030               	movlw	48
  1704     0EC8  008E               	movwf	14	;volatile
  1705     0EC9                     l2685:
  1706                           
  1707                           ;main.c: 481:     TMR1 = 0x0000;
  1708     0EC9  018C               	clrf	12	;volatile
  1709     0ECA  018D               	clrf	13	;volatile
  1710     0ECB                     l2687:
  1711                           
  1712                           ;main.c: 486:     CCP1CAP = 0x0;
  1713     0ECB  0146               	movlb	6	; select bank6
  1714     0ECC  018F               	clrf	15	;volatile
  1715     0ECD                     l2689:
  1716                           
  1717                           ;main.c: 487:     CCP2CAP = 0x0;
  1718     0ECD  0193               	clrf	19	;volatile
  1719     0ECE                     l2691:
  1720                           
  1721                           ;main.c: 488:     CCPR1 = 0x0000;
  1722     0ECE  018C               	clrf	12	;volatile
  1723     0ECF  018D               	clrf	13	;volatile
  1724     0ED0                     l2693:
  1725                           
  1726                           ;main.c: 489:     CCPR2 = 0x0000;
  1727     0ED0  0190               	clrf	16	;volatile
  1728     0ED1  0191               	clrf	17	;volatile
  1729     0ED2                     l2695:
  1730                           
  1731                           ;main.c: 490:     CCP1CON = 0x84;
  1732     0ED2  3084               	movlw	132
  1733     0ED3  008E               	movwf	14	;volatile
  1734     0ED4                     l2697:
  1735                           
  1736                           ;main.c: 491:     CCP2CON = 0x88;
  1737     0ED4  3088               	movlw	136
  1738     0ED5  0092               	movwf	18	;volatile
  1739     0ED6                     l2699:
  1740                           
  1741                           ;main.c: 494:     IOCAN2 = 1;
  1742     0ED6  017E               	movlb	62	; select bank62
  1743     0ED7  153E               	bsf	62,2	;volatile
  1744     0ED8                     l2701:
  1745                           
  1746                           ;main.c: 497:     PPSLOCK = 0x55;
  1747     0ED8  3055               	movlw	85
  1748     0ED9  017D               	movlb	61	; select bank61
  1749     0EDA  008F               	movwf	15	;volsfr
  1750     0EDB                     l2703:
  1751                           
  1752                           ;main.c: 498:     PPSLOCK = 0xAA;
  1753     0EDB  30AA               	movlw	170
  1754     0EDC  008F               	movwf	15	;volsfr
  1755     0EDD                     l2705:
  1756                           
  1757                           ;main.c: 499:     PPSLOCKbits.PPSLOCKED = 0;
  1758     0EDD  100F               	bcf	15,0	;volsfr
  1759     0EDE                     l2707:
  1760                           
  1761                           ;main.c: 500:     CCP1PPS = 0x10;
  1762     0EDE  3010               	movlw	16
  1763     0EDF  00A1               	movwf	33	;volatile
  1764     0EE0                     l2709:
  1765                           
  1766                           ;main.c: 501:     CCP2PPS = 0b00010001;
  1767     0EE0  3011               	movlw	17
  1768     0EE1  00A2               	movwf	34	;volatile
  1769     0EE2                     l2711:
  1770                           
  1771                           ;main.c: 502:     RC1PPS = 0x02;
  1772     0EE2  3002               	movlw	2
  1773     0EE3  017E               	movlb	62	; select bank62
  1774     0EE4  00A1               	movwf	33	;volatile
  1775     0EE5                     l2713:
  1776                           
  1777                           ;main.c: 503:     RX1PPS = 0x0F;
  1778     0EE5  300F               	movlw	15
  1779     0EE6  017D               	movlb	61	; select bank61
  1780     0EE7  00CB               	movwf	75	;volatile
  1781     0EE8                     l2715:
  1782                           
  1783                           ;main.c: 504:     RB6PPS = 0x05;
  1784     0EE8  3005               	movlw	5
  1785     0EE9  017E               	movlb	62	; select bank62
  1786     0EEA  009E               	movwf	30	;volatile
  1787     0EEB                     l2717:
  1788                           
  1789                           ;main.c: 505:     PPSLOCK = 0x55;
  1790     0EEB  3055               	movlw	85
  1791     0EEC  017D               	movlb	61	; select bank61
  1792     0EED  008F               	movwf	15	;volsfr
  1793     0EEE                     l2719:
  1794                           
  1795                           ;main.c: 506:     PPSLOCK = 0xAA;
  1796     0EEE  30AA               	movlw	170
  1797     0EEF  008F               	movwf	15	;volsfr
  1798     0EF0                     l2721:
  1799                           
  1800                           ;main.c: 507:     PPSLOCKbits.PPSLOCKED = 1;
  1801     0EF0  140F               	bsf	15,0	;volsfr
  1802                           
  1803                           ;main.c: 510:     BAUD1CON = 0x00;
  1804     0EF1  0142               	movlb	2	; select bank2
  1805     0EF2  019F               	clrf	31	;volatile
  1806                           
  1807                           ;main.c: 511:     RC1STA = 0x00;
  1808     0EF3  019D               	clrf	29	;volatile
  1809                           
  1810                           ;main.c: 512:     TX1STA = 0x00;
  1811     0EF4  019E               	clrf	30	;volatile
  1812                           
  1813                           ;main.c: 513:     SP1BRGL = 0x00;
  1814     0EF5  019B               	clrf	27	;volatile
  1815                           
  1816                           ;main.c: 514:     SP1BRGH = 0x00;
  1817     0EF6  019C               	clrf	28	;volatile
  1818     0EF7                     l2723:
  1819                           
  1820                           ;main.c: 516:     BAUD1CON = 0x40;
  1821     0EF7  3040               	movlw	64
  1822     0EF8  009F               	movwf	31	;volatile
  1823     0EF9                     l2725:
  1824                           
  1825                           ;main.c: 518:     RC1STA = 0x80;
  1826     0EF9  3080               	movlw	128
  1827     0EFA  009D               	movwf	29	;volatile
  1828     0EFB                     l2727:
  1829                           
  1830                           ;main.c: 520:     TX1STA = 0x26;
  1831     0EFB  3026               	movlw	38
  1832     0EFC  009E               	movwf	30	;volatile
  1833     0EFD                     l2729:
  1834                           
  1835                           ;main.c: 522:     SP1BRGL = 0x22;
  1836     0EFD  3022               	movlw	34
  1837     0EFE  009B               	movwf	27	;volatile
  1838                           
  1839                           ;main.c: 524:     SP1BRGH = 0x0;
  1840     0EFF  019C               	clrf	28	;volatile
  1841     0F00                     l2731:
  1842                           
  1843                           ;main.c: 527:     WDTCON = 0x13;
  1844     0F00  3013               	movlw	19
  1845     0F01  0150               	movlb	16	; select bank16
  1846     0F02  008C               	movwf	12	;volatile
  1847     0F03                     l2733:
  1848                           
  1849                           ;main.c: 530:     PIR0 = 0x0;
  1850     0F03  014E               	movlb	14	; select bank14
  1851     0F04  018C               	clrf	12	;volatile
  1852     0F05                     l2735:
  1853                           
  1854                           ;main.c: 531:     PIR1 = 0x0;
  1855     0F05  018D               	clrf	13	;volatile
  1856     0F06                     l2737:
  1857                           
  1858                           ;main.c: 532:     PIR2 = 0x0;
  1859     0F06  018E               	clrf	14	;volatile
  1860     0F07                     l2739:
  1861                           
  1862                           ;main.c: 535:     GIE = 1;
  1863     0F07  178B               	bsf	11,7	;volatile
  1864     0F08                     l2741:
  1865                           
  1866                           ;main.c: 536:     PEIE = 1;
  1867     0F08  170B               	bsf	11,6	;volatile
  1868     0F09                     l2743:
  1869                           
  1870                           ;main.c: 537:     CCP1IE = 1;
  1871     0F09  1797               	bsf	23,7	;volatile
  1872     0F0A                     l2745:
  1873                           
  1874                           ;main.c: 538:     CCP2IE = 1;
  1875     0F0A  1798               	bsf	24,7	;volatile
  1876     0F0B                     l2747:
  1877                           
  1878                           ;main.c: 539:     TMR1IE = 1;
  1879     0F0B  1697               	bsf	23,5	;volatile
  1880     0F0C                     l2749:
  1881                           
  1882                           ;main.c: 540:     IOCIE = 1;
  1883     0F0C  1616               	bsf	22,4	;volatile
  1884     0F0D                     l2751:
  1885                           
  1886                           ;main.c: 541:     LATC1 = 0;
  1887     0F0D  0140               	movlb	0	; select bank0
  1888     0F0E  109A               	bcf	26,1	;volatile
  1889     0F0F                     l314:
  1890     0F0F  0008               	return
  1891     0F10                     __end_of_initialize_system:
  1892                           
  1893                           	psect	text2
  1894     0DEF                     __ptext2:	
  1895 ;; *************** function _check_sw_state *****************
  1896 ;; Defined at:
  1897 ;;		line 270 in file "main.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1915 ;;Total ram usage:        2 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 3
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925     0DEF                     _check_sw_state:	
  1926                           ;psect for function _check_sw_state
  1927                           
  1928     0DEF                     l2127:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _check_sw_state: [wreg-fsr0h+status,2+status,0]
  1931                           
  1932                           
  1933                           ;main.c: 271:     switch (RC5) {
  1934     0DEF  2DF5               	goto	l2133
  1935     0DF0                     l252:	
  1936                           ;main.c: 272:     case 0:
  1937                           
  1938                           
  1939                           ;main.c: 273:         pwj_state = PWJ_DISABLE;
  1940     0DF0  01D6               	clrf	_pwj_state
  1941     0DF1  0AD6               	incf	_pwj_state,f
  1942                           
  1943                           ;main.c: 274:         break;
  1944     0DF2  2E05               	goto	l2139
  1945     0DF3                     l2129:
  1946                           
  1947                           ;main.c: 276:         pwj_state = PWJ_ENABLE;
  1948     0DF3  01D6               	clrf	_pwj_state
  1949                           
  1950                           ;main.c: 277:         break;
  1951     0DF4  2E05               	goto	l2139
  1952     0DF5                     l2133:
  1953     0DF5  3000               	movlw	0
  1954     0DF6  0140               	movlb	0	; select bank0
  1955     0DF7  1A8E               	btfsc	14,5	;volatile
  1956     0DF8  3001               	movlw	1
  1957                           
  1958                           ; Switch size 1, requested type "simple"
  1959                           ; Number of cases is 2, Range of values is 0 to 1
  1960                           ; switch strategies available:
  1961                           ; Name         Instructions Cycles
  1962                           ; simple_byte            7     4 (average)
  1963                           ; direct_byte           10     6 (fixed)
  1964                           ; jumptable            260     6 (fixed)
  1965                           ;	Chosen strategy is simple_byte
  1966     0DF9  3A00               	xorlw	0	; case 0
  1967     0DFA  1903               	skipnz
  1968     0DFB  2DF0               	goto	l252
  1969     0DFC  3A01               	xorlw	1	; case 1
  1970     0DFD  1903               	skipnz
  1971     0DFE  2DF3               	goto	l2129
  1972     0DFF  2E05               	goto	l2139
  1973     0E00                     l256:	
  1974                           ;main.c: 280:     case 0:
  1975                           
  1976                           
  1977                           ;main.c: 281:         revlimit_state = REVLIMIT_DISABLE;
  1978     0E00  01D7               	clrf	_revlimit_state
  1979     0E01  0AD7               	incf	_revlimit_state,f
  1980                           
  1981                           ;main.c: 282:         break;
  1982     0E02  2E0F               	goto	l2141
  1983     0E03                     l2135:
  1984                           
  1985                           ;main.c: 284:         revlimit_state = REVLIMIT_ENABLE;
  1986     0E03  01D7               	clrf	_revlimit_state
  1987                           
  1988                           ;main.c: 285:         break;
  1989     0E04  2E0F               	goto	l2141
  1990     0E05                     l2139:
  1991     0E05  3000               	movlw	0
  1992     0E06  1A0C               	btfsc	12,4	;volatile
  1993     0E07  3001               	movlw	1
  1994                           
  1995                           ; Switch size 1, requested type "simple"
  1996                           ; Number of cases is 2, Range of values is 0 to 1
  1997                           ; switch strategies available:
  1998                           ; Name         Instructions Cycles
  1999                           ; simple_byte            7     4 (average)
  2000                           ; direct_byte           10     6 (fixed)
  2001                           ; jumptable            260     6 (fixed)
  2002                           ;	Chosen strategy is simple_byte
  2003     0E08  3A00               	xorlw	0	; case 0
  2004     0E09  1903               	skipnz
  2005     0E0A  2E00               	goto	l256
  2006     0E0B  3A01               	xorlw	1	; case 1
  2007     0E0C  1903               	skipnz
  2008     0E0D  2E03               	goto	l2135
  2009     0E0E  2E0F               	goto	l2141
  2010     0E0F                     l2141:
  2011                           
  2012                           ;main.c: 288:     sw1_pos = (PORTCbits.RC4 << 1) + PORTCbits.RC3;
  2013     0E0F  0E0E               	swapf	14,w	;volatile
  2014     0E10  3901               	andlw	1
  2015     0E11  0141               	movlb	1	; select bank1
  2016     0E12  00A0               	movwf	??_check_sw_state^(0+128)
  2017     0E13  3001               	movlw	1
  2018     0E14                     u1815:
  2019     0E14  35A0               	lslf	??_check_sw_state^(0+128),f
  2020     0E15  0B89               	decfsz	9,f
  2021     0E16  2E14               	goto	u1815
  2022     0E17  0140               	movlb	0	; select bank0
  2023     0E18  0C0E               	rrf	14,w	;volatile
  2024     0E19  0141               	movlb	1	; select bank1
  2025     0E1A  00A1               	movwf	(??_check_sw_state+1)^(0+128)
  2026     0E1B  0CA1               	rrf	(??_check_sw_state+1)^(0+128),f
  2027     0E1C  0C21               	rrf	(??_check_sw_state+1)^(0+128),w
  2028     0E1D  3901               	andlw	1
  2029     0E1E  0720               	addwf	??_check_sw_state^(0+128),w
  2030     0E1F  00EC               	movwf	_sw1_pos^(0+128)
  2031                           
  2032                           ;main.c: 289:     sw2_pos = (PORTCbits.RC6 << 1) + PORTCbits.RC7;
  2033     0E20  0140               	movlb	0	; select bank0
  2034     0E21  0E0E               	swapf	14,w	;volatile
  2035     0E22  0C89               	rrf	9,f
  2036     0E23  0C89               	rrf	9,f
  2037     0E24  3901               	andlw	1
  2038     0E25  0141               	movlb	1	; select bank1
  2039     0E26  00A0               	movwf	??_check_sw_state^(0+128)
  2040     0E27  3001               	movlw	1
  2041     0E28                     u1825:
  2042     0E28  35A0               	lslf	??_check_sw_state^(0+128),f
  2043     0E29  0B89               	decfsz	9,f
  2044     0E2A  2E28               	goto	u1825
  2045     0E2B  0140               	movlb	0	; select bank0
  2046     0E2C  0D0E               	rlf	14,w	;volatile
  2047     0E2D  0D0E               	rlf	14,w	;volatile
  2048     0E2E  3901               	andlw	1
  2049     0E2F  0141               	movlb	1	; select bank1
  2050     0E30  0720               	addwf	??_check_sw_state^(0+128),w
  2051     0E31  00EB               	movwf	_sw2_pos^(0+128)
  2052     0E32                     l2143:
  2053                           
  2054                           ;main.c: 291:     sw3_pos = 3;
  2055     0E32  3003               	movlw	3
  2056     0E33  00EA               	movwf	_sw3_pos^(0+128)
  2057     0E34                     l2145:
  2058                           
  2059                           ;main.c: 292:     sw4_pos = (PORTBbits.RB5 << 1) + PORTBbits.RB4;
  2060     0E34  0140               	movlb	0	; select bank0
  2061     0E35  0E0D               	swapf	13,w	;volatile
  2062     0E36  0C89               	rrf	9,f
  2063     0E37  3901               	andlw	1
  2064     0E38  0141               	movlb	1	; select bank1
  2065     0E39  00A0               	movwf	??_check_sw_state^(0+128)
  2066     0E3A  3001               	movlw	1
  2067     0E3B                     u1835:
  2068     0E3B  35A0               	lslf	??_check_sw_state^(0+128),f
  2069     0E3C  0B89               	decfsz	9,f
  2070     0E3D  2E3B               	goto	u1835
  2071     0E3E  0140               	movlb	0	; select bank0
  2072     0E3F  0E0D               	swapf	13,w	;volatile
  2073     0E40  3901               	andlw	1
  2074     0E41  0141               	movlb	1	; select bank1
  2075     0E42  0720               	addwf	??_check_sw_state^(0+128),w
  2076     0E43  00E9               	movwf	_sw4_pos^(0+128)
  2077     0E44                     l259:
  2078     0E44  0008               	return
  2079     0E45                     __end_of_check_sw_state:
  2080                           
  2081                           	psect	text3
  2082     0BC2                     __ptext3:	
  2083 ;; *************** function _ccp2_enable *****************
  2084 ;; Defined at:
  2085 ;;		line 432 in file "main.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 3
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113     0BC2                     _ccp2_enable:	
  2114                           ;psect for function _ccp2_enable
  2115                           
  2116     0BC2                     l2847:	
  2117                           ;incstack = 0
  2118                           ; Regs used in _ccp2_enable: [wreg]
  2119                           
  2120                           
  2121                           ;main.c: 433:     CCP2IE = 0;
  2122     0BC2  014E               	movlb	14	; select bank14
  2123     0BC3  1398               	bcf	24,7	;volatile
  2124     0BC4                     l2849:
  2125                           
  2126                           ;main.c: 435:     CCP2CON = 0x88;
  2127     0BC4  3088               	movlw	136
  2128     0BC5  0146               	movlb	6	; select bank6
  2129     0BC6  0092               	movwf	18	;volatile
  2130     0BC7                     l2851:
  2131                           
  2132                           ;main.c: 436:     CCP2IE = 1;
  2133     0BC7  014E               	movlb	14	; select bank14
  2134     0BC8  1798               	bsf	24,7	;volatile
  2135     0BC9                     l308:
  2136     0BC9  0008               	return
  2137     0BCA                     __end_of_ccp2_enable:
  2138                           
  2139                           	psect	text4
  2140     0BD3                     __ptext4:	
  2141 ;; *************** function _ccp1_enable *****************
  2142 ;; Defined at:
  2143 ;;		line 411 in file "main.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 3
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171     0BD3                     _ccp1_enable:	
  2172                           ;psect for function _ccp1_enable
  2173                           
  2174     0BD3                     l2841:	
  2175                           ;incstack = 0
  2176                           ; Regs used in _ccp1_enable: [wreg]
  2177                           
  2178                           
  2179                           ;main.c: 412:     CCP1IE = 0;
  2180     0BD3  014E               	movlb	14	; select bank14
  2181     0BD4  1397               	bcf	23,7	;volatile
  2182                           
  2183                           ;main.c: 413:     CCP1IF = 0;
  2184     0BD5  138D               	bcf	13,7	;volatile
  2185     0BD6                     l2843:
  2186                           
  2187                           ;main.c: 414:     CCP1CON = 0x84;
  2188     0BD6  3084               	movlw	132
  2189     0BD7  0146               	movlb	6	; select bank6
  2190     0BD8  008E               	movwf	14	;volatile
  2191     0BD9                     l2845:
  2192                           
  2193                           ;main.c: 415:     CCP1IE = 1;
  2194     0BD9  014E               	movlb	14	; select bank14
  2195     0BDA  1797               	bsf	23,7	;volatile
  2196     0BDB                     l302:
  2197     0BDB  0008               	return
  2198     0BDC                     __end_of_ccp1_enable:
  2199                           
  2200                           	psect	text5
  2201     03C3                     __ptext5:	
  2202 ;; *************** function _calc_map *****************
  2203 ;; Defined at:
  2204 ;;		line 219 in file "main.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  temp1           3   30[BANK1 ] unsigned um
  2209 ;;  temp            3   27[BANK1 ] unsigned um
  2210 ;;  p4y             2   41[BANK1 ] unsigned short 
  2211 ;;  p3y             2   39[BANK1 ] unsigned short 
  2212 ;;  p2y             2   37[BANK1 ] unsigned short 
  2213 ;;  p1y             2   35[BANK1 ] unsigned short 
  2214 ;;  a               1   47[BANK1 ] unsigned char 
  2215 ;;  p4x             1   46[BANK1 ] unsigned char 
  2216 ;;  p3x             1   45[BANK1 ] unsigned char 
  2217 ;;  p2x             1   44[BANK1 ] unsigned char 
  2218 ;;  p1x             1   43[BANK1 ] unsigned char 
  2219 ;;  coeff_p3_p4     1   34[BANK1 ] unsigned char 
  2220 ;;  coeff_p1_p2     1   33[BANK1 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;Total ram usage:       33 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 4
  2237 ;; This function calls:
  2238 ;;		___lwdiv
  2239 ;;		___tmul
  2240 ;;		___wmul
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246     03C3                     _calc_map:	
  2247                           ;psect for function _calc_map
  2248                           
  2249     03C3                     l2753:	
  2250                           ;incstack = 0
  2251                           ; Regs used in _calc_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2252                           
  2253                           
  2254                           ;main.c: 220:     uint8_t p1x, p2x, p3x, p4x;;main.c: 221:     uint16_t p1y, p2y, p3y, p
      +                          4y;;main.c: 222:     uint8_t coeff_p1_p2, coeff_p3_p4;;main.c: 223:     uint8_t a;;main.
      +                          c: 224:     uint24_t temp;;main.c: 225:     uint24_t temp1;;main.c: 227:     p1x = adv_s
      +                          tart_rpm_table[sw1_pos];
  2255     03C3  0141               	movlb	1	; select bank1
  2256     03C4  086C               	movf	_sw1_pos^(0+128),w
  2257     03C5  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  2258     03C6  0084               	movwf	4
  2259     03C7  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  2260     03C8  1803               	skipnc
  2261     03C9  3E01               	addlw	1
  2262     03CA  0085               	movwf	5
  2263     03CB  0800               	movf	0,w	;code access
  2264     03CC  00CB               	movwf	calc_map@p1x^(0+128)
  2265     03CD                     l2755:
  2266                           
  2267                           ;main.c: 228:     p2x = adv_start_rpm_table[sw1_pos] + max_adv_grad_table[sw3_pos];
  2268     03CD  086A               	movf	_sw3_pos^(0+128),w
  2269     03CE  3E16               	addlw	low (_max_adv_grad_table| (0+32768))
  2270     03CF  0084               	movwf	4
  2271     03D0  3090               	movlw	high (_max_adv_grad_table| (0+32768))
  2272     03D1  1803               	skipnc
  2273     03D2  3E01               	addlw	1
  2274     03D3  0085               	movwf	5
  2275     03D4  0800               	movf	0,w	;code access
  2276     03D5  00AF               	movwf	??_calc_map^(0+128)
  2277     03D6  086C               	movf	_sw1_pos^(0+128),w
  2278     03D7  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  2279     03D8  0084               	movwf	4
  2280     03D9  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  2281     03DA  1803               	skipnc
  2282     03DB  3E01               	addlw	1
  2283     03DC  0085               	movwf	5
  2284     03DD  0800               	movf	0,w	;code access
  2285     03DE  072F               	addwf	??_calc_map^(0+128),w
  2286     03DF  00CC               	movwf	calc_map@p2x^(0+128)
  2287     03E0                     l2757:
  2288                           
  2289                           ;main.c: 229:     p3x = (55);
  2290     03E0  3037               	movlw	55
  2291     03E1  00CD               	movwf	calc_map@p3x^(0+128)
  2292     03E2                     l2759:
  2293                           
  2294                           ;main.c: 230:     p4x = (80);
  2295     03E2  3050               	movlw	80
  2296     03E3  00CE               	movwf	calc_map@p4x^(0+128)
  2297     03E4                     l2761:
  2298                           
  2299                           ;main.c: 231:     p1y = (500);
  2300     03E4  30F4               	movlw	244
  2301     03E5  00C3               	movwf	calc_map@p1y^(0+128)
  2302     03E6  3001               	movlw	1
  2303     03E7  00C4               	movwf	(calc_map@p1y^(0+128)+1)
  2304     03E8                     l2763:
  2305                           
  2306                           ;main.c: 232:     p2y = max_adv_table[sw2_pos];
  2307     03E8  086B               	movf	_sw2_pos^(0+128),w
  2308     03E9  00AF               	movwf	??_calc_map^(0+128)
  2309     03EA  01B0               	clrf	(??_calc_map^(0+128)+1)
  2310     03EB  35AF               	lslf	??_calc_map^(0+128),f
  2311     03EC  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2312     03ED  3008               	movlw	low _max_adv_table
  2313     03EE  072F               	addwf	??_calc_map^(0+128),w
  2314     03EF  0084               	movwf	4
  2315     03F0  3010               	movlw	high _max_adv_table
  2316     03F1  3D30               	addwfc	(??_calc_map+1)^(0+128),w
  2317     03F2  3880               	iorlw	128
  2318     03F3  0085               	movwf	5
  2319     03F4  3F00               	moviw [0]fsr0
  2320     03F5  00C5               	movwf	calc_map@p2y^(0+128)
  2321     03F6  3F01               	moviw [1]fsr0
  2322     03F7  00C6               	movwf	(calc_map@p2y+1)^(0+128)
  2323     03F8                     l2765:
  2324                           
  2325                           ;main.c: 233:     p3y = p2y;
  2326     03F8  0846               	movf	(calc_map@p2y+1)^(0+128),w
  2327     03F9  00C8               	movwf	(calc_map@p3y+1)^(0+128)
  2328     03FA  0845               	movf	calc_map@p2y^(0+128),w
  2329     03FB  00C7               	movwf	calc_map@p3y^(0+128)
  2330     03FC                     l2767:
  2331                           
  2332                           ;main.c: 234:     p4y = min_ret_table[sw4_pos];
  2333     03FC  0869               	movf	_sw4_pos^(0+128),w
  2334     03FD  00AF               	movwf	??_calc_map^(0+128)
  2335     03FE  01B0               	clrf	(??_calc_map^(0+128)+1)
  2336     03FF  35AF               	lslf	??_calc_map^(0+128),f
  2337     0400  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2338     0401  3000               	movlw	low _min_ret_table
  2339     0402  072F               	addwf	??_calc_map^(0+128),w
  2340     0403  0084               	movwf	4
  2341     0404  3010               	movlw	high _min_ret_table
  2342     0405  3D30               	addwfc	(??_calc_map+1)^(0+128),w
  2343     0406  3880               	iorlw	128
  2344     0407  0085               	movwf	5
  2345     0408  3F00               	moviw [0]fsr0
  2346     0409  00C9               	movwf	calc_map@p4y^(0+128)
  2347     040A  3F01               	moviw [1]fsr0
  2348     040B  00CA               	movwf	(calc_map@p4y+1)^(0+128)
  2349     040C                     l2769:
  2350                           
  2351                           ;main.c: 235:     coeff_p1_p2 = (uint8_t) ((p2y - p1y) / (p2x - p1x));
  2352     040C  084B               	movf	calc_map@p1x^(0+128),w
  2353     040D  024C               	subwf	calc_map@p2x^(0+128),w
  2354     040E  00A0               	movwf	___lwdiv@divisor^(0+128)
  2355     040F  01A1               	clrf	(___lwdiv@divisor^(0+128)+1)
  2356     0410  1C03               	skipc
  2357     0411  03A1               	decf	(___lwdiv@divisor+1)^(0+128),f
  2358     0412  0845               	movf	calc_map@p2y^(0+128),w
  2359     0413  3E0C               	addlw	12
  2360     0414  00A2               	movwf	___lwdiv@dividend^(0+128)
  2361     0415  30FE               	movlw	254
  2362     0416  3D46               	addwfc	(calc_map@p2y+1)^(0+128),w
  2363     0417  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2364     0418  3187  27B0  3183   	fcall	___lwdiv
  2365     041B  0141               	movlb	1	; select bank1
  2366     041C  0820               	movf	?___lwdiv^(0+128),w
  2367     041D  00C1               	movwf	calc_map@coeff_p1_p2^(0+128)
  2368     041E                     l2771:
  2369                           
  2370                           ;main.c: 236:     coeff_p3_p4 = (uint8_t) ((p3y - p4y) / (p4x - p3x));
  2371     041E  3019               	movlw	25
  2372     041F  00A0               	movwf	___lwdiv@divisor^(0+128)
  2373     0420  3000               	movlw	0
  2374     0421  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  2375     0422  0849               	movf	calc_map@p4y^(0+128),w
  2376     0423  0247               	subwf	calc_map@p3y^(0+128),w
  2377     0424  00A2               	movwf	___lwdiv@dividend^(0+128)
  2378     0425  084A               	movf	(calc_map@p4y+1)^(0+128),w
  2379     0426  3B48               	subwfb	(calc_map@p3y+1)^(0+128),w
  2380     0427  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2381     0428  3187  27B0  3183   	fcall	___lwdiv
  2382     042B  0141               	movlb	1	; select bank1
  2383     042C  0820               	movf	?___lwdiv^(0+128),w
  2384     042D  00C2               	movwf	calc_map@coeff_p3_p4^(0+128)
  2385     042E                     l2773:
  2386                           
  2387                           ;main.c: 239:     for (a = 15; a <= p1x; a++) {
  2388     042E  300F               	movlw	15
  2389     042F  00CF               	movwf	calc_map@a^(0+128)
  2390     0430  2C48               	goto	l2779
  2391     0431                     l2775:
  2392                           
  2393                           ;main.c: 240:         IG_table[a] = p1y;
  2394     0431  084F               	movf	calc_map@a^(0+128),w
  2395     0432  00AF               	movwf	??_calc_map^(0+128)
  2396     0433  01B0               	clrf	(??_calc_map^(0+128)+1)
  2397     0434  35AF               	lslf	??_calc_map^(0+128),f
  2398     0435  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2399     0436  3067               	movlw	103
  2400     0437  00B1               	movwf	(??_calc_map+2)^(0+128)
  2401     0438  3022               	movlw	34
  2402     0439  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2403     043A  082F               	movf	??_calc_map^(0+128),w
  2404     043B  0731               	addwf	(??_calc_map+2)^(0+128),w
  2405     043C  0086               	movwf	6
  2406     043D  0830               	movf	(??_calc_map+1)^(0+128),w
  2407     043E  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2408     043F  0087               	movwf	7
  2409     0440  0843               	movf	calc_map@p1y^(0+128),w
  2410     0441  3FC0               	movwi [0]fsr1
  2411     0442  0844               	movf	(calc_map@p1y+1)^(0+128),w
  2412     0443  3FC1               	movwi [1]fsr1
  2413     0444                     l2777:
  2414                           
  2415                           ;main.c: 241:     }
  2416     0444  3001               	movlw	1
  2417     0445  00AF               	movwf	??_calc_map^(0+128)
  2418     0446  082F               	movf	??_calc_map^(0+128),w
  2419     0447  07CF               	addwf	calc_map@a^(0+128),f
  2420     0448                     l2779:
  2421     0448  084F               	movf	calc_map@a^(0+128),w
  2422     0449  024B               	subwf	calc_map@p1x^(0+128),w
  2423     044A  1803               	skipnc
  2424     044B  2C4D               	goto	u2521
  2425     044C  2C4E               	goto	u2520
  2426     044D                     u2521:
  2427     044D  2C31               	goto	l2775
  2428     044E                     u2520:
  2429     044E                     l2781:
  2430                           
  2431                           ;main.c: 242:     for (a = p1x + 1; a <= p2x; a++) {
  2432     044E  084B               	movf	calc_map@p1x^(0+128),w
  2433     044F  3E01               	addlw	1
  2434     0450  00CF               	movwf	calc_map@a^(0+128)
  2435     0451  2C83               	goto	l2787
  2436     0452                     l2783:
  2437                           
  2438                           ;main.c: 243:         IG_table[a] = coeff_p1_p2 + IG_table[a - 1];
  2439     0452  084F               	movf	calc_map@a^(0+128),w
  2440     0453  00AF               	movwf	??_calc_map^(0+128)
  2441     0454  01B0               	clrf	(??_calc_map^(0+128)+1)
  2442     0455  35AF               	lslf	??_calc_map^(0+128),f
  2443     0456  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2444     0457  3065               	movlw	101
  2445     0458  00B1               	movwf	(??_calc_map+2)^(0+128)
  2446     0459  3022               	movlw	34
  2447     045A  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2448     045B  082F               	movf	??_calc_map^(0+128),w
  2449     045C  0731               	addwf	(??_calc_map+2)^(0+128),w
  2450     045D  0086               	movwf	6
  2451     045E  0830               	movf	(??_calc_map+1)^(0+128),w
  2452     045F  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2453     0460  0087               	movwf	7
  2454     0461  3F40               	moviw [0]fsr1
  2455     0462  00B3               	movwf	(??_calc_map+4)^(0+128)
  2456     0463  3F41               	moviw [1]fsr1
  2457     0464  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2458     0465  0841               	movf	calc_map@coeff_p1_p2^(0+128),w
  2459     0466  0733               	addwf	(??_calc_map+4)^(0+128),w
  2460     0467  00B5               	movwf	(??_calc_map+6)^(0+128)
  2461     0468  0834               	movf	(??_calc_map+5)^(0+128),w
  2462     0469  1803               	skipnc
  2463     046A  0A34               	incf	(??_calc_map+5)^(0+128),w
  2464     046B  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2465     046C  084F               	movf	calc_map@a^(0+128),w
  2466     046D  00B7               	movwf	(??_calc_map+8)^(0+128)
  2467     046E  01B8               	clrf	((??_calc_map+8)^(0+128)+1)
  2468     046F  35B7               	lslf	(??_calc_map+8)^(0+128),f
  2469     0470  0DB8               	rlf	((??_calc_map+8)^(0+128)+1),f
  2470     0471  3067               	movlw	103
  2471     0472  00B9               	movwf	(??_calc_map+10)^(0+128)
  2472     0473  3022               	movlw	34
  2473     0474  00BA               	movwf	((??_calc_map+10)^(0+128)+1)
  2474     0475  0837               	movf	(??_calc_map+8)^(0+128),w
  2475     0476  0739               	addwf	(??_calc_map+10)^(0+128),w
  2476     0477  0086               	movwf	6
  2477     0478  0838               	movf	(??_calc_map+9)^(0+128),w
  2478     0479  3D3A               	addwfc	(??_calc_map+11)^(0+128),w
  2479     047A  0087               	movwf	7
  2480     047B  0835               	movf	(??_calc_map+6)^(0+128),w
  2481     047C  3FC0               	movwi [0]fsr1
  2482     047D  0836               	movf	((??_calc_map+6)^(0+128)+1),w
  2483     047E  3FC1               	movwi [1]fsr1
  2484     047F                     l2785:
  2485                           
  2486                           ;main.c: 244:     }
  2487     047F  3001               	movlw	1
  2488     0480  00AF               	movwf	??_calc_map^(0+128)
  2489     0481  082F               	movf	??_calc_map^(0+128),w
  2490     0482  07CF               	addwf	calc_map@a^(0+128),f
  2491     0483                     l2787:
  2492     0483  084F               	movf	calc_map@a^(0+128),w
  2493     0484  024C               	subwf	calc_map@p2x^(0+128),w
  2494     0485  1803               	skipnc
  2495     0486  2C88               	goto	u2531
  2496     0487  2C89               	goto	u2530
  2497     0488                     u2531:
  2498     0488  2C52               	goto	l2783
  2499     0489                     u2530:
  2500     0489                     l2789:
  2501                           
  2502                           ;main.c: 245:     for (a = p2x + 1; a <= p3x; a++) {
  2503     0489  084C               	movf	calc_map@p2x^(0+128),w
  2504     048A  3E01               	addlw	1
  2505     048B  00CF               	movwf	calc_map@a^(0+128)
  2506     048C  2CA4               	goto	l2795
  2507     048D                     l2791:
  2508                           
  2509                           ;main.c: 246:         IG_table[a] = p3y;
  2510     048D  084F               	movf	calc_map@a^(0+128),w
  2511     048E  00AF               	movwf	??_calc_map^(0+128)
  2512     048F  01B0               	clrf	(??_calc_map^(0+128)+1)
  2513     0490  35AF               	lslf	??_calc_map^(0+128),f
  2514     0491  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2515     0492  3067               	movlw	103
  2516     0493  00B1               	movwf	(??_calc_map+2)^(0+128)
  2517     0494  3022               	movlw	34
  2518     0495  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2519     0496  082F               	movf	??_calc_map^(0+128),w
  2520     0497  0731               	addwf	(??_calc_map+2)^(0+128),w
  2521     0498  0086               	movwf	6
  2522     0499  0830               	movf	(??_calc_map+1)^(0+128),w
  2523     049A  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2524     049B  0087               	movwf	7
  2525     049C  0847               	movf	calc_map@p3y^(0+128),w
  2526     049D  3FC0               	movwi [0]fsr1
  2527     049E  0848               	movf	(calc_map@p3y+1)^(0+128),w
  2528     049F  3FC1               	movwi [1]fsr1
  2529     04A0                     l2793:
  2530                           
  2531                           ;main.c: 247:     }
  2532     04A0  3001               	movlw	1
  2533     04A1  00AF               	movwf	??_calc_map^(0+128)
  2534     04A2  082F               	movf	??_calc_map^(0+128),w
  2535     04A3  07CF               	addwf	calc_map@a^(0+128),f
  2536     04A4                     l2795:
  2537     04A4  084F               	movf	calc_map@a^(0+128),w
  2538     04A5  024D               	subwf	calc_map@p3x^(0+128),w
  2539     04A6  1803               	skipnc
  2540     04A7  2CA9               	goto	u2541
  2541     04A8  2CAA               	goto	u2540
  2542     04A9                     u2541:
  2543     04A9  2C8D               	goto	l2791
  2544     04AA                     u2540:
  2545     04AA                     l2797:
  2546                           
  2547                           ;main.c: 248:     for (a = p3x + 1; a <= p4x; a++) {
  2548     04AA  084D               	movf	calc_map@p3x^(0+128),w
  2549     04AB  3E01               	addlw	1
  2550     04AC  00CF               	movwf	calc_map@a^(0+128)
  2551     04AD  2CDF               	goto	l2803
  2552     04AE                     l2799:
  2553                           
  2554                           ;main.c: 249:         IG_table[a] = IG_table[a - 1] - coeff_p3_p4;
  2555     04AE  084F               	movf	calc_map@a^(0+128),w
  2556     04AF  00AF               	movwf	??_calc_map^(0+128)
  2557     04B0  01B0               	clrf	(??_calc_map^(0+128)+1)
  2558     04B1  35AF               	lslf	??_calc_map^(0+128),f
  2559     04B2  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2560     04B3  3065               	movlw	101
  2561     04B4  00B1               	movwf	(??_calc_map+2)^(0+128)
  2562     04B5  3022               	movlw	34
  2563     04B6  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2564     04B7  082F               	movf	??_calc_map^(0+128),w
  2565     04B8  0731               	addwf	(??_calc_map+2)^(0+128),w
  2566     04B9  0086               	movwf	6
  2567     04BA  0830               	movf	(??_calc_map+1)^(0+128),w
  2568     04BB  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2569     04BC  0087               	movwf	7
  2570     04BD  3F40               	moviw [0]fsr1
  2571     04BE  00B3               	movwf	(??_calc_map+4)^(0+128)
  2572     04BF  3F41               	moviw [1]fsr1
  2573     04C0  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2574     04C1  0834               	movf	(??_calc_map+5)^(0+128),w
  2575     04C2  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2576     04C3  0842               	movf	calc_map@coeff_p3_p4^(0+128),w
  2577     04C4  0233               	subwf	(??_calc_map+4)^(0+128),w
  2578     04C5  00B5               	movwf	(??_calc_map+6)^(0+128)
  2579     04C6  1C03               	skipc
  2580     04C7  03B6               	decf	((??_calc_map+6)^(0+128)+1),f
  2581     04C8  084F               	movf	calc_map@a^(0+128),w
  2582     04C9  00B7               	movwf	(??_calc_map+8)^(0+128)
  2583     04CA  01B8               	clrf	((??_calc_map+8)^(0+128)+1)
  2584     04CB  35B7               	lslf	(??_calc_map+8)^(0+128),f
  2585     04CC  0DB8               	rlf	((??_calc_map+8)^(0+128)+1),f
  2586     04CD  3067               	movlw	103
  2587     04CE  00B9               	movwf	(??_calc_map+10)^(0+128)
  2588     04CF  3022               	movlw	34
  2589     04D0  00BA               	movwf	((??_calc_map+10)^(0+128)+1)
  2590     04D1  0837               	movf	(??_calc_map+8)^(0+128),w
  2591     04D2  0739               	addwf	(??_calc_map+10)^(0+128),w
  2592     04D3  0086               	movwf	6
  2593     04D4  0838               	movf	(??_calc_map+9)^(0+128),w
  2594     04D5  3D3A               	addwfc	(??_calc_map+11)^(0+128),w
  2595     04D6  0087               	movwf	7
  2596     04D7  0835               	movf	(??_calc_map+6)^(0+128),w
  2597     04D8  3FC0               	movwi [0]fsr1
  2598     04D9  0836               	movf	((??_calc_map+6)^(0+128)+1),w
  2599     04DA  3FC1               	movwi [1]fsr1
  2600     04DB                     l2801:
  2601                           
  2602                           ;main.c: 250:     }
  2603     04DB  3001               	movlw	1
  2604     04DC  00AF               	movwf	??_calc_map^(0+128)
  2605     04DD  082F               	movf	??_calc_map^(0+128),w
  2606     04DE  07CF               	addwf	calc_map@a^(0+128),f
  2607     04DF                     l2803:
  2608     04DF  084F               	movf	calc_map@a^(0+128),w
  2609     04E0  024E               	subwf	calc_map@p4x^(0+128),w
  2610     04E1  1803               	skipnc
  2611     04E2  2CE4               	goto	u2551
  2612     04E3  2CE5               	goto	u2550
  2613     04E4                     u2551:
  2614     04E4  2CAE               	goto	l2799
  2615     04E5                     u2550:
  2616     04E5                     l2805:
  2617                           
  2618                           ;main.c: 251:     for (a = p4x + 1; a <= 130; a++) {
  2619     04E5  084E               	movf	calc_map@p4x^(0+128),w
  2620     04E6  3E01               	addlw	1
  2621     04E7  00CF               	movwf	calc_map@a^(0+128)
  2622     04E8                     l2807:
  2623     04E8  3083               	movlw	131
  2624     04E9  024F               	subwf	calc_map@a^(0+128),w
  2625     04EA  1C03               	skipc
  2626     04EB  2CED               	goto	u2561
  2627     04EC  2CEE               	goto	u2560
  2628     04ED                     u2561:
  2629     04ED  2CEF               	goto	l2811
  2630     04EE                     u2560:
  2631     04EE  2D07               	goto	l2817
  2632     04EF                     l2811:
  2633                           
  2634                           ;main.c: 252:         IG_table[a] = p4y;
  2635     04EF  084F               	movf	calc_map@a^(0+128),w
  2636     04F0  00AF               	movwf	??_calc_map^(0+128)
  2637     04F1  01B0               	clrf	(??_calc_map^(0+128)+1)
  2638     04F2  35AF               	lslf	??_calc_map^(0+128),f
  2639     04F3  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2640     04F4  3067               	movlw	103
  2641     04F5  00B1               	movwf	(??_calc_map+2)^(0+128)
  2642     04F6  3022               	movlw	34
  2643     04F7  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2644     04F8  082F               	movf	??_calc_map^(0+128),w
  2645     04F9  0731               	addwf	(??_calc_map+2)^(0+128),w
  2646     04FA  0086               	movwf	6
  2647     04FB  0830               	movf	(??_calc_map+1)^(0+128),w
  2648     04FC  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2649     04FD  0087               	movwf	7
  2650     04FE  0849               	movf	calc_map@p4y^(0+128),w
  2651     04FF  3FC0               	movwi [0]fsr1
  2652     0500  084A               	movf	(calc_map@p4y+1)^(0+128),w
  2653     0501  3FC1               	movwi [1]fsr1
  2654     0502                     l2813:
  2655                           
  2656                           ;main.c: 253:     }
  2657     0502  3001               	movlw	1
  2658     0503  00AF               	movwf	??_calc_map^(0+128)
  2659     0504  082F               	movf	??_calc_map^(0+128),w
  2660     0505  07CF               	addwf	calc_map@a^(0+128),f
  2661     0506  2CE8               	goto	l2807
  2662     0507                     l2817:
  2663                           
  2664                           ;main.c: 255:     for (a = 15; a <= 130; a++) {
  2665     0507  300F               	movlw	15
  2666     0508  00CF               	movwf	calc_map@a^(0+128)
  2667     0509                     l2821:
  2668                           
  2669                           ;main.c: 256:         deg_table[a] = (uint8_t) (IG_table[a] / 100);
  2670     0509  3064               	movlw	100
  2671     050A  00A0               	movwf	___lwdiv@divisor^(0+128)
  2672     050B  3000               	movlw	0
  2673     050C  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  2674     050D  084F               	movf	calc_map@a^(0+128),w
  2675     050E  00AF               	movwf	??_calc_map^(0+128)
  2676     050F  01B0               	clrf	(??_calc_map^(0+128)+1)
  2677     0510  35AF               	lslf	??_calc_map^(0+128),f
  2678     0511  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2679     0512  3067               	movlw	103
  2680     0513  00B1               	movwf	(??_calc_map+2)^(0+128)
  2681     0514  3022               	movlw	34
  2682     0515  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2683     0516  082F               	movf	??_calc_map^(0+128),w
  2684     0517  0731               	addwf	(??_calc_map+2)^(0+128),w
  2685     0518  0086               	movwf	6
  2686     0519  0830               	movf	(??_calc_map+1)^(0+128),w
  2687     051A  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2688     051B  0087               	movwf	7
  2689     051C  3F40               	moviw [0]fsr1
  2690     051D  00A2               	movwf	___lwdiv@dividend^(0+128)
  2691     051E  3F41               	moviw [1]fsr1
  2692     051F  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2693     0520  3187  27B0  3183   	fcall	___lwdiv
  2694     0523  0141               	movlb	1	; select bank1
  2695     0524  0820               	movf	?___lwdiv^(0+128),w
  2696     0525  00B3               	movwf	(??_calc_map+4)^(0+128)
  2697     0526  084F               	movf	calc_map@a^(0+128),w
  2698     0527  3E6D               	addlw	109
  2699     0528  00B4               	movwf	(??_calc_map+5)^(0+128)
  2700     0529  01B5               	clrf	((??_calc_map+5)^(0+128)+1)
  2701     052A  3023               	movlw	35
  2702     052B  3DB5               	addwfc	((??_calc_map+5)^(0+128)+1),f
  2703     052C  0834               	movf	(??_calc_map+5)^(0+128),w
  2704     052D  0086               	movwf	6
  2705     052E  0835               	movf	(??_calc_map+6)^(0+128),w
  2706     052F  0087               	movwf	7
  2707     0530  0833               	movf	(??_calc_map+4)^(0+128),w
  2708     0531  0081               	movwf	1
  2709     0532                     l2823:
  2710                           
  2711                           ;main.c: 257:     }
  2712     0532  3001               	movlw	1
  2713     0533  00AF               	movwf	??_calc_map^(0+128)
  2714     0534  082F               	movf	??_calc_map^(0+128),w
  2715     0535  07CF               	addwf	calc_map@a^(0+128),f
  2716     0536                     l2825:
  2717     0536  3083               	movlw	131
  2718     0537  024F               	subwf	calc_map@a^(0+128),w
  2719     0538  1C03               	skipc
  2720     0539  2D3B               	goto	u2571
  2721     053A  2D3C               	goto	u2570
  2722     053B                     u2571:
  2723     053B  2D09               	goto	l2821
  2724     053C                     u2570:
  2725     053C                     l2827:
  2726                           
  2727                           ;main.c: 259:     for (a = 15; a <= 130; a++) {
  2728     053C  300F               	movlw	15
  2729     053D  00CF               	movwf	calc_map@a^(0+128)
  2730     053E                     l2831:
  2731                           
  2732                           ;main.c: 260:         temp1 = (((3500) - IG_table[a]) >> 1);
  2733     053E  084F               	movf	calc_map@a^(0+128),w
  2734     053F  00AF               	movwf	??_calc_map^(0+128)
  2735     0540  01B0               	clrf	(??_calc_map^(0+128)+1)
  2736     0541  35AF               	lslf	??_calc_map^(0+128),f
  2737     0542  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2738     0543  3067               	movlw	103
  2739     0544  00B1               	movwf	(??_calc_map+2)^(0+128)
  2740     0545  3022               	movlw	34
  2741     0546  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2742     0547  082F               	movf	??_calc_map^(0+128),w
  2743     0548  0731               	addwf	(??_calc_map+2)^(0+128),w
  2744     0549  0086               	movwf	6
  2745     054A  0830               	movf	(??_calc_map+1)^(0+128),w
  2746     054B  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2747     054C  0087               	movwf	7
  2748     054D  30AC               	movlw	172
  2749     054E  00B3               	movwf	(??_calc_map+4)^(0+128)
  2750     054F  300D               	movlw	13
  2751     0550  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2752     0551  3F40               	moviw [0]fsr1
  2753     0552  0233               	subwf	(??_calc_map+4)^(0+128),w
  2754     0553  00B5               	movwf	(??_calc_map+6)^(0+128)
  2755     0554  3F41               	moviw [1]fsr1
  2756     0555  3B34               	subwfb	(??_calc_map+5)^(0+128),w
  2757     0556  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2758     0557  36B6               	lsrf	((??_calc_map+6)^(0+128)+1),f
  2759     0558  0CB5               	rrf	(??_calc_map+6)^(0+128),f
  2760     0559  0835               	movf	(??_calc_map+6)^(0+128),w
  2761     055A  00BE               	movwf	calc_map@temp1^(0+128)
  2762     055B  0836               	movf	(??_calc_map+7)^(0+128),w
  2763     055C  00BF               	movwf	(calc_map@temp1+1)^(0+128)
  2764     055D  01C0               	clrf	(calc_map@temp1+2)^(0+128)
  2765     055E                     l2833:
  2766                           
  2767                           ;main.c: 261:         temp = ((deg2time_coeff[a] * temp1) >> 10);
  2768     055E  084F               	movf	calc_map@a^(0+128),w
  2769     055F  00AF               	movwf	??_calc_map^(0+128)
  2770     0560  01B0               	clrf	(??_calc_map^(0+128)+1)
  2771     0561  082F               	movf	??_calc_map^(0+128),w
  2772     0562  00A0               	movwf	___wmul@multiplier^(0+128)
  2773     0563  0830               	movf	(??_calc_map+1)^(0+128),w
  2774     0564  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  2775     0565  3003               	movlw	3
  2776     0566  00A2               	movwf	___wmul@multiplicand^(0+128)
  2777     0567  3000               	movlw	0
  2778     0568  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  2779     0569  318C  2495  3183   	fcall	___wmul
  2780     056C  30DE               	movlw	222
  2781     056D  0141               	movlb	1	; select bank1
  2782     056E  00B1               	movwf	(??_calc_map+2)^(0+128)
  2783     056F  3020               	movlw	32
  2784     0570  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2785     0571  0820               	movf	?___wmul^(0+128),w
  2786     0572  0731               	addwf	(??_calc_map+2)^(0+128),w
  2787     0573  0086               	movwf	6
  2788     0574  0821               	movf	(?___wmul+1)^(0+128),w
  2789     0575  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2790     0576  0087               	movwf	7
  2791     0577  3F40               	moviw [0]fsr1
  2792     0578  00A6               	movwf	___tmul@multiplier^(0+128)
  2793     0579  3F41               	moviw [1]fsr1
  2794     057A  00A7               	movwf	(___tmul@multiplier+1)^(0+128)
  2795     057B  3F42               	moviw [2]fsr1
  2796     057C  00A8               	movwf	(___tmul@multiplier+2)^(0+128)
  2797     057D  083E               	movf	calc_map@temp1^(0+128),w
  2798     057E  00A9               	movwf	___tmul@multiplicand^(0+128)
  2799     057F  083F               	movf	(calc_map@temp1+1)^(0+128),w
  2800     0580  00AA               	movwf	(___tmul@multiplicand+1)^(0+128)
  2801     0581  0840               	movf	(calc_map@temp1+2)^(0+128),w
  2802     0582  00AB               	movwf	(___tmul@multiplicand+2)^(0+128)
  2803     0583  318C  24B5  3183   	fcall	___tmul
  2804     0586  0141               	movlb	1	; select bank1
  2805     0587  0826               	movf	?___tmul^(0+128),w
  2806     0588  00B3               	movwf	(??_calc_map+4)^(0+128)
  2807     0589  0827               	movf	(?___tmul+1)^(0+128),w
  2808     058A  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2809     058B  0828               	movf	(?___tmul+2)^(0+128),w
  2810     058C  00B5               	movwf	((??_calc_map+4)^(0+128)+2)
  2811     058D  300A               	movlw	10
  2812     058E                     u2585:
  2813     058E  36B5               	lsrf	((??_calc_map+4)^(0+128)+2),f
  2814     058F  0CB4               	rrf	((??_calc_map+4)^(0+128)+1),f
  2815     0590  0CB3               	rrf	(??_calc_map+4)^(0+128),f
  2816     0591                     u2580:
  2817     0591  0B89               	decfsz	9,f
  2818     0592  2D8E               	goto	u2585
  2819     0593  0833               	movf	(??_calc_map+4)^(0+128),w
  2820     0594  00BB               	movwf	calc_map@temp^(0+128)
  2821     0595  0834               	movf	(??_calc_map+5)^(0+128),w
  2822     0596  00BC               	movwf	(calc_map@temp+1)^(0+128)
  2823     0597  0835               	movf	(??_calc_map+6)^(0+128),w
  2824     0598  00BD               	movwf	(calc_map@temp+2)^(0+128)
  2825     0599                     l2835:
  2826                           
  2827                           ;main.c: 262:         IG_table[a] = temp;
  2828     0599  084F               	movf	calc_map@a^(0+128),w
  2829     059A  00AF               	movwf	??_calc_map^(0+128)
  2830     059B  01B0               	clrf	(??_calc_map^(0+128)+1)
  2831     059C  35AF               	lslf	??_calc_map^(0+128),f
  2832     059D  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2833     059E  3067               	movlw	103
  2834     059F  00B1               	movwf	(??_calc_map+2)^(0+128)
  2835     05A0  3022               	movlw	34
  2836     05A1  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2837     05A2  082F               	movf	??_calc_map^(0+128),w
  2838     05A3  0731               	addwf	(??_calc_map+2)^(0+128),w
  2839     05A4  0086               	movwf	6
  2840     05A5  0830               	movf	(??_calc_map+1)^(0+128),w
  2841     05A6  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2842     05A7  0087               	movwf	7
  2843     05A8  083B               	movf	calc_map@temp^(0+128),w
  2844     05A9  3FC0               	movwi [0]fsr1
  2845     05AA  083C               	movf	(calc_map@temp+1)^(0+128),w
  2846     05AB  3FC1               	movwi [1]fsr1
  2847     05AC                     l2837:
  2848                           
  2849                           ;main.c: 263:     }
  2850     05AC  3001               	movlw	1
  2851     05AD  00AF               	movwf	??_calc_map^(0+128)
  2852     05AE  082F               	movf	??_calc_map^(0+128),w
  2853     05AF  07CF               	addwf	calc_map@a^(0+128),f
  2854     05B0                     l2839:
  2855     05B0  3083               	movlw	131
  2856     05B1  024F               	subwf	calc_map@a^(0+128),w
  2857     05B2  1C03               	skipc
  2858     05B3  2DB5               	goto	u2591
  2859     05B4  2DB6               	goto	u2590
  2860     05B5                     u2591:
  2861     05B5  2D3E               	goto	l2831
  2862     05B6                     u2590:
  2863     05B6                     l248:
  2864     05B6  0008               	return
  2865     05B7                     __end_of_calc_map:
  2866                           
  2867                           	psect	text6
  2868     0C95                     __ptext6:	
  2869 ;; *************** function ___wmul *****************
  2870 ;; Defined at:
  2871 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2874 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  product         2    4[BANK1 ] unsigned int 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  2    0[BANK1 ] unsigned int 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2886 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2889 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2890 ;;Total ram usage:        6 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 3
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_calc_map
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900     0C95                     ___wmul:	
  2901                           ;psect for function ___wmul
  2902                           
  2903     0C95                     l2635:	
  2904                           ;incstack = 0
  2905                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2906                           
  2907     0C95  0141               	movlb	1	; select bank1
  2908     0C96  01A4               	clrf	___wmul@product^(0+128)
  2909     0C97  01A5               	clrf	(___wmul@product+1)^(0+128)
  2910     0C98                     l2637:
  2911     0C98  1C20               	btfss	___wmul@multiplier^(0+128),0
  2912     0C99  2C9B               	goto	u2441
  2913     0C9A  2C9C               	goto	u2440
  2914     0C9B                     u2441:
  2915     0C9B  2CA0               	goto	l382
  2916     0C9C                     u2440:
  2917     0C9C                     l2639:
  2918     0C9C  0822               	movf	___wmul@multiplicand^(0+128),w
  2919     0C9D  07A4               	addwf	___wmul@product^(0+128),f
  2920     0C9E  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  2921     0C9F  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  2922     0CA0                     l382:
  2923     0CA0  3001               	movlw	1
  2924     0CA1                     u2455:
  2925     0CA1  35A2               	lslf	___wmul@multiplicand^(0+128),f
  2926     0CA2  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2927     0CA3  0B89               	decfsz	9,f
  2928     0CA4  2CA1               	goto	u2455
  2929     0CA5                     l2641:
  2930     0CA5  3001               	movlw	1
  2931     0CA6                     u2465:
  2932     0CA6  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  2933     0CA7  0CA0               	rrf	___wmul@multiplier^(0+128),f
  2934     0CA8  0B89               	decfsz	9,f
  2935     0CA9  2CA6               	goto	u2465
  2936     0CAA                     l2643:
  2937     0CAA  0820               	movf	___wmul@multiplier^(0+128),w
  2938     0CAB  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  2939     0CAC  1D03               	btfss	3,2
  2940     0CAD  2CAF               	goto	u2471
  2941     0CAE  2CB0               	goto	u2470
  2942     0CAF                     u2471:
  2943     0CAF  2C98               	goto	l2637
  2944     0CB0                     u2470:
  2945     0CB0                     l2645:
  2946     0CB0  0825               	movf	(___wmul@product+1)^(0+128),w
  2947     0CB1  00A1               	movwf	(?___wmul+1)^(0+128)
  2948     0CB2  0824               	movf	___wmul@product^(0+128),w
  2949     0CB3  00A0               	movwf	?___wmul^(0+128)
  2950     0CB4                     l384:
  2951     0CB4  0008               	return
  2952     0CB5                     __end_of___wmul:
  2953                           
  2954                           	psect	text7
  2955     0CB5                     __ptext7:	
  2956 ;; *************** function ___tmul *****************
  2957 ;; Defined at:
  2958 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul24.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  multiplier      3    6[BANK1 ] unsigned um
  2961 ;;  multiplicand    3    9[BANK1 ] unsigned um
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  product         3   12[BANK1 ] unsigned um
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  3    6[BANK1 ] unsigned um
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2973 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2974 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;Total ram usage:        9 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 3
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_calc_map
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987     0CB5                     ___tmul:	
  2988                           ;psect for function ___tmul
  2989                           
  2990     0CB5                     l2649:	
  2991                           ;incstack = 0
  2992                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  2993                           
  2994     0CB5  3000               	movlw	0
  2995     0CB6  0141               	movlb	1	; select bank1
  2996     0CB7  00AC               	movwf	___tmul@product^(0+128)
  2997     0CB8  3000               	movlw	0
  2998     0CB9  00AD               	movwf	(___tmul@product+1)^(0+128)
  2999     0CBA  3000               	movlw	0
  3000     0CBB  00AE               	movwf	(___tmul@product+2)^(0+128)
  3001     0CBC                     l2651:
  3002     0CBC  1C26               	btfss	___tmul@multiplier^(0+128),0
  3003     0CBD  2CBF               	goto	u2481
  3004     0CBE  2CC0               	goto	u2480
  3005     0CBF                     u2481:
  3006     0CBF  2CC6               	goto	l2655
  3007     0CC0                     u2480:
  3008     0CC0                     l2653:
  3009     0CC0  0829               	movf	___tmul@multiplicand^(0+128),w
  3010     0CC1  07AC               	addwf	___tmul@product^(0+128),f
  3011     0CC2  082A               	movf	(___tmul@multiplicand+1)^(0+128),w
  3012     0CC3  3DAD               	addwfc	(___tmul@product+1)^(0+128),f
  3013     0CC4  082B               	movf	(___tmul@multiplicand+2)^(0+128),w
  3014     0CC5  3DAE               	addwfc	(___tmul@product+2)^(0+128),f
  3015     0CC6                     l2655:
  3016     0CC6  3001               	movlw	1
  3017     0CC7                     u2495:
  3018     0CC7  35A9               	lslf	___tmul@multiplicand^(0+128),f
  3019     0CC8  0DAA               	rlf	(___tmul@multiplicand+1)^(0+128),f
  3020     0CC9  0DAB               	rlf	(___tmul@multiplicand+2)^(0+128),f
  3021     0CCA  0B89               	decfsz	9,f
  3022     0CCB  2CC7               	goto	u2495
  3023     0CCC                     l2657:
  3024     0CCC  3001               	movlw	1
  3025     0CCD                     u2505:
  3026     0CCD  36A8               	lsrf	(___tmul@multiplier+2)^(0+128),f
  3027     0CCE  0CA7               	rrf	(___tmul@multiplier+1)^(0+128),f
  3028     0CCF  0CA6               	rrf	___tmul@multiplier^(0+128),f
  3029     0CD0  0B89               	decfsz	9,f
  3030     0CD1  2CCD               	goto	u2505
  3031     0CD2  0828               	movf	(___tmul@multiplier+2)^(0+128),w
  3032     0CD3  0427               	iorwf	(___tmul@multiplier+1)^(0+128),w
  3033     0CD4  0426               	iorwf	___tmul@multiplier^(0+128),w
  3034     0CD5  1D03               	skipz
  3035     0CD6  2CD8               	goto	u2511
  3036     0CD7  2CD9               	goto	u2510
  3037     0CD8                     u2511:
  3038     0CD8  2CBC               	goto	l2651
  3039     0CD9                     u2510:
  3040     0CD9                     l2659:
  3041     0CD9  082C               	movf	___tmul@product^(0+128),w
  3042     0CDA  00A6               	movwf	?___tmul^(0+128)
  3043     0CDB  082D               	movf	(___tmul@product+1)^(0+128),w
  3044     0CDC  00A7               	movwf	(?___tmul+1)^(0+128)
  3045     0CDD  082E               	movf	(___tmul@product+2)^(0+128),w
  3046     0CDE  00A8               	movwf	(?___tmul+2)^(0+128)
  3047     0CDF                     l390:
  3048     0CDF  0008               	return
  3049     0CE0                     __end_of___tmul:
  3050                           
  3051                           	psect	text8
  3052     07B0                     __ptext8:	
  3053 ;; *************** function ___lwdiv *****************
  3054 ;; Defined at:
  3055 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  divisor         2    0[BANK1 ] unsigned int 
  3058 ;;  dividend        2    2[BANK1 ] unsigned int 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  quotient        2    5[BANK1 ] unsigned int 
  3061 ;;  counter         1    7[BANK1 ] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  2    0[BANK1 ] unsigned int 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3071 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3072 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3073 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3074 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;Total ram usage:        8 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; Hardware stack levels required when called: 3
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_calc_map
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085     07B0                     ___lwdiv:	
  3086                           ;psect for function ___lwdiv
  3087                           
  3088     07B0                     l1951:	
  3089                           ;incstack = 0
  3090                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3091                           
  3092     07B0  0141               	movlb	1	; select bank1
  3093     07B1  01A5               	clrf	___lwdiv@quotient^(0+128)
  3094     07B2  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  3095     07B3                     l1953:
  3096     07B3  0820               	movf	___lwdiv@divisor^(0+128),w
  3097     07B4  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3098     07B5  1903               	btfsc	3,2
  3099     07B6  2FB8               	goto	u1591
  3100     07B7  2FB9               	goto	u1590
  3101     07B8                     u1591:
  3102     07B8  2FE8               	goto	l1973
  3103     07B9                     u1590:
  3104     07B9                     l1955:
  3105     07B9  01A7               	clrf	___lwdiv@counter^(0+128)
  3106     07BA  0AA7               	incf	___lwdiv@counter^(0+128),f
  3107     07BB  2FC5               	goto	l1961
  3108     07BC                     l1957:
  3109     07BC  3001               	movlw	1
  3110     07BD                     u1605:
  3111     07BD  35A0               	lslf	___lwdiv@divisor^(0+128),f
  3112     07BE  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3113     07BF  0B89               	decfsz	9,f
  3114     07C0  2FBD               	goto	u1605
  3115     07C1                     l1959:
  3116     07C1  3001               	movlw	1
  3117     07C2  00A4               	movwf	??___lwdiv^(0+128)
  3118     07C3  0824               	movf	??___lwdiv^(0+128),w
  3119     07C4  07A7               	addwf	___lwdiv@counter^(0+128),f
  3120     07C5                     l1961:
  3121     07C5  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  3122     07C6  2FC8               	goto	u1611
  3123     07C7  2FC9               	goto	u1610
  3124     07C8                     u1611:
  3125     07C8  2FBC               	goto	l1957
  3126     07C9                     u1610:
  3127     07C9                     l1963:
  3128     07C9  3001               	movlw	1
  3129     07CA                     u1625:
  3130     07CA  35A5               	lslf	___lwdiv@quotient^(0+128),f
  3131     07CB  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3132     07CC  0B89               	decfsz	9,f
  3133     07CD  2FCA               	goto	u1625
  3134     07CE  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3135     07CF  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3136     07D0  1D03               	skipz
  3137     07D1  2FD4               	goto	u1635
  3138     07D2  0820               	movf	___lwdiv@divisor^(0+128),w
  3139     07D3  0222               	subwf	___lwdiv@dividend^(0+128),w
  3140     07D4                     u1635:
  3141     07D4  1C03               	skipc
  3142     07D5  2FD7               	goto	u1631
  3143     07D6  2FD8               	goto	u1630
  3144     07D7                     u1631:
  3145     07D7  2FDD               	goto	l1969
  3146     07D8                     u1630:
  3147     07D8                     l1965:
  3148     07D8  0820               	movf	___lwdiv@divisor^(0+128),w
  3149     07D9  02A2               	subwf	___lwdiv@dividend^(0+128),f
  3150     07DA  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3151     07DB  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  3152     07DC                     l1967:
  3153     07DC  1425               	bsf	___lwdiv@quotient^(0+128),0
  3154     07DD                     l1969:
  3155     07DD  3001               	movlw	1
  3156     07DE                     u1645:
  3157     07DE  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  3158     07DF  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  3159     07E0  0B89               	decfsz	9,f
  3160     07E1  2FDE               	goto	u1645
  3161     07E2                     l1971:
  3162     07E2  3001               	movlw	1
  3163     07E3  02A7               	subwf	___lwdiv@counter^(0+128),f
  3164     07E4  1D03               	btfss	3,2
  3165     07E5  2FE7               	goto	u1651
  3166     07E6  2FE8               	goto	u1650
  3167     07E7                     u1651:
  3168     07E7  2FC9               	goto	l1963
  3169     07E8                     u1650:
  3170     07E8                     l1973:
  3171     07E8  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  3172     07E9  00A1               	movwf	(?___lwdiv+1)^(0+128)
  3173     07EA  0825               	movf	___lwdiv@quotient^(0+128),w
  3174     07EB  00A0               	movwf	?___lwdiv^(0+128)
  3175     07EC                     l662:
  3176     07EC  0008               	return
  3177     07ED                     __end_of___lwdiv:
  3178                           
  3179                           	psect	text9
  3180     0740                     __ptext9:	
  3181 ;; *************** function _Write_table *****************
  3182 ;; Defined at:
  3183 ;;		line 179 in file "main.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  tx_data         8   53[BANK1 ] unsigned char [8]
  3188 ;;  a               1   61[BANK1 ] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;Total ram usage:       11 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 8
  3205 ;; This function calls:
  3206 ;;		_WriteString
  3207 ;;		_sprintf
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213     0740                     _Write_table:	
  3214                           ;psect for function _Write_table
  3215                           
  3216     0740                     l2853:	
  3217                           ;incstack = 0
  3218                           ; Regs used in _Write_table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3219                           
  3220                           
  3221                           ;main.c: 180:     uint8_t tx_data[8], a;;main.c: 182:     tx_buf[0] = rpm;
  3222     0740  0141               	movlb	1	; select bank1
  3223     0741  0866               	movf	_rpm^(0+128),w
  3224     0742  00D3               	movwf	??_Write_table^(0+128)
  3225     0743  01D4               	clrf	(??_Write_table^(0+128)+1)
  3226     0744  0853               	movf	??_Write_table^(0+128),w
  3227     0745  0140               	movlb	0	; select bank0
  3228     0746  00C8               	movwf	_tx_buf
  3229     0747  0141               	movlb	1	; select bank1
  3230     0748  0854               	movf	(??_Write_table+1)^(0+128),w
  3231     0749  0140               	movlb	0	; select bank0
  3232     074A  00C9               	movwf	_tx_buf+1
  3233     074B                     l2855:
  3234                           
  3235                           ;main.c: 183:     tx_buf[1] = deg_table[rpm];
  3236     074B  0141               	movlb	1	; select bank1
  3237     074C  0866               	movf	_rpm^(0+128),w
  3238     074D  3E6D               	addlw	109
  3239     074E  0086               	movwf	6
  3240     074F  0187               	clrf	7
  3241     0750  3023               	movlw	35
  3242     0751  3D87               	addwfc	7,f
  3243     0752  0801               	movf	1,w
  3244     0753  00D3               	movwf	??_Write_table^(0+128)
  3245     0754  01D4               	clrf	(??_Write_table^(0+128)+1)
  3246     0755  0853               	movf	??_Write_table^(0+128),w
  3247     0756  0140               	movlb	0	; select bank0
  3248     0757  00CA               	movwf	_tx_buf+2
  3249     0758  0141               	movlb	1	; select bank1
  3250     0759  0854               	movf	(??_Write_table+1)^(0+128),w
  3251     075A  0140               	movlb	0	; select bank0
  3252     075B  00CB               	movwf	_tx_buf+3
  3253     075C                     l2857:
  3254                           
  3255                           ;main.c: 184:     tx_buf[2] = ig_counter;
  3256     075C  0141               	movlb	1	; select bank1
  3257     075D  0863               	movf	(_ig_counter+1)^(0+128),w
  3258     075E  0140               	movlb	0	; select bank0
  3259     075F  00CD               	movwf	_tx_buf+5
  3260     0760  0141               	movlb	1	; select bank1
  3261     0761  0862               	movf	_ig_counter^(0+128),w
  3262     0762  0140               	movlb	0	; select bank0
  3263     0763  00CC               	movwf	_tx_buf+4
  3264     0764                     l2859:
  3265                           
  3266                           ;main.c: 185:     tx_buf[3] = t1_count;
  3267     0764  0141               	movlb	1	; select bank1
  3268     0765  0868               	movf	(_t1_count+1)^(0+128),w
  3269     0766  0140               	movlb	0	; select bank0
  3270     0767  00CF               	movwf	_tx_buf+7
  3271     0768  0141               	movlb	1	; select bank1
  3272     0769  0867               	movf	_t1_count^(0+128),w
  3273     076A  0140               	movlb	0	; select bank0
  3274     076B  00CE               	movwf	_tx_buf+6
  3275     076C                     l2861:
  3276                           
  3277                           ;main.c: 186:     tx_buf[4] = PORTAbits.RA0;
  3278     076C  080C               	movf	12,w	;volatile
  3279     076D  3901               	andlw	1
  3280     076E  0141               	movlb	1	; select bank1
  3281     076F  00D3               	movwf	??_Write_table^(0+128)
  3282     0770  01D4               	clrf	(??_Write_table^(0+128)+1)
  3283     0771  0853               	movf	??_Write_table^(0+128),w
  3284     0772  0140               	movlb	0	; select bank0
  3285     0773  00D0               	movwf	_tx_buf+8
  3286     0774  0141               	movlb	1	; select bank1
  3287     0775  0854               	movf	(??_Write_table+1)^(0+128),w
  3288     0776  0140               	movlb	0	; select bank0
  3289     0777  00D1               	movwf	_tx_buf+9
  3290     0778                     l2863:
  3291                           
  3292                           ;main.c: 187:     tx_buf[5] = EG_state;
  3293     0778  0141               	movlb	1	; select bank1
  3294     0779  0865               	movf	_EG_state^(0+128),w
  3295     077A  00D3               	movwf	??_Write_table^(0+128)
  3296     077B  01D4               	clrf	(??_Write_table^(0+128)+1)
  3297     077C  0853               	movf	??_Write_table^(0+128),w
  3298     077D  0140               	movlb	0	; select bank0
  3299     077E  00D2               	movwf	_tx_buf+10
  3300     077F  0141               	movlb	1	; select bank1
  3301     0780  0854               	movf	(??_Write_table+1)^(0+128),w
  3302     0781  0140               	movlb	0	; select bank0
  3303     0782  00D3               	movwf	_tx_buf+11
  3304     0783                     l2865:
  3305                           
  3306                           ;main.c: 188:     for (a = 0; a <= 5; a++) {
  3307     0783  0141               	movlb	1	; select bank1
  3308     0784  01DD               	clrf	Write_table@a^(0+128)
  3309     0785                     l2871:
  3310                           
  3311                           ;main.c: 189:         sprintf(tx_data, "%d,", tx_buf[a]);
  3312     0785  3012               	movlw	low (STR_1| (0+32768))
  3313     0786  00C1               	movwf	sprintf@fmt^(0+128)
  3314     0787  3090               	movlw	high (STR_1| (0+32768))
  3315     0788  00C2               	movwf	(sprintf@fmt^(0+128)+1)
  3316     0789  355D               	lslf	Write_table@a^(0+128),w
  3317     078A  3E48               	addlw	(low (_tx_buf| 0))& (0+255)
  3318     078B  0086               	movwf	6
  3319     078C  0187               	clrf	7
  3320     078D  3F40               	moviw [0]fsr1
  3321     078E  00C3               	movwf	(?_sprintf^(0+128)+2)
  3322     078F  3F41               	moviw [1]fsr1
  3323     0790  00C4               	movwf	((?_sprintf+1)^(0+128)+2)
  3324     0791  30D5               	movlw	(low (Write_table@tx_data| 0))& (0+255)
  3325     0792  318C  2459  3187   	fcall	_sprintf
  3326     0795                     l2873:
  3327                           
  3328                           ;main.c: 190:         WriteString(tx_data);
  3329     0795  30D5               	movlw	low Write_table@tx_data
  3330     0796  0141               	movlb	1	; select bank1
  3331     0797  00A1               	movwf	WriteString@str^(0+128)
  3332     0798  3000               	movlw	high Write_table@tx_data
  3333     0799  00A2               	movwf	(WriteString@str+1)^(0+128)
  3334     079A  318C  240A  3187   	fcall	_WriteString
  3335     079D                     l2875:
  3336                           
  3337                           ;main.c: 191:     }
  3338     079D  3001               	movlw	1
  3339     079E  0141               	movlb	1	; select bank1
  3340     079F  00D3               	movwf	??_Write_table^(0+128)
  3341     07A0  0853               	movf	??_Write_table^(0+128),w
  3342     07A1  07DD               	addwf	Write_table@a^(0+128),f
  3343     07A2                     l2877:
  3344     07A2  3006               	movlw	6
  3345     07A3  025D               	subwf	Write_table@a^(0+128),w
  3346     07A4  1C03               	skipc
  3347     07A5  2FA7               	goto	u2601
  3348     07A6  2FA8               	goto	u2600
  3349     07A7                     u2601:
  3350     07A7  2F85               	goto	l2871
  3351     07A8                     u2600:
  3352     07A8                     l2879:
  3353                           
  3354                           ;main.c: 192:     WriteString("\r\n");
  3355     07A8  301E               	movlw	low (STR_2| (0+32768))
  3356     07A9  00A1               	movwf	WriteString@str^(0+128)
  3357     07AA  3090               	movlw	high (STR_2| (0+32768))
  3358     07AB  00A2               	movwf	(WriteString@str^(0+128)+1)
  3359     07AC  318C  240A  3187   	fcall	_WriteString
  3360     07AF                     l215:
  3361     07AF  0008               	return
  3362     07B0                     __end_of_Write_table:
  3363                           
  3364                           	psect	text10
  3365     0C59                     __ptext10:	
  3366 ;; *************** function _sprintf *****************
  3367 ;; Defined at:
  3368 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  s               1    wreg     PTR unsigned char 
  3371 ;;		 -> Write_table@tx_data(8), 
  3372 ;;  fmt             2   33[BANK1 ] PTR const unsigned char 
  3373 ;;		 -> STR_1(4), 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  s               1   39[BANK1 ] PTR unsigned char 
  3376 ;;		 -> Write_table@tx_data(8), 
  3377 ;;  f              11   40[BANK1 ] struct _IO_FILE
  3378 ;;  ret             2    0        int 
  3379 ;;  ap              1   38[BANK1 ] PTR void [1]
  3380 ;;		 -> ?_sprintf(2), 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  2   33[BANK1 ] int 
  3383 ;; Registers used:
  3384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3390 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3392 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3393 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  3394 ;;Total ram usage:       18 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 7
  3397 ;; This function calls:
  3398 ;;		_vfprintf
  3399 ;; This function is called by:
  3400 ;;		_Write_table
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404     0C59                     _sprintf:	
  3405                           ;psect for function _sprintf
  3406                           
  3407                           
  3408                           ;incstack = 0
  3409                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3410                           ;sprintf@s stored from wreg
  3411     0C59  0141               	movlb	1	; select bank1
  3412     0C5A  00C7               	movwf	sprintf@s^(0+128)
  3413     0C5B                     l2615:
  3414     0C5B  30C3               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3415     0C5C  00C6               	movwf	sprintf@ap^(0+128)
  3416     0C5D  0847               	movf	sprintf@s^(0+128),w
  3417     0C5E  00C8               	movwf	sprintf@f^(0+128)
  3418     0C5F                     l2617:
  3419     0C5F  01CA               	clrf	(sprintf@f^(0+128)+2)
  3420     0C60  01CB               	clrf	((sprintf@f+1)^(0+128)+2)
  3421     0C61                     l2619:
  3422     0C61  01D1               	clrf	(sprintf@f^(0+128)+9)
  3423     0C62  01D2               	clrf	((sprintf@f+1)^(0+128)+9)
  3424     0C63                     l2621:
  3425     0C63  0842               	movf	(sprintf@fmt+1)^(0+128),w
  3426     0C64  00BB               	movwf	(vfprintf@fmt+1)^(0+128)
  3427     0C65  0841               	movf	sprintf@fmt^(0+128),w
  3428     0C66  00BA               	movwf	vfprintf@fmt^(0+128)
  3429     0C67  30C6               	movlw	(low (sprintf@ap| 0))& (0+255)
  3430     0C68  00BC               	movwf	vfprintf@ap^(0+128)
  3431     0C69  30C8               	movlw	(low (sprintf@f| 0))& (0+255)
  3432     0C6A  318C  243D  318C   	fcall	_vfprintf
  3433     0C6D                     l2623:
  3434     0C6D  0141               	movlb	1	; select bank1
  3435     0C6E  084A               	movf	(sprintf@f^(0+128)+2),w
  3436     0C6F  0747               	addwf	sprintf@s^(0+128),w
  3437     0C70  00C5               	movwf	??_sprintf^(0+128)
  3438     0C71  0845               	movf	??_sprintf^(0+128),w
  3439     0C72  0086               	movwf	6
  3440     0C73  0187               	clrf	7
  3441     0C74  0181               	clrf	1
  3442     0C75                     l845:
  3443     0C75  0008               	return
  3444     0C76                     __end_of_sprintf:
  3445                           
  3446                           	psect	text11
  3447     0C3D                     __ptext11:	
  3448 ;; *************** function _vfprintf *****************
  3449 ;; Defined at:
  3450 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  fp              1    wreg     PTR struct _IO_FILE
  3453 ;;		 -> sprintf@f(11), 
  3454 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  3455 ;;		 -> STR_1(4), 
  3456 ;;  ap              1   28[BANK1 ] PTR PTR void 
  3457 ;;		 -> sprintf@ap(1), 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  3460 ;;		 -> sprintf@f(11), 
  3461 ;;  cfmt            2   31[BANK1 ] PTR unsigned char 
  3462 ;;		 -> STR_1(4), 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  2   26[BANK1 ] int 
  3465 ;; Registers used:
  3466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3472 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3473 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3474 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;Total ram usage:        7 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; Hardware stack levels required when called: 6
  3479 ;; This function calls:
  3480 ;;		_vfpfcnvrt
  3481 ;; This function is called by:
  3482 ;;		_sprintf
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486     0C3D                     _vfprintf:	
  3487                           ;psect for function _vfprintf
  3488                           
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3492                           ;vfprintf@fp stored from wreg
  3493     0C3D  0141               	movlb	1	; select bank1
  3494     0C3E  00BE               	movwf	vfprintf@fp^(0+128)
  3495     0C3F                     l2605:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3498     0C3F  083B               	movf	(vfprintf@fmt+1)^(0+128),w
  3499     0C40  00C0               	movwf	(vfprintf@cfmt+1)^(0+128)
  3500     0C41  083A               	movf	vfprintf@fmt^(0+128),w
  3501     0C42  00BF               	movwf	vfprintf@cfmt^(0+128)
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3504     0C43  2C4C               	goto	l2609
  3505     0C44                     l2607:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3508     0C44  30BF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3509     0C45  00AB               	movwf	vfpfcnvrt@fmt^(0+128)
  3510     0C46  083C               	movf	vfprintf@ap^(0+128),w
  3511     0C47  00AC               	movwf	vfpfcnvrt@ap^(0+128)
  3512     0C48  083E               	movf	vfprintf@fp^(0+128),w
  3513     0C49  318F  2710  318C   	fcall	_vfpfcnvrt
  3514     0C4C                     l2609:
  3515                           
  3516                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3517     0C4C  0141               	movlb	1	; select bank1
  3518     0C4D  083F               	movf	vfprintf@cfmt^(0+128),w
  3519     0C4E  0084               	movwf	4
  3520     0C4F  0840               	movf	(vfprintf@cfmt+1)^(0+128),w
  3521     0C50  0085               	movwf	5
  3522     0C51  0012               	moviw fsr0++
  3523     0C52  1D03               	btfss	3,2
  3524     0C53  2C55               	goto	u2421
  3525     0C54  2C56               	goto	u2420
  3526     0C55                     u2421:
  3527     0C55  2C44               	goto	l2607
  3528     0C56                     u2420:
  3529     0C56                     l2611:
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3532     0C56  01BA               	clrf	?_vfprintf^(0+128)
  3533     0C57  01BB               	clrf	(?_vfprintf+1)^(0+128)
  3534     0C58                     l889:
  3535     0C58  0008               	return
  3536     0C59                     __end_of_vfprintf:
  3537                           
  3538                           	psect	text12
  3539     0F10                     __ptext12:	
  3540 ;; *************** function _vfpfcnvrt *****************
  3541 ;; Defined at:
  3542 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  fp              1    wreg     PTR struct _IO_FILE
  3545 ;;		 -> sprintf@f(11), 
  3546 ;;  fmt             1   11[BANK1 ] PTR PTR unsigned char 
  3547 ;;		 -> vfprintf@cfmt(2), 
  3548 ;;  ap              1   12[BANK1 ] PTR PTR void 
  3549 ;;		 -> sprintf@ap(1), 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  fp              1   18[BANK1 ] PTR struct _IO_FILE
  3552 ;;		 -> sprintf@f(11), 
  3553 ;;  convarg         4   21[BANK1 ] struct .
  3554 ;;  cp              2   19[BANK1 ] PTR unsigned char 
  3555 ;;		 -> STR_1(4), 
  3556 ;;  c               1   25[BANK1 ] unsigned char 
  3557 ;;  done            1   17[BANK1 ] _Bool 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3567 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3568 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3569 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  3571 ;;Total ram usage:       15 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 5
  3574 ;; This function calls:
  3575 ;;		___awdiv
  3576 ;;		___awmod
  3577 ;;		_abs
  3578 ;;		_fputc
  3579 ;; This function is called by:
  3580 ;;		_vfprintf
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584     0F10                     _vfpfcnvrt:	
  3585                           ;psect for function _vfpfcnvrt
  3586                           
  3587                           
  3588                           ;incstack = 0
  3589                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3590                           ;vfpfcnvrt@fp stored from wreg
  3591     0F10  0141               	movlb	1	; select bank1
  3592     0F11  00B2               	movwf	vfpfcnvrt@fp^(0+128)
  3593     0F12                     l2549:
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3596     0F12  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3597     0F13  0086               	movwf	6
  3598     0F14  0187               	clrf	7
  3599     0F15  3F40               	moviw [0]fsr1
  3600     0F16  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3601     0F17  3F41               	moviw [1]fsr1
  3602     0F18  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3603     0F19  082D               	movf	??_vfpfcnvrt^(0+128),w
  3604     0F1A  0084               	movwf	4
  3605     0F1B  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3606     0F1C  0085               	movwf	5
  3607     0F1D  0012               	moviw fsr0++
  3608     0F1E  3A25               	xorlw	37
  3609     0F1F  1D03               	btfss	3,2
  3610     0F20  2F22               	goto	u2311
  3611     0F21  2F23               	goto	u2310
  3612     0F22                     u2311:
  3613     0F22  2FE7               	goto	l2595
  3614     0F23                     u2310:
  3615     0F23                     l2551:
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3618     0F23  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3619     0F24  0086               	movwf	6
  3620     0F25  0187               	clrf	7
  3621     0F26  3001               	movlw	1
  3622     0F27  0781               	addwf	1,f
  3623     0F28  3141               	addfsr 1,1
  3624     0F29  1803               	skipnc
  3625     0F2A  0A81               	incf	1,f
  3626     0F2B                     l2553:
  3627                           
  3628                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3629     0F2B  01DE               	clrf	_width^(0+128)
  3630     0F2C  01DF               	clrf	(_width+1)^(0+128)
  3631     0F2D  1003               	clrc
  3632     0F2E  3000               	movlw	0
  3633     0F2F  1803               	btfsc	3,0
  3634     0F30  3001               	movlw	1
  3635     0F31  00E4               	movwf	_flags^(0+128)
  3636     0F32                     l2555:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3639     0F32  30FF               	movlw	255
  3640     0F33  00E0               	movwf	_prec^(0+128)
  3641     0F34  30FF               	movlw	255
  3642     0F35  00E1               	movwf	(_prec^(0+128)+1)
  3643     0F36                     l2557:
  3644                           
  3645                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3646     0F36  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3647     0F37  0086               	movwf	6
  3648     0F38  0187               	clrf	7
  3649     0F39  3F40               	moviw [0]fsr1
  3650     0F3A  00B3               	movwf	vfpfcnvrt@cp^(0+128)
  3651     0F3B  3F41               	moviw [1]fsr1
  3652     0F3C  00B4               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  3653     0F3D                     l2559:
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3656     0F3D  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3657     0F3E  0084               	movwf	4
  3658     0F3F  0834               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3659     0F40  0085               	movwf	5
  3660     0F41  0012               	moviw fsr0++
  3661     0F42  3A64               	xorlw	100
  3662     0F43  1903               	btfsc	3,2
  3663     0F44  2F46               	goto	u2321
  3664     0F45  2F47               	goto	u2320
  3665     0F46                     u2321:
  3666     0F46  2F51               	goto	l2563
  3667     0F47                     u2320:
  3668     0F47                     l2561:
  3669     0F47  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3670     0F48  0084               	movwf	4
  3671     0F49  0834               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3672     0F4A  0085               	movwf	5
  3673     0F4B  0012               	moviw fsr0++
  3674     0F4C  3A69               	xorlw	105
  3675     0F4D  1D03               	btfss	3,2
  3676     0F4E  2F50               	goto	u2331
  3677     0F4F  2F51               	goto	u2330
  3678     0F50                     u2331:
  3679     0F50  2FDD               	goto	l2591
  3680     0F51                     u2330:
  3681     0F51                     l2563:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3684     0F51  082C               	movf	vfpfcnvrt@ap^(0+128),w
  3685     0F52  0086               	movwf	6
  3686     0F53  0187               	clrf	7
  3687     0F54  0801               	movf	1,w
  3688     0F55  0084               	movwf	4
  3689     0F56  0185               	clrf	5
  3690     0F57  3002               	movlw	2
  3691     0F58  0781               	addwf	1,f
  3692     0F59  3F00               	moviw [0]fsr0
  3693     0F5A  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  3694     0F5B  3F01               	moviw [1]fsr0
  3695     0F5C  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3696     0F5D                     l2565:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3699     0F5D  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3700     0F5E  3E01               	addlw	1
  3701     0F5F  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3702     0F60  3000               	movlw	0
  3703     0F61  3D34               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  3704     0F62  00AE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  3705     0F63  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3706     0F64  0086               	movwf	6
  3707     0F65  0187               	clrf	7
  3708     0F66  082D               	movf	??_vfpfcnvrt^(0+128),w
  3709     0F67  3FC0               	movwi [0]fsr1
  3710     0F68  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3711     0F69  3FC1               	movwi [1]fsr1
  3712     0F6A                     l2567:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3715     0F6A  3020               	movlw	32
  3716     0F6B  00B9               	movwf	vfpfcnvrt@c^(0+128)
  3717     0F6C                     l2569:
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3720     0F6C  1BB6               	btfsc	(vfpfcnvrt@convarg+1)^(0+128),7
  3721     0F6D  2F6F               	goto	u2341
  3722     0F6E  2F71               	goto	u2340
  3723     0F6F                     u2341:
  3724     0F6F  3001               	movlw	1
  3725     0F70  2F72               	goto	u2350
  3726     0F71                     u2340:
  3727     0F71  3000               	movlw	0
  3728     0F72                     u2350:
  3729     0F72  00B1               	movwf	vfpfcnvrt@done^(0+128)
  3730     0F73                     l2571:
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3733     0F73  3001               	movlw	1
  3734     0F74  02B9               	subwf	vfpfcnvrt@c^(0+128),f
  3735     0F75  0839               	movf	vfpfcnvrt@c^(0+128),w
  3736     0F76  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3737     0F77  0086               	movwf	6
  3738     0F78  3001               	movlw	1	; select bank2/3
  3739     0F79  0087               	movwf	7
  3740     0F7A  300A               	movlw	10
  3741     0F7B  00A0               	movwf	___awmod@divisor^(0+128)
  3742     0F7C  3000               	movlw	0
  3743     0F7D  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  3744     0F7E  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3745     0F7F  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  3746     0F80  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3747     0F81  00A2               	movwf	___awmod@dividend^(0+128)
  3748     0F82  318D  259B  318F   	fcall	___awmod
  3749     0F85  0141               	movlb	1	; select bank1
  3750     0F86  0821               	movf	(?___awmod+1)^(0+128),w
  3751     0F87  00A8               	movwf	(abs@a+1)^(0+128)
  3752     0F88  0820               	movf	?___awmod^(0+128),w
  3753     0F89  00A7               	movwf	abs@a^(0+128)
  3754     0F8A  3187  27ED  318F   	fcall	_abs
  3755     0F8D  0141               	movlb	1	; select bank1
  3756     0F8E  0827               	movf	?_abs^(0+128),w
  3757     0F8F  3E30               	addlw	48
  3758     0F90  0081               	movwf	1
  3759     0F91                     l2573:
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3762     0F91  300A               	movlw	10
  3763     0F92  00A0               	movwf	___awdiv@divisor^(0+128)
  3764     0F93  3000               	movlw	0
  3765     0F94  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3766     0F95  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3767     0F96  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3768     0F97  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3769     0F98  00A2               	movwf	___awdiv@dividend^(0+128)
  3770     0F99  318E  2645  318F   	fcall	___awdiv
  3771     0F9C  0141               	movlb	1	; select bank1
  3772     0F9D  0821               	movf	(?___awdiv+1)^(0+128),w
  3773     0F9E  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3774     0F9F  0820               	movf	?___awdiv^(0+128),w
  3775     0FA0  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  3776     0FA1                     l2575:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3779     0FA1  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3780     0FA2  0436               	iorwf	(vfpfcnvrt@convarg+1)^(0+128),w
  3781     0FA3  1903               	btfsc	3,2
  3782     0FA4  2FA6               	goto	u2361
  3783     0FA5  2FA7               	goto	u2360
  3784     0FA6                     u2361:
  3785     0FA6  2FAC               	goto	l2579
  3786     0FA7                     u2360:
  3787     0FA7                     l2577:
  3788     0FA7  0839               	movf	vfpfcnvrt@c^(0+128),w
  3789     0FA8  1D03               	btfss	3,2
  3790     0FA9  2FAB               	goto	u2371
  3791     0FAA  2FAC               	goto	u2370
  3792     0FAB                     u2371:
  3793     0FAB  2F73               	goto	l2571
  3794     0FAC                     u2370:
  3795     0FAC                     l2579:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3798     0FAC  0839               	movf	vfpfcnvrt@c^(0+128),w
  3799     0FAD  1903               	btfsc	3,2
  3800     0FAE  2FB0               	goto	u2381
  3801     0FAF  2FB1               	goto	u2380
  3802     0FB0                     u2381:
  3803     0FB0  2FD6               	goto	l2589
  3804     0FB1                     u2380:
  3805     0FB1                     l2581:
  3806     0FB1  0831               	movf	vfpfcnvrt@done^(0+128),w
  3807     0FB2  1903               	btfsc	3,2
  3808     0FB3  2FB5               	goto	u2391
  3809     0FB4  2FB6               	goto	u2390
  3810     0FB5                     u2391:
  3811     0FB5  2FD6               	goto	l2589
  3812     0FB6                     u2390:
  3813     0FB6                     l2583:
  3814                           
  3815                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3816     0FB6  3001               	movlw	1
  3817     0FB7  02B9               	subwf	vfpfcnvrt@c^(0+128),f
  3818     0FB8  0839               	movf	vfpfcnvrt@c^(0+128),w
  3819     0FB9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3820     0FBA  0086               	movwf	6
  3821     0FBB  3001               	movlw	1	; select bank2/3
  3822     0FBC  0087               	movwf	7
  3823     0FBD  302D               	movlw	45
  3824     0FBE  0081               	movwf	1
  3825     0FBF  2FD6               	goto	l2589
  3826     0FC0                     l2585:
  3827                           
  3828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3829     0FC0  0839               	movf	vfpfcnvrt@c^(0+128),w
  3830     0FC1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3831     0FC2  0086               	movwf	6
  3832     0FC3  3001               	movlw	1	; select bank2/3
  3833     0FC4  0087               	movwf	7
  3834     0FC5  0801               	movf	1,w
  3835     0FC6  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3836     0FC7  01AE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  3837     0FC8  082D               	movf	??_vfpfcnvrt^(0+128),w
  3838     0FC9  00A0               	movwf	fputc@c^(0+128)
  3839     0FCA  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3840     0FCB  00A1               	movwf	(fputc@c+1)^(0+128)
  3841     0FCC  0832               	movf	vfpfcnvrt@fp^(0+128),w
  3842     0FCD  00A2               	movwf	fputc@fp^(0+128)
  3843     0FCE  318D  2549  318F   	fcall	_fputc
  3844     0FD1                     l2587:
  3845     0FD1  3001               	movlw	1
  3846     0FD2  0141               	movlb	1	; select bank1
  3847     0FD3  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3848     0FD4  082D               	movf	??_vfpfcnvrt^(0+128),w
  3849     0FD5  07B9               	addwf	vfpfcnvrt@c^(0+128),f
  3850     0FD6                     l2589:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3853     0FD6  3020               	movlw	32
  3854     0FD7  0639               	xorwf	vfpfcnvrt@c^(0+128),w
  3855     0FD8  1D03               	btfss	3,2
  3856     0FD9  2FDB               	goto	u2401
  3857     0FDA  2FDC               	goto	u2400
  3858     0FDB                     u2401:
  3859     0FDB  2FC0               	goto	l2585
  3860     0FDC                     u2400:
  3861     0FDC  2FFF               	goto	l883
  3862     0FDD                     l2591:
  3863                           
  3864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3865     0FDD  0141               	movlb	1	; select bank1
  3866     0FDE  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3867     0FDF  0086               	movwf	6
  3868     0FE0  0187               	clrf	7
  3869     0FE1  3001               	movlw	1
  3870     0FE2  0781               	addwf	1,f
  3871     0FE3  3141               	addfsr 1,1
  3872     0FE4  1803               	skipnc
  3873     0FE5  0A81               	incf	1,f
  3874     0FE6  2FFF               	goto	l883
  3875     0FE7                     l2595:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3878     0FE7  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3879     0FE8  0086               	movwf	6
  3880     0FE9  0187               	clrf	7
  3881     0FEA  3F40               	moviw [0]fsr1
  3882     0FEB  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3883     0FEC  3F41               	moviw [1]fsr1
  3884     0FED  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3885     0FEE  082D               	movf	??_vfpfcnvrt^(0+128),w
  3886     0FEF  0084               	movwf	4
  3887     0FF0  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3888     0FF1  0085               	movwf	5
  3889     0FF2  0800               	movf	0,w	;code access
  3890     0FF3  00AF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3891     0FF4  01B0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3892     0FF5  082F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3893     0FF6  00A0               	movwf	fputc@c^(0+128)
  3894     0FF7  0830               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3895     0FF8  00A1               	movwf	(fputc@c+1)^(0+128)
  3896     0FF9  0832               	movf	vfpfcnvrt@fp^(0+128),w
  3897     0FFA  00A2               	movwf	fputc@fp^(0+128)
  3898     0FFB  318D  2549  318F   	fcall	_fputc
  3899     0FFE  2FDD               	goto	l2591
  3900     0FFF                     l883:
  3901     0FFF  0008               	return
  3902     1000                     __end_of_vfpfcnvrt:
  3903                           
  3904                           	psect	text13
  3905     0D49                     __ptext13:	
  3906 ;; *************** function _fputc *****************
  3907 ;; Defined at:
  3908 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  c               2    0[BANK1 ] int 
  3911 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3912 ;;		 -> sprintf@f(11), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2    0[BANK1 ] int 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3924 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3926 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3928 ;;Total ram usage:        8 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 4
  3931 ;; This function calls:
  3932 ;;		_putch
  3933 ;; This function is called by:
  3934 ;;		_vfpfcnvrt
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938     0D49                     _fputc:	
  3939                           ;psect for function _fputc
  3940                           
  3941     0D49                     l2533:	
  3942                           ;incstack = 0
  3943                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3944                           
  3945     0D49  0141               	movlb	1	; select bank1
  3946     0D4A  0822               	movf	fputc@fp^(0+128),w
  3947     0D4B  1903               	btfsc	3,2
  3948     0D4C  2D4E               	goto	u2271
  3949     0D4D  2D4F               	goto	u2270
  3950     0D4E                     u2271:
  3951     0D4E  2D54               	goto	l2537
  3952     0D4F                     u2270:
  3953     0D4F                     l2535:
  3954     0D4F  0822               	movf	fputc@fp^(0+128),w
  3955     0D50  1D03               	btfss	3,2
  3956     0D51  2D53               	goto	u2281
  3957     0D52  2D54               	goto	u2280
  3958     0D53                     u2281:
  3959     0D53  2D59               	goto	l2539
  3960     0D54                     u2280:
  3961     0D54                     l2537:
  3962     0D54  0820               	movf	fputc@c^(0+128),w
  3963     0D55  3187  27FF  318D   	fcall	_putch
  3964     0D58  2D9A               	goto	l908
  3965     0D59                     l2539:
  3966     0D59  0822               	movf	fputc@fp^(0+128),w
  3967     0D5A  3E09               	addlw	9
  3968     0D5B  0086               	movwf	6
  3969     0D5C  0187               	clrf	7
  3970     0D5D  0016               	moviw fsr1++
  3971     0D5E  0401               	iorwf	1,w
  3972     0D5F  1903               	btfsc	3,2
  3973     0D60  2D62               	goto	u2291
  3974     0D61  2D63               	goto	u2290
  3975     0D62                     u2291:
  3976     0D62  2D81               	goto	l2543
  3977     0D63                     u2290:
  3978     0D63                     l2541:
  3979     0D63  0822               	movf	fputc@fp^(0+128),w
  3980     0D64  3E09               	addlw	9
  3981     0D65  0086               	movwf	6
  3982     0D66  0187               	clrf	7
  3983     0D67  3F40               	moviw [0]fsr1
  3984     0D68  00A3               	movwf	??_fputc^(0+128)
  3985     0D69  3F41               	moviw [1]fsr1
  3986     0D6A  00A4               	movwf	(??_fputc^(0+128)+1)
  3987     0D6B  0822               	movf	fputc@fp^(0+128),w
  3988     0D6C  3E02               	addlw	2
  3989     0D6D  0086               	movwf	6
  3990     0D6E  0187               	clrf	7
  3991     0D6F  3F40               	moviw [0]fsr1
  3992     0D70  00A5               	movwf	(??_fputc+2)^(0+128)
  3993     0D71  3F41               	moviw [1]fsr1
  3994     0D72  00A6               	movwf	((??_fputc+2)^(0+128)+1)
  3995     0D73  0826               	movf	(??_fputc+3)^(0+128),w
  3996     0D74  3A80               	xorlw	128
  3997     0D75  00A7               	movwf	(??_fputc+4)^(0+128)
  3998     0D76  0824               	movf	(??_fputc+1)^(0+128),w
  3999     0D77  3A80               	xorlw	128
  4000     0D78  0227               	subwf	(??_fputc+4)^(0+128),w
  4001     0D79  1D03               	skipz
  4002     0D7A  2D7D               	goto	u2305
  4003     0D7B  0823               	movf	??_fputc^(0+128),w
  4004     0D7C  0225               	subwf	(??_fputc+2)^(0+128),w
  4005     0D7D                     u2305:
  4006     0D7D  1803               	skipnc
  4007     0D7E  2D80               	goto	u2301
  4008     0D7F  2D81               	goto	u2300
  4009     0D80                     u2301:
  4010     0D80  2D9A               	goto	l908
  4011     0D81                     u2300:
  4012     0D81                     l2543:
  4013     0D81  0141               	movlb	1	; select bank1
  4014     0D82  0822               	movf	fputc@fp^(0+128),w
  4015     0D83  0086               	movwf	6
  4016     0D84  0187               	clrf	7
  4017     0D85  0822               	movf	fputc@fp^(0+128),w
  4018     0D86  3E02               	addlw	2
  4019     0D87  0084               	movwf	4
  4020     0D88  0185               	clrf	5
  4021     0D89  0800               	movf	0,w
  4022     0D8A  0701               	addwf	1,w
  4023     0D8B  00A3               	movwf	??_fputc^(0+128)
  4024     0D8C  0823               	movf	??_fputc^(0+128),w
  4025     0D8D  0086               	movwf	6
  4026     0D8E  0187               	clrf	7
  4027     0D8F  0820               	movf	fputc@c^(0+128),w
  4028     0D90  0081               	movwf	1
  4029     0D91                     l2545:
  4030     0D91  0822               	movf	fputc@fp^(0+128),w
  4031     0D92  3E02               	addlw	2
  4032     0D93  0086               	movwf	6
  4033     0D94  0187               	clrf	7
  4034     0D95  3001               	movlw	1
  4035     0D96  0781               	addwf	1,f
  4036     0D97  3141               	addfsr 1,1
  4037     0D98  1803               	skipnc
  4038     0D99  0A81               	incf	1,f
  4039     0D9A                     l908:
  4040     0D9A  0008               	return
  4041     0D9B                     __end_of_fputc:
  4042                           
  4043                           	psect	text14
  4044     07FF                     __ptext14:	
  4045 ;; *************** function _putch *****************
  4046 ;; Defined at:
  4047 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  c               1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  c               1    0[COMMON] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4065 ;;Total ram usage:        0 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 3
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_fputc
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075     07FF                     _putch:	
  4076                           ;psect for function _putch
  4077                           
  4078     07FF                     l919:	
  4079                           ;incstack = 0
  4080                           ; Regs used in _putch: [wreg]
  4081                           
  4082     07FF  0008               	return
  4083     0800                     __end_of_putch:
  4084                           
  4085                           	psect	text15
  4086     07ED                     __ptext15:	
  4087 ;; *************** function _abs *****************
  4088 ;; Defined at:
  4089 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  a               2    7[BANK1 ] int 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  2    7[BANK1 ] int 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4103 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;Total ram usage:        4 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 3
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_vfpfcnvrt
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117     07ED                     _abs:	
  4118                           ;psect for function _abs
  4119                           
  4120     07ED                     l1825:	
  4121                           ;incstack = 0
  4122                           ; Regs used in _abs: [wreg+status,2+status,0]
  4123                           
  4124     07ED  0141               	movlb	1	; select bank1
  4125     07EE  1BA8               	btfsc	(abs@a+1)^(0+128),7
  4126     07EF  2FF1               	goto	u1371
  4127     07F0  2FF2               	goto	u1370
  4128     07F1                     u1371:
  4129     07F1  2FF3               	goto	l1829
  4130     07F2                     u1370:
  4131     07F2                     l1827:
  4132     07F2  2FFE               	goto	l896
  4133     07F3                     l1829:
  4134     07F3  0927               	comf	abs@a^(0+128),w
  4135     07F4  00A9               	movwf	??_abs^(0+128)
  4136     07F5  0928               	comf	(abs@a+1)^(0+128),w
  4137     07F6  00AA               	movwf	(??_abs^(0+128)+1)
  4138     07F7  0AA9               	incf	??_abs^(0+128),f
  4139     07F8  1903               	skipnz
  4140     07F9  0AAA               	incf	(??_abs^(0+128)+1),f
  4141     07FA  0829               	movf	??_abs^(0+128),w
  4142     07FB  00A7               	movwf	?_abs^(0+128)
  4143     07FC  082A               	movf	(??_abs+1)^(0+128),w
  4144     07FD  00A8               	movwf	(?_abs+1)^(0+128)
  4145     07FE                     l896:
  4146     07FE  0008               	return
  4147     07FF                     __end_of_abs:
  4148                           
  4149                           	psect	text16
  4150     0D9B                     __ptext16:	
  4151 ;; *************** function ___awmod *****************
  4152 ;; Defined at:
  4153 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  divisor         2    0[BANK1 ] int 
  4156 ;;  dividend        2    2[BANK1 ] int 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  sign            1    6[BANK1 ] unsigned char 
  4159 ;;  counter         1    5[BANK1 ] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  2    0[BANK1 ] int 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4169 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;Total ram usage:        7 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 3
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_vfpfcnvrt
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183     0D9B                     ___awmod:	
  4184                           ;psect for function ___awmod
  4185                           
  4186     0D9B                     l1771:	
  4187                           ;incstack = 0
  4188                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4189                           
  4190     0D9B  0141               	movlb	1	; select bank1
  4191     0D9C  01A6               	clrf	___awmod@sign^(0+128)
  4192     0D9D                     l1773:
  4193     0D9D  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  4194     0D9E  2DA0               	goto	u1241
  4195     0D9F  2DA1               	goto	u1240
  4196     0DA0                     u1241:
  4197     0DA0  2DA8               	goto	l1779
  4198     0DA1                     u1240:
  4199     0DA1                     l1775:
  4200     0DA1  09A2               	comf	___awmod@dividend^(0+128),f
  4201     0DA2  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4202     0DA3  0AA2               	incf	___awmod@dividend^(0+128),f
  4203     0DA4  1903               	skipnz
  4204     0DA5  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4205     0DA6                     l1777:
  4206     0DA6  01A6               	clrf	___awmod@sign^(0+128)
  4207     0DA7  0AA6               	incf	___awmod@sign^(0+128),f
  4208     0DA8                     l1779:
  4209     0DA8  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4210     0DA9  2DAB               	goto	u1251
  4211     0DAA  2DAC               	goto	u1250
  4212     0DAB                     u1251:
  4213     0DAB  2DB1               	goto	l1783
  4214     0DAC                     u1250:
  4215     0DAC                     l1781:
  4216     0DAC  09A0               	comf	___awmod@divisor^(0+128),f
  4217     0DAD  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  4218     0DAE  0AA0               	incf	___awmod@divisor^(0+128),f
  4219     0DAF  1903               	skipnz
  4220     0DB0  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  4221     0DB1                     l1783:
  4222     0DB1  0820               	movf	___awmod@divisor^(0+128),w
  4223     0DB2  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  4224     0DB3  1903               	btfsc	3,2
  4225     0DB4  2DB6               	goto	u1261
  4226     0DB5  2DB7               	goto	u1260
  4227     0DB6                     u1261:
  4228     0DB6  2DE0               	goto	l1801
  4229     0DB7                     u1260:
  4230     0DB7                     l1785:
  4231     0DB7  01A5               	clrf	___awmod@counter^(0+128)
  4232     0DB8  0AA5               	incf	___awmod@counter^(0+128),f
  4233     0DB9  2DC3               	goto	l1791
  4234     0DBA                     l1787:
  4235     0DBA  3001               	movlw	1
  4236     0DBB                     u1275:
  4237     0DBB  35A0               	lslf	___awmod@divisor^(0+128),f
  4238     0DBC  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  4239     0DBD  0B89               	decfsz	9,f
  4240     0DBE  2DBB               	goto	u1275
  4241     0DBF                     l1789:
  4242     0DBF  3001               	movlw	1
  4243     0DC0  00A4               	movwf	??___awmod^(0+128)
  4244     0DC1  0824               	movf	??___awmod^(0+128),w
  4245     0DC2  07A5               	addwf	___awmod@counter^(0+128),f
  4246     0DC3                     l1791:
  4247     0DC3  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4248     0DC4  2DC6               	goto	u1281
  4249     0DC5  2DC7               	goto	u1280
  4250     0DC6                     u1281:
  4251     0DC6  2DBA               	goto	l1787
  4252     0DC7                     u1280:
  4253     0DC7                     l1793:
  4254     0DC7  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4255     0DC8  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  4256     0DC9  1D03               	skipz
  4257     0DCA  2DCD               	goto	u1295
  4258     0DCB  0820               	movf	___awmod@divisor^(0+128),w
  4259     0DCC  0222               	subwf	___awmod@dividend^(0+128),w
  4260     0DCD                     u1295:
  4261     0DCD  1C03               	skipc
  4262     0DCE  2DD0               	goto	u1291
  4263     0DCF  2DD1               	goto	u1290
  4264     0DD0                     u1291:
  4265     0DD0  2DD5               	goto	l1797
  4266     0DD1                     u1290:
  4267     0DD1                     l1795:
  4268     0DD1  0820               	movf	___awmod@divisor^(0+128),w
  4269     0DD2  02A2               	subwf	___awmod@dividend^(0+128),f
  4270     0DD3  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4271     0DD4  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
  4272     0DD5                     l1797:
  4273     0DD5  3001               	movlw	1
  4274     0DD6                     u1305:
  4275     0DD6  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
  4276     0DD7  0CA0               	rrf	___awmod@divisor^(0+128),f
  4277     0DD8  0B89               	decfsz	9,f
  4278     0DD9  2DD6               	goto	u1305
  4279     0DDA                     l1799:
  4280     0DDA  3001               	movlw	1
  4281     0DDB  02A5               	subwf	___awmod@counter^(0+128),f
  4282     0DDC  1D03               	btfss	3,2
  4283     0DDD  2DDF               	goto	u1311
  4284     0DDE  2DE0               	goto	u1310
  4285     0DDF                     u1311:
  4286     0DDF  2DC7               	goto	l1793
  4287     0DE0                     u1310:
  4288     0DE0                     l1801:
  4289     0DE0  0826               	movf	___awmod@sign^(0+128),w
  4290     0DE1  1903               	btfsc	3,2
  4291     0DE2  2DE4               	goto	u1321
  4292     0DE3  2DE5               	goto	u1320
  4293     0DE4                     u1321:
  4294     0DE4  2DEA               	goto	l1805
  4295     0DE5                     u1320:
  4296     0DE5                     l1803:
  4297     0DE5  09A2               	comf	___awmod@dividend^(0+128),f
  4298     0DE6  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4299     0DE7  0AA2               	incf	___awmod@dividend^(0+128),f
  4300     0DE8  1903               	skipnz
  4301     0DE9  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4302     0DEA                     l1805:
  4303     0DEA  0823               	movf	(___awmod@dividend+1)^(0+128),w
  4304     0DEB  00A1               	movwf	(?___awmod+1)^(0+128)
  4305     0DEC  0822               	movf	___awmod@dividend^(0+128),w
  4306     0DED  00A0               	movwf	?___awmod^(0+128)
  4307     0DEE                     l548:
  4308     0DEE  0008               	return
  4309     0DEF                     __end_of___awmod:
  4310                           
  4311                           	psect	text17
  4312     0E45                     __ptext17:	
  4313 ;; *************** function ___awdiv *****************
  4314 ;; Defined at:
  4315 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  divisor         2    0[BANK1 ] int 
  4318 ;;  dividend        2    2[BANK1 ] int 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  quotient        2    7[BANK1 ] int 
  4321 ;;  sign            1    6[BANK1 ] unsigned char 
  4322 ;;  counter         1    5[BANK1 ] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  2    0[BANK1 ] int 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4332 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4333 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4334 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;Total ram usage:        9 bytes
  4337 ;; Hardware stack levels used: 1
  4338 ;; Hardware stack levels required when called: 3
  4339 ;; This function calls:
  4340 ;;		Nothing
  4341 ;; This function is called by:
  4342 ;;		_vfpfcnvrt
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346     0E45                     ___awdiv:	
  4347                           ;psect for function ___awdiv
  4348                           
  4349     0E45                     l1727:	
  4350                           ;incstack = 0
  4351                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4352                           
  4353     0E45  0141               	movlb	1	; select bank1
  4354     0E46  01A6               	clrf	___awdiv@sign^(0+128)
  4355     0E47                     l1729:
  4356     0E47  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4357     0E48  2E4A               	goto	u1141
  4358     0E49  2E4B               	goto	u1140
  4359     0E4A                     u1141:
  4360     0E4A  2E52               	goto	l1735
  4361     0E4B                     u1140:
  4362     0E4B                     l1731:
  4363     0E4B  09A0               	comf	___awdiv@divisor^(0+128),f
  4364     0E4C  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4365     0E4D  0AA0               	incf	___awdiv@divisor^(0+128),f
  4366     0E4E  1903               	skipnz
  4367     0E4F  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4368     0E50                     l1733:
  4369     0E50  01A6               	clrf	___awdiv@sign^(0+128)
  4370     0E51  0AA6               	incf	___awdiv@sign^(0+128),f
  4371     0E52                     l1735:
  4372     0E52  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4373     0E53  2E55               	goto	u1151
  4374     0E54  2E56               	goto	u1150
  4375     0E55                     u1151:
  4376     0E55  2E5F               	goto	l1741
  4377     0E56                     u1150:
  4378     0E56                     l1737:
  4379     0E56  09A2               	comf	___awdiv@dividend^(0+128),f
  4380     0E57  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4381     0E58  0AA2               	incf	___awdiv@dividend^(0+128),f
  4382     0E59  1903               	skipnz
  4383     0E5A  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4384     0E5B                     l1739:
  4385     0E5B  3001               	movlw	1
  4386     0E5C  00A4               	movwf	??___awdiv^(0+128)
  4387     0E5D  0824               	movf	??___awdiv^(0+128),w
  4388     0E5E  06A6               	xorwf	___awdiv@sign^(0+128),f
  4389     0E5F                     l1741:
  4390     0E5F  01A7               	clrf	___awdiv@quotient^(0+128)
  4391     0E60  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  4392     0E61                     l1743:
  4393     0E61  0820               	movf	___awdiv@divisor^(0+128),w
  4394     0E62  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4395     0E63  1903               	btfsc	3,2
  4396     0E64  2E66               	goto	u1161
  4397     0E65  2E67               	goto	u1160
  4398     0E66                     u1161:
  4399     0E66  2E96               	goto	l1763
  4400     0E67                     u1160:
  4401     0E67                     l1745:
  4402     0E67  01A5               	clrf	___awdiv@counter^(0+128)
  4403     0E68  0AA5               	incf	___awdiv@counter^(0+128),f
  4404     0E69  2E73               	goto	l1751
  4405     0E6A                     l1747:
  4406     0E6A  3001               	movlw	1
  4407     0E6B                     u1175:
  4408     0E6B  35A0               	lslf	___awdiv@divisor^(0+128),f
  4409     0E6C  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4410     0E6D  0B89               	decfsz	9,f
  4411     0E6E  2E6B               	goto	u1175
  4412     0E6F                     l1749:
  4413     0E6F  3001               	movlw	1
  4414     0E70  00A4               	movwf	??___awdiv^(0+128)
  4415     0E71  0824               	movf	??___awdiv^(0+128),w
  4416     0E72  07A5               	addwf	___awdiv@counter^(0+128),f
  4417     0E73                     l1751:
  4418     0E73  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4419     0E74  2E76               	goto	u1181
  4420     0E75  2E77               	goto	u1180
  4421     0E76                     u1181:
  4422     0E76  2E6A               	goto	l1747
  4423     0E77                     u1180:
  4424     0E77                     l1753:
  4425     0E77  3001               	movlw	1
  4426     0E78                     u1195:
  4427     0E78  35A7               	lslf	___awdiv@quotient^(0+128),f
  4428     0E79  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  4429     0E7A  0B89               	decfsz	9,f
  4430     0E7B  2E78               	goto	u1195
  4431     0E7C  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4432     0E7D  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4433     0E7E  1D03               	skipz
  4434     0E7F  2E82               	goto	u1205
  4435     0E80  0820               	movf	___awdiv@divisor^(0+128),w
  4436     0E81  0222               	subwf	___awdiv@dividend^(0+128),w
  4437     0E82                     u1205:
  4438     0E82  1C03               	skipc
  4439     0E83  2E85               	goto	u1201
  4440     0E84  2E86               	goto	u1200
  4441     0E85                     u1201:
  4442     0E85  2E8B               	goto	l1759
  4443     0E86                     u1200:
  4444     0E86                     l1755:
  4445     0E86  0820               	movf	___awdiv@divisor^(0+128),w
  4446     0E87  02A2               	subwf	___awdiv@dividend^(0+128),f
  4447     0E88  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4448     0E89  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
  4449     0E8A                     l1757:
  4450     0E8A  1427               	bsf	___awdiv@quotient^(0+128),0
  4451     0E8B                     l1759:
  4452     0E8B  3001               	movlw	1
  4453     0E8C                     u1215:
  4454     0E8C  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
  4455     0E8D  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4456     0E8E  0B89               	decfsz	9,f
  4457     0E8F  2E8C               	goto	u1215
  4458     0E90                     l1761:
  4459     0E90  3001               	movlw	1
  4460     0E91  02A5               	subwf	___awdiv@counter^(0+128),f
  4461     0E92  1D03               	btfss	3,2
  4462     0E93  2E95               	goto	u1221
  4463     0E94  2E96               	goto	u1220
  4464     0E95                     u1221:
  4465     0E95  2E77               	goto	l1753
  4466     0E96                     u1220:
  4467     0E96                     l1763:
  4468     0E96  0826               	movf	___awdiv@sign^(0+128),w
  4469     0E97  1903               	btfsc	3,2
  4470     0E98  2E9A               	goto	u1231
  4471     0E99  2E9B               	goto	u1230
  4472     0E9A                     u1231:
  4473     0E9A  2EA0               	goto	l1767
  4474     0E9B                     u1230:
  4475     0E9B                     l1765:
  4476     0E9B  09A7               	comf	___awdiv@quotient^(0+128),f
  4477     0E9C  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  4478     0E9D  0AA7               	incf	___awdiv@quotient^(0+128),f
  4479     0E9E  1903               	skipnz
  4480     0E9F  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  4481     0EA0                     l1767:
  4482     0EA0  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  4483     0EA1  00A1               	movwf	(?___awdiv+1)^(0+128)
  4484     0EA2  0827               	movf	___awdiv@quotient^(0+128),w
  4485     0EA3  00A0               	movwf	?___awdiv^(0+128)
  4486     0EA4                     l535:
  4487     0EA4  0008               	return
  4488     0EA5                     __end_of___awdiv:
  4489                           
  4490                           	psect	text18
  4491     0C0A                     __ptext18:	
  4492 ;; *************** function _WriteString *****************
  4493 ;; Defined at:
  4494 ;;		line 208 in file "main.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  4497 ;;		 -> STR_2(3), Write_table@tx_data(8), 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4509 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;Total ram usage:        3 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 4
  4516 ;; This function calls:
  4517 ;;		_Write_Byte
  4518 ;; This function is called by:
  4519 ;;		_Write_table
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523     0C0A                     _WriteString:	
  4524                           ;psect for function _WriteString
  4525                           
  4526     0C0A                     l2627:	
  4527                           ;incstack = 0
  4528                           ; Regs used in _WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4529                           
  4530                           
  4531                           ;main.c: 209:     while (*str) {
  4532     0C0A  2C18               	goto	l2633
  4533     0C0B                     l2629:
  4534                           
  4535                           ;main.c: 210:         Write_Byte(*str);
  4536     0C0B  0821               	movf	WriteString@str^(0+128),w
  4537     0C0C  0084               	movwf	4
  4538     0C0D  0822               	movf	(WriteString@str+1)^(0+128),w
  4539     0C0E  0085               	movwf	5
  4540     0C0F  0800               	movf	0,w	;code access
  4541     0C10  318B  23E6  318C   	fcall	_Write_Byte
  4542     0C13                     l2631:
  4543                           
  4544                           ;main.c: 211:         str++;
  4545     0C13  3001               	movlw	1
  4546     0C14  0141               	movlb	1	; select bank1
  4547     0C15  07A1               	addwf	WriteString@str^(0+128),f
  4548     0C16  3000               	movlw	0
  4549     0C17  3DA2               	addwfc	(WriteString@str+1)^(0+128),f
  4550     0C18                     l2633:
  4551                           
  4552                           ;main.c: 209:     while (*str) {
  4553     0C18  0141               	movlb	1	; select bank1
  4554     0C19  0821               	movf	WriteString@str^(0+128),w
  4555     0C1A  0084               	movwf	4
  4556     0C1B  0822               	movf	(WriteString@str+1)^(0+128),w
  4557     0C1C  0085               	movwf	5
  4558     0C1D  0012               	moviw fsr0++
  4559     0C1E  1D03               	btfss	3,2
  4560     0C1F  2C21               	goto	u2431
  4561     0C20  2C22               	goto	u2430
  4562     0C21                     u2431:
  4563     0C21  2C0B               	goto	l2629
  4564     0C22                     u2430:
  4565     0C22                     l227:
  4566     0C22  0008               	return
  4567     0C23                     __end_of_WriteString:
  4568                           
  4569                           	psect	text19
  4570     0BE6                     __ptext19:	
  4571 ;; *************** function _Write_Byte *****************
  4572 ;; Defined at:
  4573 ;;		line 199 in file "main.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;  chr             1    wreg     unsigned char 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  chr             1    0[BANK1 ] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4588 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;Total ram usage:        1 bytes
  4592 ;; Hardware stack levels used: 1
  4593 ;; Hardware stack levels required when called: 3
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_WriteString
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601     0BE6                     _Write_Byte:	
  4602                           ;psect for function _Write_Byte
  4603                           
  4604                           
  4605                           ;incstack = 0
  4606                           ; Regs used in _Write_Byte: [wreg]
  4607                           ;Write_Byte@chr stored from wreg
  4608     0BE6  0141               	movlb	1	; select bank1
  4609     0BE7  00A0               	movwf	Write_Byte@chr^(0+128)
  4610     0BE8                     l2601:
  4611     0BE8                     l218:	
  4612                           ;main.c: 200:     while (!TRMT);
  4613                           
  4614     0BE8  0142               	movlb	2	; select bank2
  4615     0BE9  1C9E               	btfss	30,1	;volatile
  4616     0BEA  2BEC               	goto	u2411
  4617     0BEB  2BED               	goto	u2410
  4618     0BEC                     u2411:
  4619     0BEC  2BE8               	goto	l218
  4620     0BED                     u2410:
  4621     0BED                     l2603:
  4622                           
  4623                           ;main.c: 201:     TX1REG = chr;
  4624     0BED  0141               	movlb	1	; select bank1
  4625     0BEE  0820               	movf	Write_Byte@chr^(0+128),w
  4626     0BEF  0142               	movlb	2	; select bank2
  4627     0BF0  009A               	movwf	26	;volatile
  4628     0BF1                     l221:
  4629     0BF1  0008               	return
  4630     0BF2                     __end_of_Write_Byte:
  4631                           
  4632                           	psect	intentry
  4633     0004                     __pintentry:	
  4634 ;; *************** function _InterruptManager *****************
  4635 ;; Defined at:
  4636 ;;		line 299 in file "main.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;Total ram usage:        4 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 2
  4657 ;; This function calls:
  4658 ;;		_ccp1_disable
  4659 ;;		_ccp2_disable
  4660 ;;		_ignition_disable
  4661 ;;		i1___lwdiv
  4662 ;;		i1_calc_map
  4663 ;;		i1_ccp1_enable
  4664 ;;		i1_ccp2_enable
  4665 ;; This function is called by:
  4666 ;;		Interrupt level 1
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670     0004                     _InterruptManager:
  4671                           
  4672                           ;incstack = 0
  4673     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4674                           
  4675                           ; Regs used in _InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4676     0005  3180               	pagesel	$
  4677     0006                     i1l2397:
  4678                           
  4679                           ;main.c: 301:     if (CCP1IF) {
  4680     0006  014E               	movlb	14	; select bank14
  4681     0007  1F8D               	btfss	13,7	;volatile
  4682     0008  280A               	goto	u201_21
  4683     0009  280B               	goto	u201_20
  4684     000A                     u201_21:
  4685     000A  28FB               	goto	i1l2489
  4686     000B                     u201_20:
  4687     000B                     i1l2399:
  4688                           
  4689                           ;main.c: 302:         if (EG_state == EG_RUN) {
  4690     000B  0141               	movlb	1	; select bank1
  4691     000C  0365               	decf	_EG_state^(0+128),w
  4692     000D  1D03               	btfss	3,2
  4693     000E  2810               	goto	u202_21
  4694     000F  2811               	goto	u202_20
  4695     0010                     u202_21:
  4696     0010  28EC               	goto	i1l2477
  4697     0011                     u202_20:
  4698     0011                     i1l2401:
  4699                           
  4700                           ;main.c: 303:             TMR1ON = 0;
  4701     0011  0144               	movlb	4	; select bank4
  4702     0012  100E               	bcf	14,0	;volatile
  4703     0013                     i1l2403:
  4704                           
  4705                           ;main.c: 304:             TMR1H = 0x00;
  4706     0013  018D               	clrf	13	;volatile
  4707                           
  4708                           ;main.c: 305:             TMR1L = 0x00;
  4709     0014  018C               	clrf	12	;volatile
  4710     0015                     i1l2405:
  4711                           
  4712                           ;main.c: 306:             TMR1ON = 1;
  4713     0015  140E               	bsf	14,0	;volatile
  4714     0016                     i1l2407:
  4715                           
  4716                           ;main.c: 307:             ccp1_disable();
  4717     0016  318B  23B0  3180   	fcall	_ccp1_disable
  4718     0019                     i1l2409:
  4719                           
  4720                           ;main.c: 308:             t1_count = CCPR1;
  4721     0019  0146               	movlb	6	; select bank6
  4722     001A  080D               	movf	13,w	;volatile
  4723     001B  0141               	movlb	1	; select bank1
  4724     001C  00E8               	movwf	(_t1_count+1)^(0+128)
  4725     001D  0146               	movlb	6	; select bank6
  4726     001E  080C               	movf	12,w	;volatile
  4727     001F  0141               	movlb	1	; select bank1
  4728     0020  00E7               	movwf	_t1_count^(0+128)
  4729     0021                     i1l2411:
  4730                           
  4731                           ;main.c: 310:             rpm = (uint8_t) (numerator_rpm / (t1_count >> 4));
  4732     0021  0E67               	swapf	_t1_count^(0+128),w
  4733     0022  390F               	andlw	15
  4734     0023  00F0               	movwf	i1___lwdiv@divisor
  4735     0024  0E68               	swapf	(_t1_count+1)^(0+128),w
  4736     0025  39F0               	andlw	240
  4737     0026  04F0               	iorwf	i1___lwdiv@divisor,f
  4738     0027  0E68               	swapf	(_t1_count+1)^(0+128),w
  4739     0028  390F               	andlw	15
  4740     0029  00F1               	movwf	i1___lwdiv@divisor+1
  4741     002A  307C               	movlw	124
  4742     002B  00F2               	movwf	i1___lwdiv@dividend
  4743     002C  3092               	movlw	146
  4744     002D  00F3               	movwf	i1___lwdiv@dividend+1
  4745     002E  318D  250D  3180   	fcall	i1___lwdiv
  4746     0031  0870               	movf	?i1___lwdiv,w
  4747     0032  0141               	movlb	1	; select bank1
  4748     0033  00E6               	movwf	_rpm^(0+128)
  4749     0034                     i1l2413:
  4750                           
  4751                           ;main.c: 312:             if ((rpm > (15))&&(rpm <= (130))) {
  4752     0034  3010               	movlw	16
  4753     0035  0266               	subwf	_rpm^(0+128),w
  4754     0036  1C03               	skipc
  4755     0037  2839               	goto	u203_21
  4756     0038  283A               	goto	u203_20
  4757     0039                     u203_21:
  4758     0039  2885               	goto	i1l2435
  4759     003A                     u203_20:
  4760     003A                     i1l2415:
  4761     003A  3083               	movlw	131
  4762     003B  0266               	subwf	_rpm^(0+128),w
  4763     003C  1803               	skipnc
  4764     003D  283F               	goto	u204_21
  4765     003E  2840               	goto	u204_20
  4766     003F                     u204_21:
  4767     003F  2885               	goto	i1l2435
  4768     0040                     u204_20:
  4769     0040                     i1l2417:
  4770                           
  4771                           ;main.c: 313:                 ig_counter = IG_table[rpm];
  4772     0040  0866               	movf	_rpm^(0+128),w
  4773     0041  0140               	movlb	0	; select bank0
  4774     0042  00C4               	movwf	??_InterruptManager
  4775     0043  01C5               	clrf	??_InterruptManager+1
  4776     0044  35C4               	lslf	??_InterruptManager,f
  4777     0045  0DC5               	rlf	??_InterruptManager+1,f
  4778     0046  3067               	movlw	103
  4779     0047  00C6               	movwf	??_InterruptManager+2
  4780     0048  3022               	movlw	34
  4781     0049  00C7               	movwf	??_InterruptManager+3
  4782     004A  0844               	movf	??_InterruptManager,w
  4783     004B  0746               	addwf	??_InterruptManager+2,w
  4784     004C  0086               	movwf	6
  4785     004D  0845               	movf	??_InterruptManager+1,w
  4786     004E  3D47               	addwfc	??_InterruptManager+3,w
  4787     004F  0087               	movwf	7
  4788     0050  3F40               	moviw [0]fsr1
  4789     0051  0141               	movlb	1	; select bank1
  4790     0052  00E2               	movwf	_ig_counter^(0+128)
  4791     0053  3F41               	moviw [1]fsr1
  4792     0054  00E3               	movwf	(_ig_counter+1)^(0+128)
  4793     0055                     i1l2419:
  4794                           
  4795                           ;main.c: 314:                 LATC2 = (0);
  4796     0055  0140               	movlb	0	; select bank0
  4797     0056  111A               	bcf	26,2	;volatile
  4798     0057                     i1l2421:
  4799                           
  4800                           ;main.c: 315:                 if ((ig_counter - 15) > TMR1) {
  4801     0057  0141               	movlb	1	; select bank1
  4802     0058  0862               	movf	_ig_counter^(0+128),w
  4803     0059  3EF1               	addlw	241
  4804     005A  0140               	movlb	0	; select bank0
  4805     005B  00C4               	movwf	??_InterruptManager
  4806     005C  30FF               	movlw	255
  4807     005D  0141               	movlb	1	; select bank1
  4808     005E  3D63               	addwfc	(_ig_counter+1)^(0+128),w
  4809     005F  0140               	movlb	0	; select bank0
  4810     0060  00C5               	movwf	??_InterruptManager+1
  4811     0061  0845               	movf	??_InterruptManager+1,w
  4812     0062  0144               	movlb	4	; select bank4
  4813     0063  020D               	subwf	13,w	;volatile
  4814     0064  1D03               	skipz
  4815     0065  286A               	goto	u205_25
  4816     0066  0140               	movlb	0	; select bank0
  4817     0067  0844               	movf	??_InterruptManager,w
  4818     0068  0144               	movlb	4	; select bank4
  4819     0069  020C               	subwf	12,w	;volatile
  4820     006A                     u205_25:
  4821     006A  1803               	skipnc
  4822     006B  286D               	goto	u205_21
  4823     006C  286E               	goto	u205_20
  4824     006D                     u205_21:
  4825     006D  287A               	goto	i1l2427
  4826     006E                     u205_20:
  4827     006E                     i1l2423:
  4828                           
  4829                           ;main.c: 316:                     CCPR2 = ig_counter;
  4830     006E  0141               	movlb	1	; select bank1
  4831     006F  0863               	movf	(_ig_counter+1)^(0+128),w
  4832     0070  0146               	movlb	6	; select bank6
  4833     0071  0091               	movwf	17	;volatile
  4834     0072  0141               	movlb	1	; select bank1
  4835     0073  0862               	movf	_ig_counter^(0+128),w
  4836     0074  0146               	movlb	6	; select bank6
  4837     0075  0090               	movwf	16	;volatile
  4838     0076                     i1l2425:
  4839                           
  4840                           ;main.c: 317:                     ccp2_enable();
  4841     0076  318B  23BA  3180   	fcall	i1_ccp2_enable
  4842                           
  4843                           ;main.c: 318:                 } else {
  4844     0079  288A               	goto	i1l2439
  4845     007A                     i1l2427:
  4846                           
  4847                           ;main.c: 319:                     ccp2_disable();
  4848     007A  318B  23B5  3180   	fcall	_ccp2_disable
  4849     007D                     i1l2429:
  4850                           
  4851                           ;main.c: 320:                     LATC1 = (1);
  4852     007D  0140               	movlb	0	; select bank0
  4853     007E  149A               	bsf	26,1	;volatile
  4854     007F                     i1l2431:
  4855                           
  4856                           ;main.c: 321:                     _delay((unsigned long)((60)*(32000000/4000000.0)));
  4857     007F  30A0               	movlw	160
  4858     0080                     u261_27:
  4859     0080  0B89               	decfsz	9,f
  4860     0081  2880               	goto	u261_27
  4861     0082                     i1l2433:
  4862                           
  4863                           ;main.c: 322:                     LATC1 = (0);
  4864     0082  0140               	movlb	0	; select bank0
  4865     0083  109A               	bcf	26,1	;volatile
  4866     0084  288A               	goto	i1l2439
  4867     0085                     i1l2435:
  4868                           
  4869                           ;main.c: 326:                 ccp2_disable();
  4870     0085  318B  23B5  3180   	fcall	_ccp2_disable
  4871     0088                     i1l2437:
  4872                           
  4873                           ;main.c: 327:                 LATC2 = (0);
  4874     0088  0140               	movlb	0	; select bank0
  4875     0089  111A               	bcf	26,2	;volatile
  4876     008A                     i1l2439:
  4877                           
  4878                           ;main.c: 331:             if (revlimit_state == REVLIMIT_ENABLE) {
  4879     008A  0140               	movlb	0	; select bank0
  4880     008B  0857               	movf	_revlimit_state,w
  4881     008C  1D03               	btfss	3,2
  4882     008D  288F               	goto	u206_21
  4883     008E  2890               	goto	u206_20
  4884     008F                     u206_21:
  4885     008F  28BE               	goto	i1l2457
  4886     0090                     u206_20:
  4887     0090                     i1l2441:
  4888                           
  4889                           ;main.c: 332:                 if (rpm > (97)) {
  4890     0090  3062               	movlw	98
  4891     0091  0141               	movlb	1	; select bank1
  4892     0092  0266               	subwf	_rpm^(0+128),w
  4893     0093  1C03               	skipc
  4894     0094  2896               	goto	u207_21
  4895     0095  2897               	goto	u207_20
  4896     0096                     u207_21:
  4897     0096  28A5               	goto	i1l2447
  4898     0097                     u207_20:
  4899     0097                     i1l2443:
  4900                           
  4901                           ;main.c: 333:                     orev_counter++;
  4902     0097  3001               	movlw	1
  4903     0098  0140               	movlb	0	; select bank0
  4904     0099  00C4               	movwf	??_InterruptManager
  4905     009A  0844               	movf	??_InterruptManager,w
  4906     009B  07D8               	addwf	_orev_counter,f
  4907                           
  4908                           ;main.c: 334:                     if (orev_counter == 1) ignition_disable();
  4909     009C  0358               	decf	_orev_counter,w
  4910     009D  1D03               	btfss	3,2
  4911     009E  28A0               	goto	u208_21
  4912     009F  28A1               	goto	u208_20
  4913     00A0                     u208_21:
  4914     00A0  28BE               	goto	i1l2457
  4915     00A1                     u208_20:
  4916     00A1                     i1l2445:
  4917     00A1  318B  23DC  3180   	fcall	_ignition_disable
  4918     00A4  28BE               	goto	i1l2457
  4919     00A5                     i1l2447:
  4920     00A5  3063               	movlw	99
  4921     00A6  0266               	subwf	_rpm^(0+128),w
  4922     00A7  1C03               	skipc
  4923     00A8  28AA               	goto	u209_21
  4924     00A9  28AB               	goto	u209_20
  4925     00AA                     u209_21:
  4926     00AA  28B7               	goto	i1l2453
  4927     00AB                     u209_20:
  4928     00AB                     i1l2449:
  4929                           
  4930                           ;main.c: 336:                     orev_counter++;
  4931     00AB  3001               	movlw	1
  4932     00AC  0140               	movlb	0	; select bank0
  4933     00AD  00C4               	movwf	??_InterruptManager
  4934     00AE  0844               	movf	??_InterruptManager,w
  4935     00AF  07D8               	addwf	_orev_counter,f
  4936                           
  4937                           ;main.c: 337:                     if (orev_counter == 2) ignition_disable();
  4938     00B0  3002               	movlw	2
  4939     00B1  0658               	xorwf	_orev_counter,w
  4940     00B2  1D03               	btfss	3,2
  4941     00B3  28B5               	goto	u210_21
  4942     00B4  28B6               	goto	u210_20
  4943     00B5                     u210_21:
  4944     00B5  28BE               	goto	i1l273
  4945     00B6                     u210_20:
  4946     00B6  28A1               	goto	i1l2445
  4947     00B7                     i1l2453:
  4948     00B7  3064               	movlw	100
  4949     00B8  0266               	subwf	_rpm^(0+128),w
  4950     00B9  1C03               	skipc
  4951     00BA  28BC               	goto	u211_21
  4952     00BB  28BD               	goto	u211_20
  4953     00BC                     u211_21:
  4954     00BC  28BE               	goto	i1l273
  4955     00BD                     u211_20:
  4956     00BD  28A1               	goto	i1l2445
  4957     00BE                     i1l273:
  4958     00BE                     i1l2457:
  4959                           
  4960                           ;main.c: 342:             if (pwj_state == PWJ_ENABLE) {
  4961     00BE  0140               	movlb	0	; select bank0
  4962     00BF  0856               	movf	_pwj_state,w
  4963     00C0  1D03               	btfss	3,2
  4964     00C1  28C3               	goto	u212_21
  4965     00C2  28C4               	goto	u212_20
  4966     00C3                     u212_21:
  4967     00C3  28D7               	goto	i1l2467
  4968     00C4                     u212_20:
  4969     00C4                     i1l2459:
  4970                           
  4971                           ;main.c: 343:                 if (rpm > (85)) LATA0 = 1;
  4972     00C4  3056               	movlw	86
  4973     00C5  0141               	movlb	1	; select bank1
  4974     00C6  0266               	subwf	_rpm^(0+128),w
  4975     00C7  1C03               	skipc
  4976     00C8  28CA               	goto	u213_21
  4977     00C9  28CB               	goto	u213_20
  4978     00CA                     u213_21:
  4979     00CA  28CE               	goto	i1l2463
  4980     00CB                     u213_20:
  4981     00CB                     i1l2461:
  4982     00CB  0140               	movlb	0	; select bank0
  4983     00CC  1418               	bsf	24,0	;volatile
  4984     00CD  28F9               	goto	i1l2487
  4985     00CE                     i1l2463:
  4986     00CE  3053               	movlw	83
  4987     00CF  0266               	subwf	_rpm^(0+128),w
  4988     00D0  1803               	skipnc
  4989     00D1  28D3               	goto	u214_21
  4990     00D2  28D4               	goto	u214_20
  4991     00D3                     u214_21:
  4992     00D3  28EB               	goto	i1l282
  4993     00D4                     u214_20:
  4994     00D4                     i1l2465:
  4995     00D4  0140               	movlb	0	; select bank0
  4996     00D5  1018               	bcf	24,0	;volatile
  4997     00D6  28F9               	goto	i1l2487
  4998     00D7                     i1l2467:
  4999     00D7  0356               	decf	_pwj_state,w
  5000     00D8  1D03               	btfss	3,2
  5001     00D9  28DB               	goto	u215_21
  5002     00DA  28DC               	goto	u215_20
  5003     00DB                     u215_21:
  5004     00DB  28F9               	goto	i1l2487
  5005     00DC                     u215_20:
  5006     00DC                     i1l2469:
  5007                           
  5008                           ;main.c: 346:                 if (rpm > (30)) LATA0 = 1;
  5009     00DC  301F               	movlw	31
  5010     00DD  0141               	movlb	1	; select bank1
  5011     00DE  0266               	subwf	_rpm^(0+128),w
  5012     00DF  1C03               	skipc
  5013     00E0  28E2               	goto	u216_21
  5014     00E1  28E3               	goto	u216_20
  5015     00E2                     u216_21:
  5016     00E2  28E4               	goto	i1l2473
  5017     00E3                     u216_20:
  5018     00E3  28CB               	goto	i1l2461
  5019     00E4                     i1l2473:
  5020     00E4  301C               	movlw	28
  5021     00E5  0266               	subwf	_rpm^(0+128),w
  5022     00E6  1803               	skipnc
  5023     00E7  28E9               	goto	u217_21
  5024     00E8  28EA               	goto	u217_20
  5025     00E9                     u217_21:
  5026     00E9  28F9               	goto	i1l2487
  5027     00EA                     u217_20:
  5028     00EA  28D4               	goto	i1l2465
  5029     00EB                     i1l282:
  5030                           
  5031                           ;main.c: 349:         } else if (EG_state == EG_LOW) {
  5032     00EB  28F9               	goto	i1l2487
  5033     00EC                     i1l2477:
  5034     00EC  0865               	movf	_EG_state^(0+128),w
  5035     00ED  1D03               	btfss	3,2
  5036     00EE  28F0               	goto	u218_21
  5037     00EF  28F1               	goto	u218_20
  5038     00F0                     u218_21:
  5039     00F0  28F9               	goto	i1l2487
  5040     00F1                     u218_20:
  5041     00F1                     i1l2479:
  5042                           
  5043                           ;main.c: 350:             TMR1ON = 0;
  5044     00F1  0144               	movlb	4	; select bank4
  5045     00F2  100E               	bcf	14,0	;volatile
  5046     00F3                     i1l2481:
  5047                           
  5048                           ;main.c: 351:             TMR1H = 0x00;
  5049     00F3  018D               	clrf	13	;volatile
  5050                           
  5051                           ;main.c: 352:             TMR1L = 0x00;
  5052     00F4  018C               	clrf	12	;volatile
  5053     00F5                     i1l2483:
  5054                           
  5055                           ;main.c: 353:             TMR1ON = 1;
  5056     00F5  140E               	bsf	14,0	;volatile
  5057     00F6                     i1l2485:
  5058                           
  5059                           ;main.c: 354:             EG_state = EG_RUN;
  5060     00F6  0141               	movlb	1	; select bank1
  5061     00F7  01E5               	clrf	_EG_state^(0+128)
  5062     00F8  0AE5               	incf	_EG_state^(0+128),f
  5063     00F9                     i1l2487:
  5064                           
  5065                           ;main.c: 356:         CCP1IF = 0;
  5066     00F9  014E               	movlb	14	; select bank14
  5067     00FA  138D               	bcf	13,7	;volatile
  5068     00FB                     i1l2489:
  5069                           
  5070                           ;main.c: 359:     if (CCP2IF) {
  5071     00FB  1F8E               	btfss	14,7	;volatile
  5072     00FC  28FE               	goto	u219_21
  5073     00FD  28FF               	goto	u219_20
  5074     00FE                     u219_21:
  5075     00FE  2914               	goto	i1l2501
  5076     00FF                     u219_20:
  5077     00FF                     i1l2491:
  5078                           
  5079                           ;main.c: 360:         _delay((unsigned long)((60)*(32000000/4000000.0)));
  5080     00FF  30A0               	movlw	160
  5081     0100                     u262_27:
  5082     0100  0B89               	decfsz	9,f
  5083     0101  2900               	goto	u262_27
  5084     0102                     i1l2493:
  5085                           
  5086                           ;main.c: 361:         ccp2_disable();
  5087     0102  318B  23B5  3180   	fcall	_ccp2_disable
  5088     0105                     i1l2495:
  5089                           
  5090                           ;main.c: 362:         LATC1 = 0;
  5091     0105  0140               	movlb	0	; select bank0
  5092     0106  109A               	bcf	26,1	;volatile
  5093                           
  5094                           ;main.c: 363:         ccp1_enable();
  5095     0107  318B  23CA  3180   	fcall	i1_ccp1_enable
  5096     010A                     i1l2497:
  5097                           
  5098                           ;main.c: 364:         if (rpm < 30) calc_map();
  5099     010A  301E               	movlw	30
  5100     010B  0141               	movlb	1	; select bank1
  5101     010C  0266               	subwf	_rpm^(0+128),w
  5102     010D  1803               	skipnc
  5103     010E  2910               	goto	u220_21
  5104     010F  2911               	goto	u220_20
  5105     0110                     u220_21:
  5106     0110  2914               	goto	i1l2501
  5107     0111                     u220_20:
  5108     0111                     i1l2499:
  5109     0111  3181  21C6  3180   	fcall	i1_calc_map
  5110     0114                     i1l2501:
  5111                           
  5112                           ;main.c: 369:     if (IOCAF2) {
  5113     0114  017E               	movlb	62	; select bank62
  5114     0115  1D3F               	btfss	63,2	;volatile
  5115     0116  2918               	goto	u221_21
  5116     0117  2919               	goto	u221_20
  5117     0118                     u221_21:
  5118     0118  295B               	goto	i1l2519
  5119     0119                     u221_20:
  5120     0119                     i1l2503:
  5121                           
  5122                           ;main.c: 370:         if (EG_state == EG_RUN) {
  5123     0119  0141               	movlb	1	; select bank1
  5124     011A  0365               	decf	_EG_state^(0+128),w
  5125     011B  1D03               	btfss	3,2
  5126     011C  291E               	goto	u222_21
  5127     011D  291F               	goto	u222_20
  5128     011E                     u222_21:
  5129     011E  2959               	goto	i1l2517
  5130     011F                     u222_20:
  5131     011F                     i1l2505:
  5132                           
  5133                           ;main.c: 371:             pu1_2_period_count = TMR1;
  5134     011F  0144               	movlb	4	; select bank4
  5135     0120  080D               	movf	13,w	;volatile
  5136     0121  0140               	movlb	0	; select bank0
  5137     0122  00D5               	movwf	_pu1_2_period_count+1
  5138     0123  0144               	movlb	4	; select bank4
  5139     0124  080C               	movf	12,w	;volatile
  5140     0125  0140               	movlb	0	; select bank0
  5141     0126  00D4               	movwf	_pu1_2_period_count
  5142                           
  5143                           ;main.c: 372:             if ((rpm < 25)&&((t1_count - pu1_2_period_count)<(pu1_2_period
      +                          _count << 2))) {
  5144     0127  3019               	movlw	25
  5145     0128  0141               	movlb	1	; select bank1
  5146     0129  0266               	subwf	_rpm^(0+128),w
  5147     012A  1803               	skipnc
  5148     012B  292D               	goto	u223_21
  5149     012C  292E               	goto	u223_20
  5150     012D                     u223_21:
  5151     012D  294C               	goto	i1l2511
  5152     012E                     u223_20:
  5153     012E                     i1l2507:
  5154     012E  0140               	movlb	0	; select bank0
  5155     012F  0855               	movf	_pu1_2_period_count+1,w
  5156     0130  00C5               	movwf	??_InterruptManager+1
  5157     0131  0854               	movf	_pu1_2_period_count,w
  5158     0132  00C4               	movwf	??_InterruptManager
  5159     0133  35C4               	lslf	??_InterruptManager,f
  5160     0134  0DC5               	rlf	??_InterruptManager+1,f
  5161     0135  35C4               	lslf	??_InterruptManager,f
  5162     0136  0DC5               	rlf	??_InterruptManager+1,f
  5163     0137  0854               	movf	_pu1_2_period_count,w
  5164     0138  0141               	movlb	1	; select bank1
  5165     0139  0267               	subwf	_t1_count^(0+128),w
  5166     013A  0140               	movlb	0	; select bank0
  5167     013B  00C6               	movwf	??_InterruptManager+2
  5168     013C  0855               	movf	_pu1_2_period_count+1,w
  5169     013D  0141               	movlb	1	; select bank1
  5170     013E  3B68               	subwfb	(_t1_count+1)^(0+128),w
  5171     013F  0140               	movlb	0	; select bank0
  5172     0140  00C7               	movwf	??_InterruptManager+3
  5173     0141  0845               	movf	??_InterruptManager+1,w
  5174     0142  0247               	subwf	??_InterruptManager+3,w
  5175     0143  1D03               	skipz
  5176     0144  2947               	goto	u224_25
  5177     0145  0844               	movf	??_InterruptManager,w
  5178     0146  0246               	subwf	??_InterruptManager+2,w
  5179     0147                     u224_25:
  5180     0147  1803               	skipnc
  5181     0148  294A               	goto	u224_21
  5182     0149  294B               	goto	u224_20
  5183     014A                     u224_21:
  5184     014A  294C               	goto	i1l2511
  5185     014B                     u224_20:
  5186     014B                     i1l2509:
  5187                           
  5188                           ;main.c: 373:                 LATC2 = (1);
  5189     014B  151A               	bsf	26,2	;volatile
  5190     014C                     i1l2511:
  5191                           
  5192                           ;main.c: 375:             ccp1_enable();
  5193     014C  318B  23CA  3180   	fcall	i1_ccp1_enable
  5194     014F                     i1l2513:
  5195                           
  5196                           ;main.c: 376:             if (rpm < 40) calc_map();
  5197     014F  3028               	movlw	40
  5198     0150  0141               	movlb	1	; select bank1
  5199     0151  0266               	subwf	_rpm^(0+128),w
  5200     0152  1803               	skipnc
  5201     0153  2955               	goto	u225_21
  5202     0154  2956               	goto	u225_20
  5203     0155                     u225_21:
  5204     0155  2959               	goto	i1l2517
  5205     0156                     u225_20:
  5206     0156                     i1l2515:
  5207     0156  3181  21C6  3180   	fcall	i1_calc_map
  5208     0159                     i1l2517:
  5209                           
  5210                           ;main.c: 378:         IOCAF2 = 0;
  5211     0159  017E               	movlb	62	; select bank62
  5212     015A  113F               	bcf	63,2	;volatile
  5213     015B                     i1l2519:
  5214                           
  5215                           ;main.c: 381:     if (TMR1IF) {
  5216     015B  014E               	movlb	14	; select bank14
  5217     015C  1E8D               	btfss	13,5	;volatile
  5218     015D  295F               	goto	u226_21
  5219     015E  2960               	goto	u226_20
  5220     015F                     u226_21:
  5221     015F  2974               	goto	i1l295
  5222     0160                     u226_20:
  5223     0160                     i1l2521:
  5224                           
  5225                           ;main.c: 382:         EG_state = EG_LOW;
  5226     0160  0141               	movlb	1	; select bank1
  5227     0161  01E5               	clrf	_EG_state^(0+128)
  5228     0162                     i1l2523:
  5229                           
  5230                           ;main.c: 383:         TMR1ON = 0;
  5231     0162  0144               	movlb	4	; select bank4
  5232     0163  100E               	bcf	14,0	;volatile
  5233                           
  5234                           ;main.c: 384:         TMR1H = 0x00;
  5235     0164  018D               	clrf	13	;volatile
  5236                           
  5237                           ;main.c: 385:         TMR1L = 0x00;
  5238     0165  018C               	clrf	12	;volatile
  5239                           
  5240                           ;main.c: 386:         CCPR1 = 0;
  5241     0166  0146               	movlb	6	; select bank6
  5242     0167  018C               	clrf	12	;volatile
  5243     0168  018D               	clrf	13	;volatile
  5244                           
  5245                           ;main.c: 387:         CCPR2 = 0;
  5246     0169  0190               	clrf	16	;volatile
  5247     016A  0191               	clrf	17	;volatile
  5248     016B                     i1l2525:
  5249                           
  5250                           ;main.c: 388:         TMR1IF = 0;
  5251     016B  014E               	movlb	14	; select bank14
  5252     016C  128D               	bcf	13,5	;volatile
  5253     016D                     i1l2527:
  5254                           
  5255                           ;main.c: 389:         LATA0 = 0;
  5256     016D  0140               	movlb	0	; select bank0
  5257     016E  1018               	bcf	24,0	;volatile
  5258     016F                     i1l2529:
  5259                           
  5260                           ;main.c: 390:         ccp2_disable();
  5261     016F  318B  23B5  3180   	fcall	_ccp2_disable
  5262     0172                     i1l2531:
  5263                           
  5264                           ;main.c: 391:         LATC1 = 0;
  5265     0172  0140               	movlb	0	; select bank0
  5266     0173  109A               	bcf	26,1	;volatile
  5267     0174                     i1l295:	
  5268                           ;main.c: 392:     }
  5269                           
  5270     0174  0064               	clrwdt	;# 
  5271     0175                     i1l296:
  5272     0175  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5273     0176  0009               	retfie
  5274     0177                     __end_of_InterruptManager:
  5275                           
  5276                           	psect	text21
  5277     0BBA                     __ptext21:	
  5278 ;; *************** function i1_ccp2_enable *****************
  5279 ;; Defined at:
  5280 ;;		line 432 in file "main.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		wreg
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;Total ram usage:        0 bytes
  5299 ;; Hardware stack levels used: 1
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_InterruptManager
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307     0BBA                     i1_ccp2_enable:	
  5308                           ;psect for function i1_ccp2_enable
  5309                           
  5310     0BBA                     i1l2375:	
  5311                           ;incstack = 0
  5312                           ; Regs used in i1_ccp2_enable: [wreg]
  5313                           
  5314                           
  5315                           ;main.c: 433:     CCP2IE = 0;
  5316     0BBA  014E               	movlb	14	; select bank14
  5317     0BBB  1398               	bcf	24,7	;volatile
  5318     0BBC                     i1l2377:
  5319                           
  5320                           ;main.c: 435:     CCP2CON = 0x88;
  5321     0BBC  3088               	movlw	136
  5322     0BBD  0146               	movlb	6	; select bank6
  5323     0BBE  0092               	movwf	18	;volatile
  5324     0BBF                     i1l2379:
  5325                           
  5326                           ;main.c: 436:     CCP2IE = 1;
  5327     0BBF  014E               	movlb	14	; select bank14
  5328     0BC0  1798               	bsf	24,7	;volatile
  5329     0BC1                     i1l308:
  5330     0BC1  0008               	return
  5331     0BC2                     __end_ofi1_ccp2_enable:
  5332                           
  5333                           	psect	text22
  5334     01C6                     __ptext22:	
  5335 ;; *************** function i1_calc_map *****************
  5336 ;; Defined at:
  5337 ;;		line 219 in file "main.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;		None
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  temp1           3   18[BANK0 ] unsigned um
  5342 ;;  temp            3   15[BANK0 ] unsigned um
  5343 ;;  p4y             2   29[BANK0 ] unsigned short 
  5344 ;;  p3y             2   27[BANK0 ] unsigned short 
  5345 ;;  p2y             2   25[BANK0 ] unsigned short 
  5346 ;;  p1y             2   23[BANK0 ] unsigned short 
  5347 ;;  a               1   35[BANK0 ] unsigned char 
  5348 ;;  p4x             1   34[BANK0 ] unsigned char 
  5349 ;;  p3x             1   33[BANK0 ] unsigned char 
  5350 ;;  p2x             1   32[BANK0 ] unsigned char 
  5351 ;;  p1x             1   31[BANK0 ] unsigned char 
  5352 ;;  coeff_p3_p4     1   22[BANK0 ] unsigned char 
  5353 ;;  coeff_p1_p2     1   21[BANK0 ] unsigned char 
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      void 
  5356 ;; Registers used:
  5357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;Total ram usage:       33 bytes
  5368 ;; Hardware stack levels used: 1
  5369 ;; Hardware stack levels required when called: 1
  5370 ;; This function calls:
  5371 ;;		i1___lwdiv
  5372 ;;		i1___tmul
  5373 ;;		i1___wmul
  5374 ;; This function is called by:
  5375 ;;		_InterruptManager
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379     01C6                     i1_calc_map:	
  5380                           ;psect for function i1_calc_map
  5381                           
  5382     01C6                     i1l2287:	
  5383                           ;incstack = 0
  5384                           ; Regs used in i1_calc_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5385                           
  5386                           
  5387                           ;main.c: 220:     uint8_t p1x, p2x, p3x, p4x;;main.c: 221:     uint16_t p1y, p2y, p3y, p
      +                          4y;;main.c: 222:     uint8_t coeff_p1_p2, coeff_p3_p4;;main.c: 223:     uint8_t a;;main.
      +                          c: 224:     uint24_t temp;;main.c: 225:     uint24_t temp1;;main.c: 227:     p1x = adv_s
      +                          tart_rpm_table[sw1_pos];
  5388     01C6  0141               	movlb	1	; select bank1
  5389     01C7  086C               	movf	_sw1_pos^(0+128),w
  5390     01C8  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  5391     01C9  0084               	movwf	4
  5392     01CA  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  5393     01CB  1803               	skipnc
  5394     01CC  3E01               	addlw	1
  5395     01CD  0085               	movwf	5
  5396     01CE  0800               	movf	0,w	;code access
  5397     01CF  0140               	movlb	0	; select bank0
  5398     01D0  00BF               	movwf	i1calc_map@p1x
  5399     01D1                     i1l2289:
  5400                           
  5401                           ;main.c: 228:     p2x = adv_start_rpm_table[sw1_pos] + max_adv_grad_table[sw3_pos];
  5402     01D1  0141               	movlb	1	; select bank1
  5403     01D2  086A               	movf	_sw3_pos^(0+128),w
  5404     01D3  3E16               	addlw	low (_max_adv_grad_table| (0+32768))
  5405     01D4  0084               	movwf	4
  5406     01D5  3090               	movlw	high (_max_adv_grad_table| (0+32768))
  5407     01D6  1803               	skipnc
  5408     01D7  3E01               	addlw	1
  5409     01D8  0085               	movwf	5
  5410     01D9  0800               	movf	0,w	;code access
  5411     01DA  0140               	movlb	0	; select bank0
  5412     01DB  00A3               	movwf	??i1_calc_map
  5413     01DC  0141               	movlb	1	; select bank1
  5414     01DD  086C               	movf	_sw1_pos^(0+128),w
  5415     01DE  3E1A               	addlw	low (_adv_start_rpm_table| (0+32768))
  5416     01DF  0084               	movwf	4
  5417     01E0  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  5418     01E1  1803               	skipnc
  5419     01E2  3E01               	addlw	1
  5420     01E3  0085               	movwf	5
  5421     01E4  0800               	movf	0,w	;code access
  5422     01E5  0140               	movlb	0	; select bank0
  5423     01E6  0723               	addwf	??i1_calc_map,w
  5424     01E7  00C0               	movwf	i1calc_map@p2x
  5425     01E8                     i1l2291:
  5426                           
  5427                           ;main.c: 229:     p3x = (55);
  5428     01E8  3037               	movlw	55
  5429     01E9  00C1               	movwf	i1calc_map@p3x
  5430     01EA                     i1l2293:
  5431                           
  5432                           ;main.c: 230:     p4x = (80);
  5433     01EA  3050               	movlw	80
  5434     01EB  00C2               	movwf	i1calc_map@p4x
  5435     01EC                     i1l2295:
  5436                           
  5437                           ;main.c: 231:     p1y = (500);
  5438     01EC  30F4               	movlw	244
  5439     01ED  00B7               	movwf	i1calc_map@p1y
  5440     01EE  3001               	movlw	1
  5441     01EF  00B8               	movwf	i1calc_map@p1y+1
  5442     01F0                     i1l2297:
  5443                           
  5444                           ;main.c: 232:     p2y = max_adv_table[sw2_pos];
  5445     01F0  0141               	movlb	1	; select bank1
  5446     01F1  086B               	movf	_sw2_pos^(0+128),w
  5447     01F2  0140               	movlb	0	; select bank0
  5448     01F3  00A3               	movwf	??i1_calc_map
  5449     01F4  01A4               	clrf	??i1_calc_map+1
  5450     01F5  35A3               	lslf	??i1_calc_map,f
  5451     01F6  0DA4               	rlf	??i1_calc_map+1,f
  5452     01F7  3008               	movlw	low _max_adv_table
  5453     01F8  0723               	addwf	??i1_calc_map,w
  5454     01F9  0084               	movwf	4
  5455     01FA  3010               	movlw	high _max_adv_table
  5456     01FB  3D24               	addwfc	??i1_calc_map+1,w
  5457     01FC  3880               	iorlw	128
  5458     01FD  0085               	movwf	5
  5459     01FE  3F00               	moviw [0]fsr0
  5460     01FF  00B9               	movwf	i1calc_map@p2y
  5461     0200  3F01               	moviw [1]fsr0
  5462     0201  00BA               	movwf	i1calc_map@p2y+1
  5463     0202                     i1l2299:
  5464                           
  5465                           ;main.c: 233:     p3y = p2y;
  5466     0202  083A               	movf	i1calc_map@p2y+1,w
  5467     0203  00BC               	movwf	i1calc_map@p3y+1
  5468     0204  0839               	movf	i1calc_map@p2y,w
  5469     0205  00BB               	movwf	i1calc_map@p3y
  5470     0206                     i1l2301:
  5471                           
  5472                           ;main.c: 234:     p4y = min_ret_table[sw4_pos];
  5473     0206  0141               	movlb	1	; select bank1
  5474     0207  0869               	movf	_sw4_pos^(0+128),w
  5475     0208  0140               	movlb	0	; select bank0
  5476     0209  00A3               	movwf	??i1_calc_map
  5477     020A  01A4               	clrf	??i1_calc_map+1
  5478     020B  35A3               	lslf	??i1_calc_map,f
  5479     020C  0DA4               	rlf	??i1_calc_map+1,f
  5480     020D  3000               	movlw	low _min_ret_table
  5481     020E  0723               	addwf	??i1_calc_map,w
  5482     020F  0084               	movwf	4
  5483     0210  3010               	movlw	high _min_ret_table
  5484     0211  3D24               	addwfc	??i1_calc_map+1,w
  5485     0212  3880               	iorlw	128
  5486     0213  0085               	movwf	5
  5487     0214  3F00               	moviw [0]fsr0
  5488     0215  00BD               	movwf	i1calc_map@p4y
  5489     0216  3F01               	moviw [1]fsr0
  5490     0217  00BE               	movwf	i1calc_map@p4y+1
  5491     0218                     i1l2303:
  5492                           
  5493                           ;main.c: 235:     coeff_p1_p2 = (uint8_t) ((p2y - p1y) / (p2x - p1x));
  5494     0218  083F               	movf	i1calc_map@p1x,w
  5495     0219  0240               	subwf	i1calc_map@p2x,w
  5496     021A  00F0               	movwf	i1___lwdiv@divisor
  5497     021B  01F1               	clrf	i1___lwdiv@divisor+1
  5498     021C  1C03               	skipc
  5499     021D  03F1               	decf	i1___lwdiv@divisor+1,f
  5500     021E  0839               	movf	i1calc_map@p2y,w
  5501     021F  3E0C               	addlw	12
  5502     0220  00F2               	movwf	i1___lwdiv@dividend
  5503     0221  30FE               	movlw	254
  5504     0222  3D3A               	addwfc	i1calc_map@p2y+1,w
  5505     0223  00F3               	movwf	i1___lwdiv@dividend+1
  5506     0224  318D  250D  3181   	fcall	i1___lwdiv
  5507     0227  0870               	movf	?i1___lwdiv,w
  5508     0228  0140               	movlb	0	; select bank0
  5509     0229  00B5               	movwf	i1calc_map@coeff_p1_p2
  5510     022A                     i1l2305:
  5511                           
  5512                           ;main.c: 236:     coeff_p3_p4 = (uint8_t) ((p3y - p4y) / (p4x - p3x));
  5513     022A  3019               	movlw	25
  5514     022B  00F0               	movwf	i1___lwdiv@divisor
  5515     022C  3000               	movlw	0
  5516     022D  00F1               	movwf	i1___lwdiv@divisor+1
  5517     022E  083D               	movf	i1calc_map@p4y,w
  5518     022F  023B               	subwf	i1calc_map@p3y,w
  5519     0230  00F2               	movwf	i1___lwdiv@dividend
  5520     0231  083E               	movf	i1calc_map@p4y+1,w
  5521     0232  3B3C               	subwfb	i1calc_map@p3y+1,w
  5522     0233  00F3               	movwf	i1___lwdiv@dividend+1
  5523     0234  318D  250D  3181   	fcall	i1___lwdiv
  5524     0237  0870               	movf	?i1___lwdiv,w
  5525     0238  0140               	movlb	0	; select bank0
  5526     0239  00B6               	movwf	i1calc_map@coeff_p3_p4
  5527     023A                     i1l2307:
  5528                           
  5529                           ;main.c: 239:     for (a = 15; a <= p1x; a++) {
  5530     023A  300F               	movlw	15
  5531     023B  00C3               	movwf	i1calc_map@a
  5532     023C  2A54               	goto	i1l2313
  5533     023D                     i1l2309:
  5534                           
  5535                           ;main.c: 240:         IG_table[a] = p1y;
  5536     023D  0843               	movf	i1calc_map@a,w
  5537     023E  00A3               	movwf	??i1_calc_map
  5538     023F  01A4               	clrf	??i1_calc_map+1
  5539     0240  35A3               	lslf	??i1_calc_map,f
  5540     0241  0DA4               	rlf	??i1_calc_map+1,f
  5541     0242  3067               	movlw	103
  5542     0243  00A5               	movwf	??i1_calc_map+2
  5543     0244  3022               	movlw	34
  5544     0245  00A6               	movwf	??i1_calc_map+3
  5545     0246  0823               	movf	??i1_calc_map,w
  5546     0247  0725               	addwf	??i1_calc_map+2,w
  5547     0248  0086               	movwf	6
  5548     0249  0824               	movf	??i1_calc_map+1,w
  5549     024A  3D26               	addwfc	??i1_calc_map+3,w
  5550     024B  0087               	movwf	7
  5551     024C  0837               	movf	i1calc_map@p1y,w
  5552     024D  3FC0               	movwi [0]fsr1
  5553     024E  0838               	movf	i1calc_map@p1y+1,w
  5554     024F  3FC1               	movwi [1]fsr1
  5555     0250                     i1l2311:
  5556                           
  5557                           ;main.c: 241:     }
  5558     0250  3001               	movlw	1
  5559     0251  00A3               	movwf	??i1_calc_map
  5560     0252  0823               	movf	??i1_calc_map,w
  5561     0253  07C3               	addwf	i1calc_map@a,f
  5562     0254                     i1l2313:
  5563     0254  0843               	movf	i1calc_map@a,w
  5564     0255  023F               	subwf	i1calc_map@p1x,w
  5565     0256  1803               	skipnc
  5566     0257  2A59               	goto	u193_21
  5567     0258  2A5A               	goto	u193_20
  5568     0259                     u193_21:
  5569     0259  2A3D               	goto	i1l2309
  5570     025A                     u193_20:
  5571     025A                     i1l2315:
  5572                           
  5573                           ;main.c: 242:     for (a = p1x + 1; a <= p2x; a++) {
  5574     025A  083F               	movf	i1calc_map@p1x,w
  5575     025B  3E01               	addlw	1
  5576     025C  00C3               	movwf	i1calc_map@a
  5577     025D  2A8F               	goto	i1l2321
  5578     025E                     i1l2317:
  5579                           
  5580                           ;main.c: 243:         IG_table[a] = coeff_p1_p2 + IG_table[a - 1];
  5581     025E  0843               	movf	i1calc_map@a,w
  5582     025F  00A3               	movwf	??i1_calc_map
  5583     0260  01A4               	clrf	??i1_calc_map+1
  5584     0261  35A3               	lslf	??i1_calc_map,f
  5585     0262  0DA4               	rlf	??i1_calc_map+1,f
  5586     0263  3065               	movlw	101
  5587     0264  00A5               	movwf	??i1_calc_map+2
  5588     0265  3022               	movlw	34
  5589     0266  00A6               	movwf	??i1_calc_map+3
  5590     0267  0823               	movf	??i1_calc_map,w
  5591     0268  0725               	addwf	??i1_calc_map+2,w
  5592     0269  0086               	movwf	6
  5593     026A  0824               	movf	??i1_calc_map+1,w
  5594     026B  3D26               	addwfc	??i1_calc_map+3,w
  5595     026C  0087               	movwf	7
  5596     026D  3F40               	moviw [0]fsr1
  5597     026E  00A7               	movwf	??i1_calc_map+4
  5598     026F  3F41               	moviw [1]fsr1
  5599     0270  00A8               	movwf	??i1_calc_map+5
  5600     0271  0835               	movf	i1calc_map@coeff_p1_p2,w
  5601     0272  0727               	addwf	??i1_calc_map+4,w
  5602     0273  00A9               	movwf	??i1_calc_map+6
  5603     0274  0828               	movf	??i1_calc_map+5,w
  5604     0275  1803               	skipnc
  5605     0276  0A28               	incf	??i1_calc_map+5,w
  5606     0277  00AA               	movwf	??i1_calc_map+7
  5607     0278  0843               	movf	i1calc_map@a,w
  5608     0279  00AB               	movwf	??i1_calc_map+8
  5609     027A  01AC               	clrf	??i1_calc_map+9
  5610     027B  35AB               	lslf	??i1_calc_map+8,f
  5611     027C  0DAC               	rlf	??i1_calc_map+9,f
  5612     027D  3067               	movlw	103
  5613     027E  00AD               	movwf	??i1_calc_map+10
  5614     027F  3022               	movlw	34
  5615     0280  00AE               	movwf	??i1_calc_map+11
  5616     0281  082B               	movf	??i1_calc_map+8,w
  5617     0282  072D               	addwf	??i1_calc_map+10,w
  5618     0283  0086               	movwf	6
  5619     0284  082C               	movf	??i1_calc_map+9,w
  5620     0285  3D2E               	addwfc	??i1_calc_map+11,w
  5621     0286  0087               	movwf	7
  5622     0287  0829               	movf	??i1_calc_map+6,w
  5623     0288  3FC0               	movwi [0]fsr1
  5624     0289  082A               	movf	??i1_calc_map+7,w
  5625     028A  3FC1               	movwi [1]fsr1
  5626     028B                     i1l2319:
  5627                           
  5628                           ;main.c: 244:     }
  5629     028B  3001               	movlw	1
  5630     028C  00A3               	movwf	??i1_calc_map
  5631     028D  0823               	movf	??i1_calc_map,w
  5632     028E  07C3               	addwf	i1calc_map@a,f
  5633     028F                     i1l2321:
  5634     028F  0843               	movf	i1calc_map@a,w
  5635     0290  0240               	subwf	i1calc_map@p2x,w
  5636     0291  1803               	skipnc
  5637     0292  2A94               	goto	u194_21
  5638     0293  2A95               	goto	u194_20
  5639     0294                     u194_21:
  5640     0294  2A5E               	goto	i1l2317
  5641     0295                     u194_20:
  5642     0295                     i1l2323:
  5643                           
  5644                           ;main.c: 245:     for (a = p2x + 1; a <= p3x; a++) {
  5645     0295  0840               	movf	i1calc_map@p2x,w
  5646     0296  3E01               	addlw	1
  5647     0297  00C3               	movwf	i1calc_map@a
  5648     0298  2AB0               	goto	i1l2329
  5649     0299                     i1l2325:
  5650                           
  5651                           ;main.c: 246:         IG_table[a] = p3y;
  5652     0299  0843               	movf	i1calc_map@a,w
  5653     029A  00A3               	movwf	??i1_calc_map
  5654     029B  01A4               	clrf	??i1_calc_map+1
  5655     029C  35A3               	lslf	??i1_calc_map,f
  5656     029D  0DA4               	rlf	??i1_calc_map+1,f
  5657     029E  3067               	movlw	103
  5658     029F  00A5               	movwf	??i1_calc_map+2
  5659     02A0  3022               	movlw	34
  5660     02A1  00A6               	movwf	??i1_calc_map+3
  5661     02A2  0823               	movf	??i1_calc_map,w
  5662     02A3  0725               	addwf	??i1_calc_map+2,w
  5663     02A4  0086               	movwf	6
  5664     02A5  0824               	movf	??i1_calc_map+1,w
  5665     02A6  3D26               	addwfc	??i1_calc_map+3,w
  5666     02A7  0087               	movwf	7
  5667     02A8  083B               	movf	i1calc_map@p3y,w
  5668     02A9  3FC0               	movwi [0]fsr1
  5669     02AA  083C               	movf	i1calc_map@p3y+1,w
  5670     02AB  3FC1               	movwi [1]fsr1
  5671     02AC                     i1l2327:
  5672                           
  5673                           ;main.c: 247:     }
  5674     02AC  3001               	movlw	1
  5675     02AD  00A3               	movwf	??i1_calc_map
  5676     02AE  0823               	movf	??i1_calc_map,w
  5677     02AF  07C3               	addwf	i1calc_map@a,f
  5678     02B0                     i1l2329:
  5679     02B0  0843               	movf	i1calc_map@a,w
  5680     02B1  0241               	subwf	i1calc_map@p3x,w
  5681     02B2  1803               	skipnc
  5682     02B3  2AB5               	goto	u195_21
  5683     02B4  2AB6               	goto	u195_20
  5684     02B5                     u195_21:
  5685     02B5  2A99               	goto	i1l2325
  5686     02B6                     u195_20:
  5687     02B6                     i1l2331:
  5688                           
  5689                           ;main.c: 248:     for (a = p3x + 1; a <= p4x; a++) {
  5690     02B6  0841               	movf	i1calc_map@p3x,w
  5691     02B7  3E01               	addlw	1
  5692     02B8  00C3               	movwf	i1calc_map@a
  5693     02B9  2AEB               	goto	i1l2337
  5694     02BA                     i1l2333:
  5695                           
  5696                           ;main.c: 249:         IG_table[a] = IG_table[a - 1] - coeff_p3_p4;
  5697     02BA  0843               	movf	i1calc_map@a,w
  5698     02BB  00A3               	movwf	??i1_calc_map
  5699     02BC  01A4               	clrf	??i1_calc_map+1
  5700     02BD  35A3               	lslf	??i1_calc_map,f
  5701     02BE  0DA4               	rlf	??i1_calc_map+1,f
  5702     02BF  3065               	movlw	101
  5703     02C0  00A5               	movwf	??i1_calc_map+2
  5704     02C1  3022               	movlw	34
  5705     02C2  00A6               	movwf	??i1_calc_map+3
  5706     02C3  0823               	movf	??i1_calc_map,w
  5707     02C4  0725               	addwf	??i1_calc_map+2,w
  5708     02C5  0086               	movwf	6
  5709     02C6  0824               	movf	??i1_calc_map+1,w
  5710     02C7  3D26               	addwfc	??i1_calc_map+3,w
  5711     02C8  0087               	movwf	7
  5712     02C9  3F40               	moviw [0]fsr1
  5713     02CA  00A7               	movwf	??i1_calc_map+4
  5714     02CB  3F41               	moviw [1]fsr1
  5715     02CC  00A8               	movwf	??i1_calc_map+5
  5716     02CD  0828               	movf	??i1_calc_map+5,w
  5717     02CE  00AA               	movwf	??i1_calc_map+7
  5718     02CF  0836               	movf	i1calc_map@coeff_p3_p4,w
  5719     02D0  0227               	subwf	??i1_calc_map+4,w
  5720     02D1  00A9               	movwf	??i1_calc_map+6
  5721     02D2  1C03               	skipc
  5722     02D3  03AA               	decf	??i1_calc_map+7,f
  5723     02D4  0843               	movf	i1calc_map@a,w
  5724     02D5  00AB               	movwf	??i1_calc_map+8
  5725     02D6  01AC               	clrf	??i1_calc_map+9
  5726     02D7  35AB               	lslf	??i1_calc_map+8,f
  5727     02D8  0DAC               	rlf	??i1_calc_map+9,f
  5728     02D9  3067               	movlw	103
  5729     02DA  00AD               	movwf	??i1_calc_map+10
  5730     02DB  3022               	movlw	34
  5731     02DC  00AE               	movwf	??i1_calc_map+11
  5732     02DD  082B               	movf	??i1_calc_map+8,w
  5733     02DE  072D               	addwf	??i1_calc_map+10,w
  5734     02DF  0086               	movwf	6
  5735     02E0  082C               	movf	??i1_calc_map+9,w
  5736     02E1  3D2E               	addwfc	??i1_calc_map+11,w
  5737     02E2  0087               	movwf	7
  5738     02E3  0829               	movf	??i1_calc_map+6,w
  5739     02E4  3FC0               	movwi [0]fsr1
  5740     02E5  082A               	movf	??i1_calc_map+7,w
  5741     02E6  3FC1               	movwi [1]fsr1
  5742     02E7                     i1l2335:
  5743                           
  5744                           ;main.c: 250:     }
  5745     02E7  3001               	movlw	1
  5746     02E8  00A3               	movwf	??i1_calc_map
  5747     02E9  0823               	movf	??i1_calc_map,w
  5748     02EA  07C3               	addwf	i1calc_map@a,f
  5749     02EB                     i1l2337:
  5750     02EB  0843               	movf	i1calc_map@a,w
  5751     02EC  0242               	subwf	i1calc_map@p4x,w
  5752     02ED  1803               	skipnc
  5753     02EE  2AF0               	goto	u196_21
  5754     02EF  2AF1               	goto	u196_20
  5755     02F0                     u196_21:
  5756     02F0  2ABA               	goto	i1l2333
  5757     02F1                     u196_20:
  5758     02F1                     i1l2339:
  5759                           
  5760                           ;main.c: 251:     for (a = p4x + 1; a <= 130; a++) {
  5761     02F1  0842               	movf	i1calc_map@p4x,w
  5762     02F2  3E01               	addlw	1
  5763     02F3  00C3               	movwf	i1calc_map@a
  5764     02F4                     i1l2341:
  5765     02F4  3083               	movlw	131
  5766     02F5  0243               	subwf	i1calc_map@a,w
  5767     02F6  1C03               	skipc
  5768     02F7  2AF9               	goto	u197_21
  5769     02F8  2AFA               	goto	u197_20
  5770     02F9                     u197_21:
  5771     02F9  2AFB               	goto	i1l2345
  5772     02FA                     u197_20:
  5773     02FA  2B13               	goto	i1l2351
  5774     02FB                     i1l2345:
  5775                           
  5776                           ;main.c: 252:         IG_table[a] = p4y;
  5777     02FB  0843               	movf	i1calc_map@a,w
  5778     02FC  00A3               	movwf	??i1_calc_map
  5779     02FD  01A4               	clrf	??i1_calc_map+1
  5780     02FE  35A3               	lslf	??i1_calc_map,f
  5781     02FF  0DA4               	rlf	??i1_calc_map+1,f
  5782     0300  3067               	movlw	103
  5783     0301  00A5               	movwf	??i1_calc_map+2
  5784     0302  3022               	movlw	34
  5785     0303  00A6               	movwf	??i1_calc_map+3
  5786     0304  0823               	movf	??i1_calc_map,w
  5787     0305  0725               	addwf	??i1_calc_map+2,w
  5788     0306  0086               	movwf	6
  5789     0307  0824               	movf	??i1_calc_map+1,w
  5790     0308  3D26               	addwfc	??i1_calc_map+3,w
  5791     0309  0087               	movwf	7
  5792     030A  083D               	movf	i1calc_map@p4y,w
  5793     030B  3FC0               	movwi [0]fsr1
  5794     030C  083E               	movf	i1calc_map@p4y+1,w
  5795     030D  3FC1               	movwi [1]fsr1
  5796     030E                     i1l2347:
  5797                           
  5798                           ;main.c: 253:     }
  5799     030E  3001               	movlw	1
  5800     030F  00A3               	movwf	??i1_calc_map
  5801     0310  0823               	movf	??i1_calc_map,w
  5802     0311  07C3               	addwf	i1calc_map@a,f
  5803     0312  2AF4               	goto	i1l2341
  5804     0313                     i1l2351:
  5805                           
  5806                           ;main.c: 255:     for (a = 15; a <= 130; a++) {
  5807     0313  300F               	movlw	15
  5808     0314  00C3               	movwf	i1calc_map@a
  5809     0315                     i1l2355:
  5810                           
  5811                           ;main.c: 256:         deg_table[a] = (uint8_t) (IG_table[a] / 100);
  5812     0315  3064               	movlw	100
  5813     0316  00F0               	movwf	i1___lwdiv@divisor
  5814     0317  3000               	movlw	0
  5815     0318  00F1               	movwf	i1___lwdiv@divisor+1
  5816     0319  0843               	movf	i1calc_map@a,w
  5817     031A  00A3               	movwf	??i1_calc_map
  5818     031B  01A4               	clrf	??i1_calc_map+1
  5819     031C  35A3               	lslf	??i1_calc_map,f
  5820     031D  0DA4               	rlf	??i1_calc_map+1,f
  5821     031E  3067               	movlw	103
  5822     031F  00A5               	movwf	??i1_calc_map+2
  5823     0320  3022               	movlw	34
  5824     0321  00A6               	movwf	??i1_calc_map+3
  5825     0322  0823               	movf	??i1_calc_map,w
  5826     0323  0725               	addwf	??i1_calc_map+2,w
  5827     0324  0086               	movwf	6
  5828     0325  0824               	movf	??i1_calc_map+1,w
  5829     0326  3D26               	addwfc	??i1_calc_map+3,w
  5830     0327  0087               	movwf	7
  5831     0328  3F40               	moviw [0]fsr1
  5832     0329  00F2               	movwf	i1___lwdiv@dividend
  5833     032A  3F41               	moviw [1]fsr1
  5834     032B  00F3               	movwf	i1___lwdiv@dividend+1
  5835     032C  318D  250D  3181   	fcall	i1___lwdiv
  5836     032F  0870               	movf	?i1___lwdiv,w
  5837     0330  0140               	movlb	0	; select bank0
  5838     0331  00A7               	movwf	??i1_calc_map+4
  5839     0332  0843               	movf	i1calc_map@a,w
  5840     0333  3E6D               	addlw	109
  5841     0334  00A8               	movwf	??i1_calc_map+5
  5842     0335  01A9               	clrf	??i1_calc_map+6
  5843     0336  3023               	movlw	35
  5844     0337  3DA9               	addwfc	??i1_calc_map+6,f
  5845     0338  0828               	movf	??i1_calc_map+5,w
  5846     0339  0086               	movwf	6
  5847     033A  0829               	movf	??i1_calc_map+6,w
  5848     033B  0087               	movwf	7
  5849     033C  0827               	movf	??i1_calc_map+4,w
  5850     033D  0081               	movwf	1
  5851     033E                     i1l2357:
  5852                           
  5853                           ;main.c: 257:     }
  5854     033E  3001               	movlw	1
  5855     033F  00A3               	movwf	??i1_calc_map
  5856     0340  0823               	movf	??i1_calc_map,w
  5857     0341  07C3               	addwf	i1calc_map@a,f
  5858     0342                     i1l2359:
  5859     0342  3083               	movlw	131
  5860     0343  0243               	subwf	i1calc_map@a,w
  5861     0344  1C03               	skipc
  5862     0345  2B47               	goto	u198_21
  5863     0346  2B48               	goto	u198_20
  5864     0347                     u198_21:
  5865     0347  2B15               	goto	i1l2355
  5866     0348                     u198_20:
  5867     0348                     i1l2361:
  5868                           
  5869                           ;main.c: 259:     for (a = 15; a <= 130; a++) {
  5870     0348  300F               	movlw	15
  5871     0349  00C3               	movwf	i1calc_map@a
  5872     034A                     i1l2365:
  5873                           
  5874                           ;main.c: 260:         temp1 = (((3500) - IG_table[a]) >> 1);
  5875     034A  0843               	movf	i1calc_map@a,w
  5876     034B  00A3               	movwf	??i1_calc_map
  5877     034C  01A4               	clrf	??i1_calc_map+1
  5878     034D  35A3               	lslf	??i1_calc_map,f
  5879     034E  0DA4               	rlf	??i1_calc_map+1,f
  5880     034F  3067               	movlw	103
  5881     0350  00A5               	movwf	??i1_calc_map+2
  5882     0351  3022               	movlw	34
  5883     0352  00A6               	movwf	??i1_calc_map+3
  5884     0353  0823               	movf	??i1_calc_map,w
  5885     0354  0725               	addwf	??i1_calc_map+2,w
  5886     0355  0086               	movwf	6
  5887     0356  0824               	movf	??i1_calc_map+1,w
  5888     0357  3D26               	addwfc	??i1_calc_map+3,w
  5889     0358  0087               	movwf	7
  5890     0359  30AC               	movlw	172
  5891     035A  00A7               	movwf	??i1_calc_map+4
  5892     035B  300D               	movlw	13
  5893     035C  00A8               	movwf	??i1_calc_map+5
  5894     035D  3F40               	moviw [0]fsr1
  5895     035E  0227               	subwf	??i1_calc_map+4,w
  5896     035F  00A9               	movwf	??i1_calc_map+6
  5897     0360  3F41               	moviw [1]fsr1
  5898     0361  3B28               	subwfb	??i1_calc_map+5,w
  5899     0362  00AA               	movwf	??i1_calc_map+7
  5900     0363  36AA               	lsrf	??i1_calc_map+7,f
  5901     0364  0CA9               	rrf	??i1_calc_map+6,f
  5902     0365  0829               	movf	??i1_calc_map+6,w
  5903     0366  00B2               	movwf	i1calc_map@temp1
  5904     0367  082A               	movf	??i1_calc_map+7,w
  5905     0368  00B3               	movwf	i1calc_map@temp1+1
  5906     0369  01B4               	clrf	i1calc_map@temp1+2
  5907     036A                     i1l2367:
  5908                           
  5909                           ;main.c: 261:         temp = ((deg2time_coeff[a] * temp1) >> 10);
  5910     036A  0843               	movf	i1calc_map@a,w
  5911     036B  00A3               	movwf	??i1_calc_map
  5912     036C  01A4               	clrf	??i1_calc_map+1
  5913     036D  0823               	movf	??i1_calc_map,w
  5914     036E  00F0               	movwf	i1___wmul@multiplier
  5915     036F  0824               	movf	??i1_calc_map+1,w
  5916     0370  00F1               	movwf	i1___wmul@multiplier+1
  5917     0371  3003               	movlw	3
  5918     0372  00F2               	movwf	i1___wmul@multiplicand
  5919     0373  3000               	movlw	0
  5920     0374  00F3               	movwf	i1___wmul@multiplicand+1
  5921     0375  318C  2476  3181   	fcall	i1___wmul
  5922     0378  30DE               	movlw	222
  5923     0379  0140               	movlb	0	; select bank0
  5924     037A  00A5               	movwf	??i1_calc_map+2
  5925     037B  3020               	movlw	32
  5926     037C  00A6               	movwf	??i1_calc_map+3
  5927     037D  0870               	movf	?i1___wmul,w
  5928     037E  0725               	addwf	??i1_calc_map+2,w
  5929     037F  0086               	movwf	6
  5930     0380  0871               	movf	?i1___wmul+1,w
  5931     0381  3D26               	addwfc	??i1_calc_map+3,w
  5932     0382  0087               	movwf	7
  5933     0383  3F40               	moviw [0]fsr1
  5934     0384  00F6               	movwf	i1___tmul@multiplier
  5935     0385  3F41               	moviw [1]fsr1
  5936     0386  00F7               	movwf	i1___tmul@multiplier+1
  5937     0387  3F42               	moviw [2]fsr1
  5938     0388  00F8               	movwf	i1___tmul@multiplier+2
  5939     0389  0832               	movf	i1calc_map@temp1,w
  5940     038A  00F9               	movwf	i1___tmul@multiplicand
  5941     038B  0833               	movf	i1calc_map@temp1+1,w
  5942     038C  00FA               	movwf	i1___tmul@multiplicand+1
  5943     038D  0834               	movf	i1calc_map@temp1+2,w
  5944     038E  00FB               	movwf	i1___tmul@multiplicand+2
  5945     038F  318C  24E0  3181   	fcall	i1___tmul
  5946     0392  0876               	movf	?i1___tmul,w
  5947     0393  0140               	movlb	0	; select bank0
  5948     0394  00A7               	movwf	??i1_calc_map+4
  5949     0395  0877               	movf	?i1___tmul+1,w
  5950     0396  00A8               	movwf	??i1_calc_map+5
  5951     0397  0878               	movf	?i1___tmul+2,w
  5952     0398  00A9               	movwf	??i1_calc_map+6
  5953     0399  300A               	movlw	10
  5954     039A                     u199_25:
  5955     039A  36A9               	lsrf	??i1_calc_map+6,f
  5956     039B  0CA8               	rrf	??i1_calc_map+5,f
  5957     039C  0CA7               	rrf	??i1_calc_map+4,f
  5958     039D                     u199_20:
  5959     039D  0B89               	decfsz	9,f
  5960     039E  2B9A               	goto	u199_25
  5961     039F  0827               	movf	??i1_calc_map+4,w
  5962     03A0  00AF               	movwf	i1calc_map@temp
  5963     03A1  0828               	movf	??i1_calc_map+5,w
  5964     03A2  00B0               	movwf	i1calc_map@temp+1
  5965     03A3  0829               	movf	??i1_calc_map+6,w
  5966     03A4  00B1               	movwf	i1calc_map@temp+2
  5967     03A5                     i1l2369:
  5968                           
  5969                           ;main.c: 262:         IG_table[a] = temp;
  5970     03A5  0843               	movf	i1calc_map@a,w
  5971     03A6  00A3               	movwf	??i1_calc_map
  5972     03A7  01A4               	clrf	??i1_calc_map+1
  5973     03A8  35A3               	lslf	??i1_calc_map,f
  5974     03A9  0DA4               	rlf	??i1_calc_map+1,f
  5975     03AA  3067               	movlw	103
  5976     03AB  00A5               	movwf	??i1_calc_map+2
  5977     03AC  3022               	movlw	34
  5978     03AD  00A6               	movwf	??i1_calc_map+3
  5979     03AE  0823               	movf	??i1_calc_map,w
  5980     03AF  0725               	addwf	??i1_calc_map+2,w
  5981     03B0  0086               	movwf	6
  5982     03B1  0824               	movf	??i1_calc_map+1,w
  5983     03B2  3D26               	addwfc	??i1_calc_map+3,w
  5984     03B3  0087               	movwf	7
  5985     03B4  082F               	movf	i1calc_map@temp,w
  5986     03B5  3FC0               	movwi [0]fsr1
  5987     03B6  0830               	movf	i1calc_map@temp+1,w
  5988     03B7  3FC1               	movwi [1]fsr1
  5989     03B8                     i1l2371:
  5990                           
  5991                           ;main.c: 263:     }
  5992     03B8  3001               	movlw	1
  5993     03B9  00A3               	movwf	??i1_calc_map
  5994     03BA  0823               	movf	??i1_calc_map,w
  5995     03BB  07C3               	addwf	i1calc_map@a,f
  5996     03BC                     i1l2373:
  5997     03BC  3083               	movlw	131
  5998     03BD  0243               	subwf	i1calc_map@a,w
  5999     03BE  1C03               	skipc
  6000     03BF  2BC1               	goto	u200_21
  6001     03C0  2BC2               	goto	u200_20
  6002     03C1                     u200_21:
  6003     03C1  2B4A               	goto	i1l2365
  6004     03C2                     u200_20:
  6005     03C2                     i1l248:
  6006     03C2  0008               	return
  6007     03C3                     __end_ofi1_calc_map:
  6008                           
  6009                           	psect	text23
  6010     0C76                     __ptext23:	
  6011 ;; *************** function i1___wmul *****************
  6012 ;; Defined at:
  6013 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  multiplier      2    0[COMMON] unsigned int 
  6016 ;;  multiplicand    2    2[COMMON] unsigned int 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  product         2    4[COMMON] unsigned int 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  2    0[COMMON] unsigned int 
  6021 ;; Registers used:
  6022 ;;		wreg, status,2, status,0
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6032 ;;Total ram usage:        6 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		i1_calc_map
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041     0C76                     i1___wmul:	
  6042                           ;psect for function i1___wmul
  6043                           
  6044     0C76                     i1l1983:	
  6045                           ;incstack = 0
  6046                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6047                           
  6048     0C76  01F4               	clrf	i1___wmul@product
  6049     0C77  01F5               	clrf	i1___wmul@product+1
  6050     0C78                     i1l1985:
  6051     0C78  1C70               	btfss	i1___wmul@multiplier,0
  6052     0C79  2C7B               	goto	u166_21
  6053     0C7A  2C7C               	goto	u166_20
  6054     0C7B                     u166_21:
  6055     0C7B  2C80               	goto	i1l382
  6056     0C7C                     u166_20:
  6057     0C7C                     i1l1987:
  6058     0C7C  0872               	movf	i1___wmul@multiplicand,w
  6059     0C7D  07F4               	addwf	i1___wmul@product,f
  6060     0C7E  0873               	movf	i1___wmul@multiplicand+1,w
  6061     0C7F  3DF5               	addwfc	i1___wmul@product+1,f
  6062     0C80                     i1l382:
  6063     0C80  3001               	movlw	1
  6064     0C81                     u167_25:
  6065     0C81  35F2               	lslf	i1___wmul@multiplicand,f
  6066     0C82  0DF3               	rlf	i1___wmul@multiplicand+1,f
  6067     0C83  0B89               	decfsz	9,f
  6068     0C84  2C81               	goto	u167_25
  6069     0C85                     i1l1989:
  6070     0C85  3001               	movlw	1
  6071     0C86                     u168_25:
  6072     0C86  36F1               	lsrf	i1___wmul@multiplier+1,f
  6073     0C87  0CF0               	rrf	i1___wmul@multiplier,f
  6074     0C88  0B89               	decfsz	9,f
  6075     0C89  2C86               	goto	u168_25
  6076     0C8A                     i1l1991:
  6077     0C8A  0870               	movf	i1___wmul@multiplier,w
  6078     0C8B  0471               	iorwf	i1___wmul@multiplier+1,w
  6079     0C8C  1D03               	btfss	3,2
  6080     0C8D  2C8F               	goto	u169_21
  6081     0C8E  2C90               	goto	u169_20
  6082     0C8F                     u169_21:
  6083     0C8F  2C78               	goto	i1l1985
  6084     0C90                     u169_20:
  6085     0C90                     i1l1993:
  6086     0C90  0875               	movf	i1___wmul@product+1,w
  6087     0C91  00F1               	movwf	?i1___wmul+1
  6088     0C92  0874               	movf	i1___wmul@product,w
  6089     0C93  00F0               	movwf	?i1___wmul
  6090     0C94                     i1l384:
  6091     0C94  0008               	return
  6092     0C95                     __end_ofi1___wmul:
  6093                           
  6094                           	psect	text24
  6095     0CE0                     __ptext24:	
  6096 ;; *************** function i1___tmul *****************
  6097 ;; Defined at:
  6098 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul24.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  multiplier      3    6[COMMON] unsigned um
  6101 ;;  multiplicand    3    9[COMMON] unsigned um
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  product         3    0[BANK0 ] unsigned um
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  3    6[COMMON] unsigned um
  6106 ;; Registers used:
  6107 ;;		wreg, status,2, status,0
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6113 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;Total ram usage:        9 bytes
  6118 ;; Hardware stack levels used: 1
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		i1_calc_map
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126     0CE0                     i1___tmul:	
  6127                           ;psect for function i1___tmul
  6128                           
  6129     0CE0                     i1l1997:	
  6130                           ;incstack = 0
  6131                           ; Regs used in i1___tmul: [wreg+status,2+status,0]
  6132                           
  6133     0CE0  3000               	movlw	0
  6134     0CE1  0140               	movlb	0	; select bank0
  6135     0CE2  00A0               	movwf	i1___tmul@product
  6136     0CE3  3000               	movlw	0
  6137     0CE4  00A1               	movwf	i1___tmul@product+1
  6138     0CE5  3000               	movlw	0
  6139     0CE6  00A2               	movwf	i1___tmul@product+2
  6140     0CE7                     i1l1999:
  6141     0CE7  1C76               	btfss	i1___tmul@multiplier,0
  6142     0CE8  2CEA               	goto	u170_21
  6143     0CE9  2CEB               	goto	u170_20
  6144     0CEA                     u170_21:
  6145     0CEA  2CF2               	goto	i1l2003
  6146     0CEB                     u170_20:
  6147     0CEB                     i1l2001:
  6148     0CEB  0879               	movf	i1___tmul@multiplicand,w
  6149     0CEC  0140               	movlb	0	; select bank0
  6150     0CED  07A0               	addwf	i1___tmul@product,f
  6151     0CEE  087A               	movf	i1___tmul@multiplicand+1,w
  6152     0CEF  3DA1               	addwfc	i1___tmul@product+1,f
  6153     0CF0  087B               	movf	i1___tmul@multiplicand+2,w
  6154     0CF1  3DA2               	addwfc	i1___tmul@product+2,f
  6155     0CF2                     i1l2003:
  6156     0CF2  3001               	movlw	1
  6157     0CF3                     u171_25:
  6158     0CF3  35F9               	lslf	i1___tmul@multiplicand,f
  6159     0CF4  0DFA               	rlf	i1___tmul@multiplicand+1,f
  6160     0CF5  0DFB               	rlf	i1___tmul@multiplicand+2,f
  6161     0CF6  0B89               	decfsz	9,f
  6162     0CF7  2CF3               	goto	u171_25
  6163     0CF8                     i1l2005:
  6164     0CF8  3001               	movlw	1
  6165     0CF9                     u172_25:
  6166     0CF9  36F8               	lsrf	i1___tmul@multiplier+2,f
  6167     0CFA  0CF7               	rrf	i1___tmul@multiplier+1,f
  6168     0CFB  0CF6               	rrf	i1___tmul@multiplier,f
  6169     0CFC  0B89               	decfsz	9,f
  6170     0CFD  2CF9               	goto	u172_25
  6171     0CFE  0878               	movf	i1___tmul@multiplier+2,w
  6172     0CFF  0477               	iorwf	i1___tmul@multiplier+1,w
  6173     0D00  0476               	iorwf	i1___tmul@multiplier,w
  6174     0D01  1D03               	skipz
  6175     0D02  2D04               	goto	u173_21
  6176     0D03  2D05               	goto	u173_20
  6177     0D04                     u173_21:
  6178     0D04  2CE7               	goto	i1l1999
  6179     0D05                     u173_20:
  6180     0D05                     i1l2007:
  6181     0D05  0140               	movlb	0	; select bank0
  6182     0D06  0820               	movf	i1___tmul@product,w
  6183     0D07  00F6               	movwf	?i1___tmul
  6184     0D08  0821               	movf	i1___tmul@product+1,w
  6185     0D09  00F7               	movwf	?i1___tmul+1
  6186     0D0A  0822               	movf	i1___tmul@product+2,w
  6187     0D0B  00F8               	movwf	?i1___tmul+2
  6188     0D0C                     i1l390:
  6189     0D0C  0008               	return
  6190     0D0D                     __end_ofi1___tmul:
  6191                           
  6192                           	psect	text25
  6193     0D0D                     __ptext25:	
  6194 ;; *************** function i1___lwdiv *****************
  6195 ;; Defined at:
  6196 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  divisor         2    0[COMMON] unsigned int 
  6199 ;;  dividend        2    2[COMMON] unsigned int 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  quotient        2    5[COMMON] unsigned int 
  6202 ;;  counter         1    7[COMMON] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  2    0[COMMON] unsigned int 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2, status,0
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;Total ram usage:        8 bytes
  6217 ;; Hardware stack levels used: 1
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		_InterruptManager
  6222 ;;		i1_calc_map
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226     0D0D                     i1___lwdiv:	
  6227                           ;psect for function i1___lwdiv
  6228                           
  6229     0D0D                     i1l2011:	
  6230                           ;incstack = 0
  6231                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6232                           
  6233     0D0D  01F5               	clrf	i1___lwdiv@quotient
  6234     0D0E  01F6               	clrf	i1___lwdiv@quotient+1
  6235     0D0F                     i1l2013:
  6236     0D0F  0870               	movf	i1___lwdiv@divisor,w
  6237     0D10  0471               	iorwf	i1___lwdiv@divisor+1,w
  6238     0D11  1903               	btfsc	3,2
  6239     0D12  2D14               	goto	u174_21
  6240     0D13  2D15               	goto	u174_20
  6241     0D14                     u174_21:
  6242     0D14  2D44               	goto	i1l2033
  6243     0D15                     u174_20:
  6244     0D15                     i1l2015:
  6245     0D15  01F7               	clrf	i1___lwdiv@counter
  6246     0D16  0AF7               	incf	i1___lwdiv@counter,f
  6247     0D17  2D21               	goto	i1l2021
  6248     0D18                     i1l2017:
  6249     0D18  3001               	movlw	1
  6250     0D19                     u175_25:
  6251     0D19  35F0               	lslf	i1___lwdiv@divisor,f
  6252     0D1A  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6253     0D1B  0B89               	decfsz	9,f
  6254     0D1C  2D19               	goto	u175_25
  6255     0D1D                     i1l2019:
  6256     0D1D  3001               	movlw	1
  6257     0D1E  00F4               	movwf	??i1___lwdiv
  6258     0D1F  0874               	movf	??i1___lwdiv,w
  6259     0D20  07F7               	addwf	i1___lwdiv@counter,f
  6260     0D21                     i1l2021:
  6261     0D21  1FF1               	btfss	i1___lwdiv@divisor+1,7
  6262     0D22  2D24               	goto	u176_21
  6263     0D23  2D25               	goto	u176_20
  6264     0D24                     u176_21:
  6265     0D24  2D18               	goto	i1l2017
  6266     0D25                     u176_20:
  6267     0D25                     i1l2023:
  6268     0D25  3001               	movlw	1
  6269     0D26                     u177_25:
  6270     0D26  35F5               	lslf	i1___lwdiv@quotient,f
  6271     0D27  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6272     0D28  0B89               	decfsz	9,f
  6273     0D29  2D26               	goto	u177_25
  6274     0D2A  0871               	movf	i1___lwdiv@divisor+1,w
  6275     0D2B  0273               	subwf	i1___lwdiv@dividend+1,w
  6276     0D2C  1D03               	skipz
  6277     0D2D  2D30               	goto	u178_25
  6278     0D2E  0870               	movf	i1___lwdiv@divisor,w
  6279     0D2F  0272               	subwf	i1___lwdiv@dividend,w
  6280     0D30                     u178_25:
  6281     0D30  1C03               	skipc
  6282     0D31  2D33               	goto	u178_21
  6283     0D32  2D34               	goto	u178_20
  6284     0D33                     u178_21:
  6285     0D33  2D39               	goto	i1l2029
  6286     0D34                     u178_20:
  6287     0D34                     i1l2025:
  6288     0D34  0870               	movf	i1___lwdiv@divisor,w
  6289     0D35  02F2               	subwf	i1___lwdiv@dividend,f
  6290     0D36  0871               	movf	i1___lwdiv@divisor+1,w
  6291     0D37  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  6292     0D38                     i1l2027:
  6293     0D38  1475               	bsf	i1___lwdiv@quotient,0
  6294     0D39                     i1l2029:
  6295     0D39  3001               	movlw	1
  6296     0D3A                     u179_25:
  6297     0D3A  36F1               	lsrf	i1___lwdiv@divisor+1,f
  6298     0D3B  0CF0               	rrf	i1___lwdiv@divisor,f
  6299     0D3C  0B89               	decfsz	9,f
  6300     0D3D  2D3A               	goto	u179_25
  6301     0D3E                     i1l2031:
  6302     0D3E  3001               	movlw	1
  6303     0D3F  02F7               	subwf	i1___lwdiv@counter,f
  6304     0D40  1D03               	btfss	3,2
  6305     0D41  2D43               	goto	u180_21
  6306     0D42  2D44               	goto	u180_20
  6307     0D43                     u180_21:
  6308     0D43  2D25               	goto	i1l2023
  6309     0D44                     u180_20:
  6310     0D44                     i1l2033:
  6311     0D44  0876               	movf	i1___lwdiv@quotient+1,w
  6312     0D45  00F1               	movwf	?i1___lwdiv+1
  6313     0D46  0875               	movf	i1___lwdiv@quotient,w
  6314     0D47  00F0               	movwf	?i1___lwdiv
  6315     0D48                     i1l662:
  6316     0D48  0008               	return
  6317     0D49                     __end_ofi1___lwdiv:
  6318                           
  6319                           	psect	text26
  6320     0BDC                     __ptext26:	
  6321 ;; *************** function _ignition_disable *****************
  6322 ;; Defined at:
  6323 ;;		line 400 in file "main.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;		None
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;		None
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      void 
  6330 ;; Registers used:
  6331 ;;		wreg, status,2, status,0, pclath, cstack
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;Total ram usage:        0 bytes
  6342 ;; Hardware stack levels used: 1
  6343 ;; Hardware stack levels required when called: 1
  6344 ;; This function calls:
  6345 ;;		_ccp2_disable
  6346 ;;		i1_ccp1_enable
  6347 ;; This function is called by:
  6348 ;;		_InterruptManager
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352     0BDC                     _ignition_disable:	
  6353                           ;psect for function _ignition_disable
  6354                           
  6355     0BDC                     i1l2279:	
  6356                           ;incstack = 0
  6357                           ; Regs used in _ignition_disable: [wreg+status,2+status,0+pclath+cstack]
  6358                           
  6359                           
  6360                           ;main.c: 401:     ccp2_disable();
  6361     0BDC  318B  23B5  318B   	fcall	_ccp2_disable
  6362     0BDF                     i1l2281:
  6363                           
  6364                           ;main.c: 402:     LATC2 = (1);
  6365     0BDF  0140               	movlb	0	; select bank0
  6366     0BE0  151A               	bsf	26,2	;volatile
  6367     0BE1                     i1l2283:
  6368                           
  6369                           ;main.c: 403:     orev_counter = 0;
  6370     0BE1  01D8               	clrf	_orev_counter
  6371     0BE2                     i1l2285:
  6372                           
  6373                           ;main.c: 404:     ccp1_enable();
  6374     0BE2  318B  23CA  318B   	fcall	i1_ccp1_enable
  6375     0BE5                     i1l299:
  6376     0BE5  0008               	return
  6377     0BE6                     __end_of_ignition_disable:
  6378                           
  6379                           	psect	text27
  6380     0BCA                     __ptext27:	
  6381 ;; *************** function i1_ccp1_enable *****************
  6382 ;; Defined at:
  6383 ;;		line 411 in file "main.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;		None
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1    wreg      void 
  6390 ;; Registers used:
  6391 ;;		wreg
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;Total ram usage:        0 bytes
  6402 ;; Hardware stack levels used: 1
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_InterruptManager
  6407 ;;		_ignition_disable
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411     0BCA                     i1_ccp1_enable:	
  6412                           ;psect for function i1_ccp1_enable
  6413                           
  6414     0BCA                     i1l1977:	
  6415                           ;incstack = 0
  6416                           ; Regs used in i1_ccp1_enable: [wreg]
  6417                           
  6418                           
  6419                           ;main.c: 412:     CCP1IE = 0;
  6420     0BCA  014E               	movlb	14	; select bank14
  6421     0BCB  1397               	bcf	23,7	;volatile
  6422                           
  6423                           ;main.c: 413:     CCP1IF = 0;
  6424     0BCC  138D               	bcf	13,7	;volatile
  6425     0BCD                     i1l1979:
  6426                           
  6427                           ;main.c: 414:     CCP1CON = 0x84;
  6428     0BCD  3084               	movlw	132
  6429     0BCE  0146               	movlb	6	; select bank6
  6430     0BCF  008E               	movwf	14	;volatile
  6431     0BD0                     i1l1981:
  6432                           
  6433                           ;main.c: 415:     CCP1IE = 1;
  6434     0BD0  014E               	movlb	14	; select bank14
  6435     0BD1  1797               	bsf	23,7	;volatile
  6436     0BD2                     i1l302:
  6437     0BD2  0008               	return
  6438     0BD3                     __end_ofi1_ccp1_enable:
  6439                           
  6440                           	psect	text28
  6441     0BB5                     __ptext28:	
  6442 ;; *************** function _ccp2_disable *****************
  6443 ;; Defined at:
  6444 ;;		line 443 in file "main.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		status,2
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;Total ram usage:        0 bytes
  6463 ;; Hardware stack levels used: 1
  6464 ;; This function calls:
  6465 ;;		Nothing
  6466 ;; This function is called by:
  6467 ;;		_InterruptManager
  6468 ;;		_ignition_disable
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472     0BB5                     _ccp2_disable:	
  6473                           ;psect for function _ccp2_disable
  6474                           
  6475     0BB5                     i1l1919:	
  6476                           ;incstack = 0
  6477                           ; Regs used in _ccp2_disable: [status,2]
  6478                           
  6479                           
  6480                           ;main.c: 444:     CCP2IE = 0;
  6481     0BB5  014E               	movlb	14	; select bank14
  6482     0BB6  1398               	bcf	24,7	;volatile
  6483     0BB7                     i1l1921:
  6484                           
  6485                           ;main.c: 446:     CCP2CON = 0;
  6486     0BB7  0146               	movlb	6	; select bank6
  6487     0BB8  0192               	clrf	18	;volatile
  6488     0BB9                     i1l311:
  6489     0BB9  0008               	return
  6490     0BBA                     __end_of_ccp2_disable:
  6491                           
  6492                           	psect	text29
  6493     0BB0                     __ptext29:	
  6494 ;; *************** function _ccp1_disable *****************
  6495 ;; Defined at:
  6496 ;;		line 422 in file "main.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;		None
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1    wreg      void 
  6503 ;; Registers used:
  6504 ;;		status,2
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6514 ;;Total ram usage:        0 bytes
  6515 ;; Hardware stack levels used: 1
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_InterruptManager
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523     0BB0                     _ccp1_disable:	
  6524                           ;psect for function _ccp1_disable
  6525                           
  6526     0BB0                     i1l2275:	
  6527                           ;incstack = 0
  6528                           ; Regs used in _ccp1_disable: [status,2]
  6529                           
  6530                           
  6531                           ;main.c: 423:     CCP1IE = 0;
  6532     0BB0  014E               	movlb	14	; select bank14
  6533     0BB1  1397               	bcf	23,7	;volatile
  6534     0BB2                     i1l2277:
  6535                           
  6536                           ;main.c: 425:     CCP1CON = 0;
  6537     0BB2  0146               	movlb	6	; select bank6
  6538     0BB3  018E               	clrf	14	;volatile
  6539     0BB4                     i1l305:
  6540     0BB4  0008               	return
  6541     0BB5                     __end_of_ccp1_disable:
  6542     007E                     btemp	set	126	;btemp
  6543     007E                     int$flags	set	126
  6544     007E                     wtemp0	set	126
  6545     20DE                     
  6546                           	psect	config
  6547                           
  6548                           ;Config register CONFIG1 @ 0x8007
  6549                           ;	External Oscillator Mode Selection bits
  6550                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  6551                           ;	Power-up Default Value for COSC bits
  6552                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  6553                           ;	Clock Out Enable bit
  6554                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6555                           ;	VDD Range Analog Calibration Selection bit
  6556                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6557     8007                     	org	32775
  6558     8007  3FCF               	dw	16335
  6559                           
  6560                           ;Config register CONFIG2 @ 0x8008
  6561                           ;	Master Clear Enable bit
  6562                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6563                           ;	Power-up Timer Selection bits
  6564                           ;	PWRTS = PWRT_1, PWRT set at 1 ms
  6565                           ;	WDT Operating Mode bits
  6566                           ;	WDTE = SWDTEN, WDT enabled/disabled by SEN bit
  6567                           ;	Brown-out Reset Enable bits
  6568                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6569                           ;	Brown-out Reset Voltage Selection bit
  6570                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6571                           ;	PPSLOCKED One-Way Set Enable bit
  6572                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  6573                           ;	Stack Overflow/Underflow Reset Enable bit
  6574                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6575     8008                     	org	32776
  6576     8008  3FE9               	dw	16361
  6577                           
  6578                           ;Config register CONFIG4 @ 0x800A
  6579                           ;	Boot Block Size Selection bits
  6580                           ;	BBSIZE = BB512, 512 words boot block size
  6581                           ;	Boot Block Enable bit
  6582                           ;	BBEN = OFF, Boot Block is disabled
  6583                           ;	SAF Enable bit
  6584                           ;	SAFEN = OFF, SAF is disabled
  6585                           ;	Application Block Write Protection bit
  6586                           ;	WRTAPP = OFF, Application Block is not write-protected
  6587                           ;	Boot Block Write Protection bit
  6588                           ;	WRTB = OFF, Boot Block is not write-protected
  6589                           ;	Configuration Registers Write Protection bit
  6590                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6591                           ;	Storage Area Flash (SAF) Write Protection bit
  6592                           ;	WRTSAF = OFF, SAF is not write-protected
  6593                           ;	Low Voltage Programming Enable bit
  6594                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6595     800A                     	org	32778
  6596     800A  3FFF               	dw	16383
  6597                           
  6598                           ;Config register CONFIG5 @ 0x800B
  6599                           ;	User Program Flash Memory Code Protection bit
  6600                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6601     800B                     	org	32779
  6602     800B  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    26
    Data        397
    BSS         61
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     40      57
    BANK1            80     62      77
    BANK2            62      0      32
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S602$buffer	PTR unsigned char  size(2) Largest target is 0

    S602$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 8
		 -> Write_table@tx_data(BANK1[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    WriteString@str	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[3]), Write_table@tx_data(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptManager in COMMON

    i1_calc_map->i1___tmul
    i1___tmul->i1___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    _InterruptManager->i1_calc_map
    i1_calc_map->i1___tmul

Critical Paths under _main in BANK1

    _main->_Write_table
    _calc_map->___tmul
    ___tmul->___wmul
    _Write_table->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _WriteString->_Write_Byte

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7125
                        _Write_table
                           _calc_map
                        _ccp1_enable
                        _ccp2_enable
                     _check_sw_state
                  _initialize_system
 ---------------------------------------------------------------------------------
 (1) _initialize_system                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_sw_state                                       2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ccp2_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ccp1_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_map                                            33    33      0    2854
                                             15 BANK1     33    33      0
                            ___lwdiv
                             ___tmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6     316
                                              6 BANK1      9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     718
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Write_table                                         11    11      0    4271
                                             51 BANK1     11    11      0
                        _WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    16      4    3816
                                             33 BANK1     18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    3384
                                             26 BANK1      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2    2977
                                             11 BANK1     15    13      2
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              0 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) _WriteString                                          3     1      2     276
                                              1 BANK1      3     1      2
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (3) _Write_Byte                                           1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     4     4      0    2066
                                             36 BANK0      4     4      0
                       _ccp1_disable
                       _ccp2_disable
                   _ignition_disable
                          i1___lwdiv
                         i1_calc_map
                      i1_ccp1_enable
                      i1_ccp2_enable
 ---------------------------------------------------------------------------------
 (8) i1_ccp2_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_calc_map                                          33    33      0    1696
                                              3 BANK0     33    33      0
                          i1___lwdiv
                           i1___tmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___tmul                                             9     3      6     144
                                              6 COMMON     6     0      6
                                              0 BANK0      3     3      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     370
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _ignition_disable                                     0     0      0       0
                       _ccp2_disable
                      i1_ccp1_enable
 ---------------------------------------------------------------------------------
 (8) i1_ccp1_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ccp2_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ccp1_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Write_table
     _WriteString
       _Write_Byte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _calc_map
     ___lwdiv
     ___tmul
       ___wmul (ARG)
     ___wmul
   _ccp1_enable
   _ccp2_enable
   _check_sw_state
   _initialize_system

 _InterruptManager (ROOT)
   _ccp1_disable
   _ccp2_disable
   _ignition_disable
     _ccp2_disable
     i1_ccp1_enable
   i1___lwdiv
   i1_calc_map
     i1___lwdiv
     i1___tmul
       i1___wmul (ARG)
     i1___wmul
   i1_ccp1_enable
   i1_ccp2_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      39       6       71.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     3E      4D       8       96.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               3E      0      20      10       51.6%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Feb 09 15:20:58 2025

         ??_InterruptManager 0044                 ___awdiv@sign 00A6          ___wmul@multiplicand 00A2  
           i1___wmul@product 0074                   i1_calc_map 01C6                          l221 0BF1  
                        l302 0BDB                          l215 07AF                          l218 0BE8  
                        l314 0F0F                          l227 0C22                          l308 0BC9  
                        l252 0DF0                          l248 05B6                          l256 0E00  
                        l259 0E44                          l390 0CDF                          l382 0CA0  
                        l535 0EA4                          l384 0CB4                          l548 0DEE  
                        l662 07EC                          l908 0D9A                          l845 0C75  
                        l919 07FF                          l883 0FFF                          l896 07FE  
                        l889 0C58                          _GIE 005F                          _RA4 0064  
                        _RC5 0075                          _abs 07ED                          _rpm 00E6  
               ___awmod@sign 00A6                          wreg 0009                 _ccp1_disable 0BB0  
               _ccp2_disable 0BB5                         ?_abs 00A7                         l2141 0E0F  
                       l2133 0DF5                         l2143 0E32                         l2135 0E03  
                       l2127 0DEF                         l2145 0E34                         l2129 0DF3  
                       l2139 0E05                         l2601 0BE8                         l1801 0DE0  
                       l2603 0BED                         l1731 0E4B                         l1803 0DE5  
                       l2611 0C56                         l1741 0E5F                         l1733 0E50  
                       l1805 0DEA                         l2541 0D63                         l2533 0D49  
                       l2605 0C3F                         l2621 0C63                         l2701 0ED8  
                       l2631 0C13                         l1751 0E73                         l1743 0E61  
                       l1735 0E52                         l1727 0E45                         l2543 0D81  
                       l2535 0D4F                         l2551 0F23                         l2607 0C44  
                       l2623 0C6D                         l2615 0C5B                         l2711 0EE2  
                       l2703 0EDB                         l2633 0C18                         l1761 0E90  
                       l1753 0E77                         l1745 0E67                         l1737 0E56  
                       l1729 0E47                         l1825 07ED                         l2545 0D91  
                       l2537 0D54                         l2561 0F47                         l2553 0F2B  
                       l2609 0C4C                         l2617 0C5F                         l2641 0CA5  
                       l2801 04DB                         l2721 0EF0                         l2713 0EE5  
                       l2705 0EDD                         l2627 0C0A                         l1755 0E86  
                       l1747 0E6A                         l1763 0E96                         l1739 0E5B  
                       l1771 0D9B                         l1827 07F2                         l2539 0D59  
                       l2571 0F73                         l2563 0F51                         l2555 0F32  
                       l2619 0C61                         l2651 0CBC                         l2643 0CAA  
                       l2635 0C95                         l2811 04EF                         l2803 04DF  
                       l2731 0F00                         l2723 0EF7                         l2715 0EE8  
                       l2707 0EDE                         l2629 0C0B                         l1765 0E9B  
                       l1757 0E8A                         l1749 0E6F                         l1781 0DAC  
                       l1773 0D9D                         l1829 07F3                         l2581 0FB1  
                       l2573 0F91                         l2565 0F5D                         l2557 0F36  
                       l2549 0F12                         l2653 0CC0                         l2645 0CB0  
                       l2637 0C98                         l2821 0509                         l2813 0502  
                       l2805 04E5                         l2741 0F08                         l2733 0F03  
                       l2725 0EF9                         l2717 0EEB                         l2709 0EE0  
                       l1767 0EA0                         l1759 0E8B                         l1791 0DC3  
                       l1783 0DB1                         l1775 0DA1                         l2583 0FB6  
                       l2575 0FA1                         l2567 0F6A                         l2591 0FDD  
                       l2559 0F3D                         l1951 07B0                         l2655 0CC6  
                       l2639 0C9C                         l2831 053E                         l2823 0532  
                       l2807 04E8                         l2751 0F0D                         l2743 0F09  
                       l2735 0F05                         l2727 0EFB                         l2719 0EEE  
                       l2671 0EAE                         l2663 0EA5                         l1793 0DC7  
                       l1785 0DB7                         l1777 0DA6                         l2585 0FC0  
                       l2577 0FA7                         l2569 0F6C                         l1961 07C5  
                       l1953 07B3                         l2657 0CCC                         l2649 0CB5  
                       l2833 055E                         l2825 0536                         l2817 0507  
                       l2761 03E4                         l2753 03C3                         l2841 0BD3  
                       l2745 0F0A                         l2737 0F06                         l2729 0EFD  
                       l2681 0EB4                         l2673 0EAF                         l2665 0EAA  
                       l1795 0DD1                         l1787 0DBA                         l1779 0DA8  
                       l2587 0FD1                         l2579 0FAC                         l2595 0FE7  
                       l1971 07E2                         l1963 07C9                         l1955 07B9  
                       l2659 0CD9                         l2835 0599                         l2827 053C  
                       l2771 041E                         l2763 03E8                         l2755 03CD  
                       l2843 0BD6                         l2851 0BC7                         l2747 0F0B  
                       l2739 0F07                         l2691 0ECE                         l2683 0EB5  
                       l2675 0EB0                         l2667 0EAB                         l1797 0DD5  
                       l1789 0DBF                         l2589 0FD6                         l2861 076C  
                       l2853 0740                         l1965 07D8                         l1957 07BC  
                       l1973 07E8                         l2837 05AC                         l2781 044E  
                       l2773 042E                         l2765 03F8                         l2757 03E0  
                       l2845 0BD9                         l2749 0F0C                         l2693 0ED0  
                       l2685 0EC9                         l2677 0EB1                         l2669 0EAD  
                       l1799 0DDA                         l2871 0785                         l2863 0778  
                       l2855 074B                         l1967 07DC                         l1959 07C1  
                       l2839 05B0                         l2791 048D                         l2783 0452  
                       l2775 0431                         l2767 03FC                         l2759 03E2  
                       l2847 0BC2                         l2695 0ED2                         l2687 0ECB  
                       l2679 0EB2                         l2873 0795                         l2865 0783  
                       l2857 075C                         l1969 07DD                         l2793 04A0  
                       l2785 047F                         l2777 0444                         l2769 040C  
                       l2849 0BC4                         l2697 0ED4                         l2689 0ECD  
                       l2881 0C23                         l2875 079D                         l2859 0764  
                       l2795 04A4                         l2787 0483                         l2779 0448  
                       l2699 0ED6                         l2891 0C31                         l2883 0C26  
                       l2877 07A2                         l2797 04AA                         l2789 0489  
                       l2893 0C34                         l2885 0C28                         l2879 07A8  
                       l2799 04AE                         l2895 0C37                         l2887 0C2B  
                       l2889 0C2E                         STR_1 1012                         STR_2 101E  
                       u1200 0E86                         u1201 0E85                         u1220 0E96  
                       u1140 0E4B                         u1221 0E95                         u1205 0E82  
                       u1141 0E4A                         u1230 0E9B                         u1150 0E56  
                       u1310 0DE0                         u1231 0E9A                         u1215 0E8C  
                       u1151 0E55                         u1311 0DDF                         u1160 0E67  
                       u1320 0DE5                         u1240 0DA1                         u1161 0E66  
                       u1321 0DE4                         u1305 0DD6                         u1241 0DA0  
                       u1250 0DAC                         u1251 0DAB                         u1180 0E77  
                       u1260 0DB7                         u2300 0D81                         u1181 0E76  
                       u1261 0DB6                         u2301 0D80                         _LATA 0018  
                       u2310 0F23                         _LATB 0019                         u1175 0E6B  
                       u2311 0F22                         _LATC 001A                         u1280 0DC7  
                       u2400 0FDC                         u2320 0F47                         u1281 0DC6  
                       u2305 0D7D                         u2401 0FDB                         u2321 0F46  
                       u2410 0BED                         u1290 0DD1                         u1370 07F2  
                       u2330 0F51                         u1610 07C9                         u2411 0BEC  
                       u1195 0E78                         u1291 0DD0                         u1275 0DBB  
                       u1371 07F1                         u2331 0F50                         u1611 07C8  
                       u2340 0F71                         u2420 0C56                         u2341 0F6F  
                       u2421 0C55                         u1605 07BD                         u2430 0C22  
                       u2270 0D4F                         u2350 0F72                         u1630 07D8  
                       u2510 0CD9                         u2431 0C21                         u1295 0DCD  
                       u2271 0D4E                         u1631 07D7                         u2511 0CD8  
                       u2280 0D54                         u2360 0FA7                         u2600 07A8  
                       u2440 0C9C                         u2520 044E                         u2281 0D53  
                       u2361 0FA6                         u2601 07A7                         u1625 07CA  
                       u2505 0CCD                         u2441 0C9B                         u2521 044D  
                       u2290 0D63                         u2370 0FAC                         u1650 07E8  
                       u2530 0489                         u2291 0D62                         u2371 0FAB  
                       u1651 07E7                         u1635 07D4                         u2531 0488  
                       u2380 0FB1                         u2540 04AA                         u2381 0FB0  
                       u1645 07DE                         u2541 04A9                         u2390 0FB6  
                       u1590 07B9                         u2470 0CB0                         u2550 04E5  
                       u2391 0FB5                         u1591 07B8                         u2471 0CAF  
                       u2455 0CA1                         u2551 04E4                         u1815 0E14  
                       u2480 0CC0                         u2560 04EE                         u2481 0CBF  
                       u2465 0CA6                         u2561 04ED                         u1825 0E28  
                       u2570 053C                         u2571 053B                         u1835 0E3B  
                       u2580 0591                         u2590 05B6                         u2495 0CC7  
                       u2591 05B5                         u2585 058E                         _PEIE 005E  
                       _PIR0 070C                         _PIR1 070D                         _PIR2 070E  
                       _TMR1 020C                         _TRMT 08F1                         abs@a 00A7  
                       _dbuf 0120                         _main 0C23                i1_ccp1_enable 0BCA  
                       _prec 00E0                         fsr0h 0005                         fsr1h 0007  
                       indf0 0000                         fsr0l 0004                         indf1 0001  
                       fsr1l 0006                         btemp 007E                i1_ccp2_enable 0BBA  
                       start 0177               _check_sw_state 0DEF                  i1calc_map@a 0043  
                      ??_abs 00A9  __end_of_adv_start_rpm_table 101E                        ?_main 0070  
            __end_of___awdiv 0EA5                        _CCPR1 030C                        _CCPR2 0310  
            __end_of___awmod 0DEF                        _T1CLK 0211              ___awdiv@divisor 00A0  
                      _T1CON 020E                        _LATA0 00C0                        _LATC1 00D1  
                      _LATC2 00D2                        _IOCIE 38B4              __end_of___lwdiv 07ED  
                      i1l302 0BD2                        i1l311 0BB9                        i1l305 0BB4  
                      i1l308 0BC1                        i1l248 03C2                        i1l273 00BE  
                      i1l282 00EB                        i1l390 0D0C                        i1l382 0C80  
                      i1l295 0174                        i1l384 0C94                        i1l296 0175  
                      i1l299 0BE5                        i1l662 0D48              ___awdiv@counter 00A5  
                      _OSCEN 0891                 vfpfcnvrt@fmt 00AB                        _TMR1H 020D  
                      _TMR1L 020C                        _PORTA 000C                        _PORTB 000D  
                      _PORTC 000E                        _TRISA 0012                        _TRISB 0013  
                      _TRISC 0014                        _flags 00E4                        _fputc 0D49  
                      _width 00DE                        _putch 07FF             __end_ofi1___tmul 0D0D  
           __end_ofi1___wmul 0C95               ?i1_ccp1_enable 0070       __end_of_check_sw_state 0E45  
             ?i1_ccp2_enable 0070                        status 0003          i1___wmul@multiplier 0070  
                      wtemp0 007E              __end_of_sprintf 0C76              __initialization 0179  
            i1calc_map@temp1 0032                 __end_of_main 0C3D                  ?i1_calc_map 0070  
                     ??_main 00DE                       _CCP1IE 38BF                       _CCP1IF 386F  
                     _CCP2IE 38C7                       _CCP2IF 3877                       ?_fputc 00A0  
           ___awdiv@dividend 00A2                       _ANSELA 1F38                       ?_putch 0070  
                     _ANSELB 1F43                       _ANSELC 1F4E                       _IOCAF2 F9FA  
                     _IOCAN2 F9F2                       _RC1PPS 1F21                       _RC1STA 011D  
                     i1l2001 0CEB                       i1l2011 0D0D                       i1l2003 0CF2  
                     _RB6PPS 1F1E                       i1l2021 0D21                       i1l2013 0D0F  
                     i1l2005 0CF8                       i1l2031 0D3E                       i1l2023 0D25  
                     i1l2015 0D15                       i1l2007 0D05                       i1l2025 0D34  
                     i1l2017 0D18                       i1l2033 0D44                       i1l2027 0D38  
                     i1l2019 0D1D                       i1l2029 0D39                       i1l2301 0206  
                     i1l2311 0250                       i1l2303 0218                       u200_20 03C2  
                     u200_21 03C1                       i1l2321 028F                       i1l2313 0254  
                     i1l2305 022A                       i1l2401 0011                       i1l2331 02B6  
                     i1l2323 0295                       i1l2315 025A                       i1l2307 023A  
                     i1l2411 0021                       i1l2403 0013                       i1l2341 02F4  
                     i1l2333 02BA                       i1l2325 0299                       i1l2317 025E  
                     i1l2309 023D                       i1l2501 0114                       i1l2421 0057  
                     i1l2413 0034                       i1l2405 0015                       i1l2351 0313  
                     i1l2335 02E7                       i1l2327 02AC                       i1l2319 028B  
                     i1l2511 014C                       i1l2503 0119                       i1l2431 007F  
                     i1l2423 006E                       i1l2415 003A                       i1l2407 0016  
                     u201_20 000B                       i1l2281 0BDF                       i1l2361 0348  
                     i1l2345 02FB                       i1l2337 02EB                       i1l2329 02B0  
                     i1l2521 0160                       i1l2513 014F                       i1l2505 011F  
                     i1l2441 0090                       i1l2433 0082                       i1l2425 0076  
                     i1l2417 0040                       i1l2409 0019                       u201_21 000A  
                     i1l2275 0BB0                       i1l2283 0BE1                       i1l2371 03B8  
                     i1l2355 0315                       i1l2347 030E                       i1l2339 02F1  
                     i1l2291 01E8                       i1l2531 0172                       i1l2523 0162  
                     i1l2515 0156                       i1l2507 012E                       i1l2443 0097  
                     i1l2427 007A                       i1l2419 0055                       i1l2435 0085  
                     i1l2277 0BB2                       i1l2285 0BE2                       i1l2373 03BC  
                     i1l2365 034A                       i1l2357 033E                       i1l2293 01EA  
                     i1l2525 016B                       i1l2509 014B                       i1l2517 0159  
                     i1l2461 00CB                       i1l2453 00B7                       i1l2445 00A1  
                     i1l2437 0088                       i1l2429 007D                       i1l2279 0BDC  
                     i1l2367 036A                       i1l2359 0342                       i1l2295 01EC  
                     i1l2287 01C6                       i1l2375 0BBA                       i1l2527 016D  
                     i1l2519 015B                       i1l2463 00CE                       i1l2447 00A5  
                     i1l2439 008A                       u210_20 00B6                       u202_20 0011  
                     i1l1921 0BB7                       i1l2369 03A5                       i1l2297 01F0  
                     i1l2289 01D1                       i1l2377 0BBC                       i1l2529 016F  
                     i1l2481 00F3                       i1l2473 00E4                       i1l2465 00D4  
                     u210_21 00B5                       i1l2449 00AB                       i1l2457 00BE  
                     u202_21 0010                       i1l2299 0202                       i1l2379 0BBF  
                     i1l2491 00FF                       i1l2483 00F5                       i1l2459 00C4  
                     i1l2467 00D7                       i1l2493 0102                       i1l2485 00F6  
                     i1l2469 00DC                       i1l2477 00EC                       i1l2397 0006  
                     i1l1919 0BB5                       i1l2495 0105                       i1l2479 00F1  
                     i1l2487 00F9                       i1l2399 000B                       u211_20 00BD  
                     u203_20 003A                       i1l2497 010A                       u211_21 00BC  
                     u203_21 0039                       i1l2489 00FB                       i1l2499 0111  
                     i1l1981 0BD0                       i1l1991 0C8A                       i1l1983 0C76  
                     u220_20 0111                       u212_20 00C4                       u204_20 0040  
                     i1l1977 0BCA                       i1l1993 0C90                       i1l1985 0C78  
                     u220_21 0110                       u212_21 00C3                       u204_21 003F  
                     i1l1979 0BCD                       i1l1987 0C7C                       i1l1997 0CE0  
                     i1l1989 0C85                       i1l1999 0CE7                       u221_20 0119  
                     u213_20 00CB                       u205_20 006E                       u221_21 0118  
                     u213_21 00CA                       u205_21 006D                       u205_25 006A  
                     u222_20 011F                       u214_20 00D4                       u206_20 0090  
                     u222_21 011E                       u214_21 00D3                       u206_21 008F  
                     u223_20 012E                       u215_20 00DC                       u207_20 0097  
                     u223_21 012D                       u215_21 00DB                       u207_21 0096  
                     u224_20 014B                       u216_20 00E3                       u208_20 00A1  
                     u224_21 014A                       u216_21 00E2                       u208_21 00A0  
                     _INLVLA 1F3C                       _INLVLB 1F47                       _INLVLC 1F52  
                     u224_25 0147                       u225_20 0156                       u217_20 00EA  
                     u209_20 00AB                       u225_21 0155                       u217_21 00E9  
                     u209_21 00AA                       u170_20 0CEB                       u226_20 0160  
                     u218_20 00F1                       u170_21 0CEA                       u226_21 015F  
                     u218_21 00F0                       u219_20 00FF                       u219_21 00FE  
                     u171_25 0CF3                       u180_20 0D44                       u180_21 0D43  
                     u172_25 0CF9                       u173_20 0D05                       u173_21 0D04  
                     u261_27 0080                       u174_20 0D15                       u166_20 0C7C  
                     u174_21 0D14                       u166_21 0C7B                       u262_27 0100  
                     u175_25 0D19                       u167_25 0C81                       u176_20 0D25  
                     u176_21 0D24                       u168_25 0C86                       u169_20 0C90  
                     u193_20 025A                       u169_21 0C8F                       u193_21 0259  
                     u177_25 0D26                       u178_20 0D34                       u194_20 0295  
                     u178_21 0D33                       u194_21 0294                       u178_25 0D30  
                     u195_20 02B6                       u195_21 02B5                       u179_25 0D3A  
                     u196_20 02F1                       u196_21 02F0                       u197_20 02FA  
                     u197_21 02F9                       u198_20 0348                       u198_21 0347  
                     u199_20 039D                       u199_25 039A                       _OSCFRQ 0893  
              vfpfcnvrt@done 00B1             __end_of_calc_map 05B7                       _RX1PPS 1ECB  
                     _TMR1IE 38BD                       _TMR1IF 386D                       _TMR1ON 1070  
                     _TX1REG 011A                       _WDTCON 080C                       _TX1STA 011E  
            ?_check_sw_state 0070                 vfprintf@cfmt 00BF                       ___tmul 0CB5  
                     ___wmul 0C95                    ??___awdiv 00A4                    ??___awmod 00A4  
                  ??___lwdiv 00A4             ___awdiv@quotient 00A7              ___awmod@divisor 00A0  
            ___awmod@counter 00A5                _max_adv_table 1008                       _tx_buf 0048  
               __pdataBIGRAM 20DE                       fputc@c 00A0            __end_ofi1___lwdiv 0D49  
           _ignition_disable 0BDC        i1___tmul@multiplicand 0079                       putch@c 0070  
           __end_of_vfprintf 0C59                    ??_sprintf 00C5              ??i1_ccp1_enable 0070  
            ??i1_ccp2_enable 0070      __end_of__initialization 01C2               __pcstackCOMMON 0070  
               __pidataBANK1 0BAC                   _Write_Byte 0BE6                __end_of_fputc 0D9B  
              __end_of_putch 0800                i1calc_map@p1x 003F                i1calc_map@p1y 0037  
              i1calc_map@p2x 0040                i1calc_map@p2y 0039                i1calc_map@p3x 0041  
              i1calc_map@p3y 003B                i1calc_map@p4x 0042                i1calc_map@p4y 003D  
                  ?i1___tmul 0076                    ?i1___wmul 0070                      ??_fputc 00A3  
        i1___tmul@multiplier 0076                      ??_putch 00A0                   __pbssBANK0 0048  
                 __pbssBANK1 00DE                   __pbssBANK2 0120               _deg2time_coeff 20DE  
              ??_ccp1_enable 00A0                ??_ccp2_enable 00A0                   __pmaintext 0C23  
         Write_table@tx_data 00D5                      ?___tmul 00A6                      ?___wmul 00A0  
                 __pintentry 0004                      _CCP1CAP 030F                      _CCP2CAP 0313  
                    _CCP1CON 030E                      _CCP2CON 0312                      _CCP1PPS 1EA1  
                    _CCP2PPS 1EA2                ??_WriteString 00A3                   ??i1___tmul 007C  
                 ??i1___wmul 0074                ??_Write_table 00D3                    ?_calc_map 0070  
                 _ig_counter 00E2                      _SP1BRGH 011C                      _SP1BRGL 011B  
               Write_table@a 00DD                      _OSCTUNE 0892                      _PPSLOCK 1E8F  
          _initialize_system 0EA5                _min_ret_table 1000           ?_initialize_system 0070  
        __end_of_ccp1_enable 0BDC          __end_of_ccp2_enable 0BCA               WriteString@str 00A1  
                    ___awdiv 0E45                  ?_Write_Byte 0070                      ___awmod 0D9B  
                    ___lwdiv 07B0                    ?_vfprintf 00BA          ??_initialize_system 00A0  
               ??i1_calc_map 0023                      __ptext1 0EA5                      __ptext2 0DEF  
                    __ptext3 0BC2                      __ptext4 0BD3                      __ptext5 03C3  
                    __ptext6 0C95                      __ptext7 0CB5                      __ptext8 07B0  
                    __ptext9 0740                   ??_calc_map 00AF                      _map_sel 007C  
          i1___lwdiv@divisor 0070                      _sw1_pos 00EC                      _sw2_pos 00EB  
                    _sw3_pos 00EA                      _sw4_pos 00E9            i1___lwdiv@counter 0077  
      i1calc_map@coeff_p1_p2 0035        i1calc_map@coeff_p3_p4 0036             ___awmod@dividend 00A2  
      __end_of_numerator_rpm 1012          __end_of_WriteString 0C23             ??_check_sw_state 00A0  
        __end_of_Write_table 07B0                      _sprintf 0C59                      clrloop0 0BF3  
       end_of_initialization 01C2    __end_of_initialize_system 0F10                      fputc@fp 00A2  
                    init_ram 0BFE                      initloop 0BFF           __end_ofi1_calc_map 03C3  
   __end_of_ignition_disable 0BE6            __end_of_vfpfcnvrt 1000             vfpfcnvrt@convarg 00B5  
                 ??_vfprintf 00BD        i1___wmul@multiplicand 0072                    _PORTAbits 000C  
                  _PORTBbits 000D                    _PORTCbits 000E             _InterruptManager 0004  
               calc_map@temp 00BB                    i1___lwdiv 0D0D                  _ccp1_enable 0BD3  
                _ccp2_enable 0BC2                __pidataBIGRAM 05B7               __end_of___tmul 0CE0  
                vfpfcnvrt@ap 00AC                  vfpfcnvrt@cp 00B3                  vfpfcnvrt@fp 00B2  
             __end_of___wmul 0CB5                  _WriteString 0C0A                  _Write_table 0740  
        start_initialization 0179                ?_ccp1_disable 0070               i1calc_map@temp 002F  
                __end_of_abs 07FF                ?_ccp2_disable 0070                   ?i1___lwdiv 0070  
      __end_ofi1_ccp1_enable 0BD3        __end_ofi1_ccp2_enable 0BC2                  vfprintf@fmt 00BA  
                   ??___tmul 00AC                     ??___wmul 00A4                  __pdataBANK1 00E9  
             ___tmul@product 00AC                  __pbssBIGRAM 2267               ??_ccp1_disable 0070  
                __pbssCOMMON 007C                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0               ??_ccp2_disable 0070               _revlimit_state 0057  
              Write_Byte@chr 00A0                    _deg_table 236D   __end_of_max_adv_grad_table 101A  
           ___lwdiv@dividend 00A2          _adv_start_rpm_table 101A                 ??_Write_Byte 00A0  
                   ?___awdiv 00A0                     ?___awmod 00A0                     ?___lwdiv 00A0  
                  calc_map@a 00CF                     _BAUD1CON 011F             ___lwdiv@quotient 00A5  
                ??i1___lwdiv 0074                     ?_sprintf 00C1           __end_of_Write_Byte 0BF2  
             ___wmul@product 00A4     __end_of_InterruptManager 0177                    clear_ram0 0BF2  
          ?_ignition_disable 0070                     _EG_state 00E5                     _IG_table 2267  
         ??_ignition_disable 0070                  calc_map@p1x 00CB                  calc_map@p1y 00C3  
                calc_map@p2x 00CC                  calc_map@p2y 00C5                  calc_map@p3x 00CD  
                calc_map@p3y 00C7                  calc_map@p4x 00CE                  calc_map@p4y 00C9  
                  _vfpfcnvrt 0F10        __end_of_max_adv_table 1010                    _pwj_state 0056  
                   i1___tmul 0CE0            ___wmul@multiplier 00A0                     i1___wmul 0C76  
        ___tmul@multiplicand 00A9                   vfpfcnvrt@c 00B9                 ?_ccp1_enable 0070  
               ?_ccp2_enable 0070         __end_of_ccp1_disable 0BB5                   vfprintf@ap 00BC  
                 vfprintf@fp 00BE         __end_of_ccp2_disable 0BBA                     _t1_count 00E7  
                 ?_vfpfcnvrt 00AB                 ?_WriteString 00A1                 ?_Write_table 0070  
                   _calc_map 03C3                   sprintf@fmt 00C1              ___lwdiv@divisor 00A0  
            ___lwdiv@counter 00A7                     __ptext10 0C59                     __ptext11 0C3D  
                   __ptext12 0F10                     __ptext21 0BBA                     __ptext13 0D49  
                   __ptext22 01C6                     __ptext14 07FF                     __ptext23 0C76  
                   __ptext15 07ED                     __ptext24 0CE0                     __ptext16 0D9B  
                   __ptext25 0D0D                     __ptext17 0E45                     __ptext26 0BDC  
                   __ptext18 0C0A                     __ptext27 0BCA                     __ptext19 0BE6  
                   __ptext28 0BB5                     __ptext29 0BB0           i1___lwdiv@dividend 0072  
                   int$flags 007E                     _vfprintf 0C3D           i1___lwdiv@quotient 0075  
               _orev_counter 0058                _numerator_rpm 1010                     intlevel1 0000  
                  sprintf@ap 00C6             i1___tmul@product 0020        __end_of_min_ret_table 1008  
                _PPSLOCKbits 1E8F           _pu1_2_period_count 0054            ___tmul@multiplier 00A6  
                ??_vfpfcnvrt 00AD                __pstringtext1 1000                __pstringtext2 1008  
              __pstringtext3 1016                __pstringtext4 101A                __pstringtext5 1010  
              __pstringtext6 101E                __pstringtext7 0000           _max_adv_grad_table 1016  
                   sprintf@f 00C8                     sprintf@s 00C7          calc_map@coeff_p1_p2 00C1  
        calc_map@coeff_p3_p4 00C2                calc_map@temp1 00BE            ?_InterruptManager 0070  
