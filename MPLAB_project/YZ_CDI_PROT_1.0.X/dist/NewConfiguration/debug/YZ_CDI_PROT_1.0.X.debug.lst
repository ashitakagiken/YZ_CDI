

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Feb 09 10:40:26 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F15245
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x620,48
    56                           	dabs	1,0x5A0,80
    57                           	dabs	1,0x56D,3
    58                           	dabs	1,0x520,77
    59                           	dabs	1,0x4A0,80
    60                           	dabs	1,0x420,80
    61                           	dabs	1,0x3D7,25
    62                           	dabs	1,0x3A0,55
    63                           	dabs	1,0x320,80
    64                           	dabs	1,0x2A0,80
    65                           	dabs	1,0x220,80
    66                           	dabs	1,0x1A0,80
    67                           	dabs	1,0x15E,18
    68                           	dabs	1,0x2267,0,_IG_table
    69                           	dabs	1,0x236D,0,_deg_table
    70                           	dabs	1,0x20DE,0,_deg2time_coeff
    71                           	dabs	1,0x7E,2
    72     0000                     
    73                           ; Generated 11/01/2024 GMT
    74                           ; 
    75                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F15245 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     0012                     	;# 
   123     0013                     	;# 
   124     0014                     	;# 
   125     0018                     	;# 
   126     0019                     	;# 
   127     001A                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     0119                     	;# 
   138     011A                     	;# 
   139     011B                     	;# 
   140     011B                     	;# 
   141     011C                     	;# 
   142     011D                     	;# 
   143     011E                     	;# 
   144     011F                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     018E                     	;# 
   148     018F                     	;# 
   149     0190                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     020C                     	;# 
   153     020C                     	;# 
   154     020D                     	;# 
   155     020E                     	;# 
   156     020E                     	;# 
   157     020F                     	;# 
   158     020F                     	;# 
   159     0210                     	;# 
   160     0210                     	;# 
   161     0211                     	;# 
   162     0211                     	;# 
   163     0211                     	;# 
   164     028C                     	;# 
   165     028C                     	;# 
   166     028D                     	;# 
   167     028D                     	;# 
   168     028E                     	;# 
   169     028F                     	;# 
   170     0290                     	;# 
   171     0291                     	;# 
   172     030C                     	;# 
   173     030C                     	;# 
   174     030D                     	;# 
   175     030E                     	;# 
   176     030F                     	;# 
   177     0310                     	;# 
   178     0310                     	;# 
   179     0311                     	;# 
   180     0312                     	;# 
   181     0313                     	;# 
   182     0314                     	;# 
   183     0314                     	;# 
   184     0315                     	;# 
   185     0316                     	;# 
   186     0318                     	;# 
   187     0318                     	;# 
   188     0319                     	;# 
   189     031A                     	;# 
   190     059C                     	;# 
   191     059C                     	;# 
   192     059D                     	;# 
   193     059D                     	;# 
   194     059E                     	;# 
   195     059F                     	;# 
   196     070C                     	;# 
   197     070D                     	;# 
   198     070E                     	;# 
   199     0716                     	;# 
   200     0717                     	;# 
   201     0718                     	;# 
   202     080C                     	;# 
   203     0811                     	;# 
   204     0813                     	;# 
   205     0814                     	;# 
   206     081A                     	;# 
   207     081A                     	;# 
   208     081B                     	;# 
   209     081C                     	;# 
   210     081C                     	;# 
   211     081D                     	;# 
   212     081E                     	;# 
   213     081F                     	;# 
   214     088E                     	;# 
   215     0890                     	;# 
   216     0891                     	;# 
   217     0892                     	;# 
   218     0893                     	;# 
   219     090C                     	;# 
   220     1E8F                     	;# 
   221     1E90                     	;# 
   222     1E91                     	;# 
   223     1E92                     	;# 
   224     1E93                     	;# 
   225     1E9C                     	;# 
   226     1EA1                     	;# 
   227     1EA2                     	;# 
   228     1EC3                     	;# 
   229     1EC5                     	;# 
   230     1EC6                     	;# 
   231     1EC7                     	;# 
   232     1ECB                     	;# 
   233     1ECB                     	;# 
   234     1ECB                     	;# 
   235     1ECC                     	;# 
   236     1ECC                     	;# 
   237     1ECC                     	;# 
   238     1F10                     	;# 
   239     1F11                     	;# 
   240     1F12                     	;# 
   241     1F14                     	;# 
   242     1F15                     	;# 
   243     1F1C                     	;# 
   244     1F1D                     	;# 
   245     1F1E                     	;# 
   246     1F1F                     	;# 
   247     1F20                     	;# 
   248     1F21                     	;# 
   249     1F22                     	;# 
   250     1F23                     	;# 
   251     1F24                     	;# 
   252     1F25                     	;# 
   253     1F26                     	;# 
   254     1F27                     	;# 
   255     1F38                     	;# 
   256     1F39                     	;# 
   257     1F3A                     	;# 
   258     1F3B                     	;# 
   259     1F3C                     	;# 
   260     1F3D                     	;# 
   261     1F3E                     	;# 
   262     1F3F                     	;# 
   263     1F43                     	;# 
   264     1F44                     	;# 
   265     1F45                     	;# 
   266     1F46                     	;# 
   267     1F47                     	;# 
   268     1F48                     	;# 
   269     1F49                     	;# 
   270     1F4A                     	;# 
   271     1F4E                     	;# 
   272     1F4F                     	;# 
   273     1F50                     	;# 
   274     1F51                     	;# 
   275     1F52                     	;# 
   276     1F53                     	;# 
   277     1F54                     	;# 
   278     1F55                     	;# 
   279     1FE4                     	;# 
   280     1FE5                     	;# 
   281     1FE6                     	;# 
   282     1FE7                     	;# 
   283     1FE8                     	;# 
   284     1FE8                     	;# 
   285     1FE9                     	;# 
   286     1FEA                     	;# 
   287     1FEB                     	;# 
   288     1FED                     	;# 
   289     1FEE                     	;# 
   290     1FEF                     	;_deg2time_coeff
   291                           
   292                           	psect	idataBIGRAM
   293     0592                     __pidataBIGRAM:
   294                           
   295                           ;initializer for _deg2time_coeff
   296     0592  3400               	retlw	0
   297     0593  3400               	retlw	0
   298     0594  3400               	retlw	0
   299     0595  3400               	retlw	0
   300     0596  3400               	retlw	0
   301     0597  3400               	retlw	0
   302     0598  3400               	retlw	0
   303     0599  3400               	retlw	0
   304     059A  3400               	retlw	0
   305     059B  3400               	retlw	0
   306     059C  3400               	retlw	0
   307     059D  3400               	retlw	0
   308     059E  3400               	retlw	0
   309     059F  3400               	retlw	0
   310     05A0  3400               	retlw	0
   311     05A1  3400               	retlw	0
   312     05A2  3400               	retlw	0
   313     05A3  3400               	retlw	0
   314     05A4  3400               	retlw	0
   315     05A5  3400               	retlw	0
   316     05A6  3400               	retlw	0
   317     05A7  3400               	retlw	0
   318     05A8  3400               	retlw	0
   319     05A9  3400               	retlw	0
   320     05AA  3400               	retlw	0
   321     05AB  3400               	retlw	0
   322     05AC  3400               	retlw	0
   323     05AD  3400               	retlw	0
   324     05AE  3400               	retlw	0
   325     05AF  3400               	retlw	0
   326     05B0  3400               	retlw	0
   327     05B1  3400               	retlw	0
   328     05B2  3400               	retlw	0
   329     05B3  3400               	retlw	0
   330     05B4  3400               	retlw	0
   331     05B5  3400               	retlw	0
   332     05B6  3400               	retlw	0
   333     05B7  3400               	retlw	0
   334     05B8  3400               	retlw	0
   335     05B9  3400               	retlw	0
   336     05BA  3400               	retlw	0
   337     05BB  3400               	retlw	0
   338     05BC  3400               	retlw	0
   339     05BD  3400               	retlw	0
   340     05BE  3400               	retlw	0
   341     05BF  34E4               	retlw	228
   342     05C0  3408               	retlw	8
   343     05C1  3400               	retlw	0
   344     05C2  3455               	retlw	85
   345     05C3  3408               	retlw	8
   346     05C4  3400               	retlw	0
   347     05C5  34D8               	retlw	216
   348     05C6  3407               	retlw	7
   349     05C7  3400               	retlw	0
   350     05C8  3468               	retlw	104
   351     05C9  3407               	retlw	7
   352     05CA  3400               	retlw	0
   353     05CB  3404               	retlw	4
   354     05CC  3407               	retlw	7
   355     05CD  3400               	retlw	0
   356     05CE  34AB               	retlw	171
   357     05CF  3406               	retlw	6
   358     05D0  3400               	retlw	0
   359     05D1  3459               	retlw	89
   360     05D2  3406               	retlw	6
   361     05D3  3400               	retlw	0
   362     05D4  3410               	retlw	16
   363     05D5  3406               	retlw	6
   364     05D6  3400               	retlw	0
   365     05D7  34CC               	retlw	204
   366     05D8  3405               	retlw	5
   367     05D9  3400               	retlw	0
   368     05DA  348E               	retlw	142
   369     05DB  3405               	retlw	5
   370     05DC  3400               	retlw	0
   371     05DD  3455               	retlw	85
   372     05DE  3405               	retlw	5
   373     05DF  3400               	retlw	0
   374     05E0  3421               	retlw	33
   375     05E1  3405               	retlw	5
   376     05E2  3400               	retlw	0
   377     05E3  34F0               	retlw	240
   378     05E4  3404               	retlw	4
   379     05E5  3400               	retlw	0
   380     05E6  34C3               	retlw	195
   381     05E7  3404               	retlw	4
   382     05E8  3400               	retlw	0
   383     05E9  3499               	retlw	153
   384     05EA  3404               	retlw	4
   385     05EB  3400               	retlw	0
   386     05EC  3472               	retlw	114
   387     05ED  3404               	retlw	4
   388     05EE  3400               	retlw	0
   389     05EF  344D               	retlw	77
   390     05F0  3404               	retlw	4
   391     05F1  3400               	retlw	0
   392     05F2  342B               	retlw	43
   393     05F3  3404               	retlw	4
   394     05F4  3400               	retlw	0
   395     05F5  340A               	retlw	10
   396     05F6  3404               	retlw	4
   397     05F7  3400               	retlw	0
   398     05F8  34EC               	retlw	236
   399     05F9  3403               	retlw	3
   400     05FA  3400               	retlw	0
   401     05FB  34CF               	retlw	207
   402     05FC  3403               	retlw	3
   403     05FD  3400               	retlw	0
   404     05FE  34B4               	retlw	180
   405     05FF  3403               	retlw	3
   406     0600  3400               	retlw	0
   407     0601  349B               	retlw	155
   408     0602  3403               	retlw	3
   409     0603  3400               	retlw	0
   410     0604  3482               	retlw	130
   411     0605  3403               	retlw	3
   412     0606  3400               	retlw	0
   413     0607  346B               	retlw	107
   414     0608  3403               	retlw	3
   415     0609  3400               	retlw	0
   416     060A  3455               	retlw	85
   417     060B  3403               	retlw	3
   418     060C  3400               	retlw	0
   419     060D  3441               	retlw	65
   420     060E  3403               	retlw	3
   421     060F  3400               	retlw	0
   422     0610  342D               	retlw	45
   423     0611  3403               	retlw	3
   424     0612  3400               	retlw	0
   425     0613  341A               	retlw	26
   426     0614  3403               	retlw	3
   427     0615  3400               	retlw	0
   428     0616  3408               	retlw	8
   429     0617  3403               	retlw	3
   430     0618  3400               	retlw	0
   431     0619  34F7               	retlw	247
   432     061A  3402               	retlw	2
   433     061B  3400               	retlw	0
   434     061C  34E6               	retlw	230
   435     061D  3402               	retlw	2
   436     061E  3400               	retlw	0
   437     061F  34D6               	retlw	214
   438     0620  3402               	retlw	2
   439     0621  3400               	retlw	0
   440     0622  34C7               	retlw	199
   441     0623  3402               	retlw	2
   442     0624  3400               	retlw	0
   443     0625  34B9               	retlw	185
   444     0626  3402               	retlw	2
   445     0627  3400               	retlw	0
   446     0628  34AB               	retlw	171
   447     0629  3402               	retlw	2
   448     062A  3400               	retlw	0
   449     062B  349D               	retlw	157
   450     062C  3402               	retlw	2
   451     062D  3400               	retlw	0
   452     062E  3490               	retlw	144
   453     062F  3402               	retlw	2
   454     0630  3400               	retlw	0
   455     0631  3484               	retlw	132
   456     0632  3402               	retlw	2
   457     0633  3400               	retlw	0
   458     0634  3478               	retlw	120
   459     0635  3402               	retlw	2
   460     0636  3400               	retlw	0
   461     0637  346D               	retlw	109
   462     0638  3402               	retlw	2
   463     0639  3400               	retlw	0
   464     063A  3462               	retlw	98
   465     063B  3402               	retlw	2
   466     063C  3400               	retlw	0
   467     063D  3457               	retlw	87
   468     063E  3402               	retlw	2
   469     063F  3400               	retlw	0
   470     0640  344D               	retlw	77
   471     0641  3402               	retlw	2
   472     0642  3400               	retlw	0
   473     0643  3443               	retlw	67
   474     0644  3402               	retlw	2
   475     0645  3400               	retlw	0
   476     0646  3439               	retlw	57
   477     0647  3402               	retlw	2
   478     0648  3400               	retlw	0
   479     0649  3430               	retlw	48
   480     064A  3402               	retlw	2
   481     064B  3400               	retlw	0
   482     064C  3427               	retlw	39
   483     064D  3402               	retlw	2
   484     064E  3400               	retlw	0
   485     064F  341E               	retlw	30
   486     0650  3402               	retlw	2
   487     0651  3400               	retlw	0
   488     0652  3415               	retlw	21
   489     0653  3402               	retlw	2
   490     0654  3400               	retlw	0
   491     0655  340D               	retlw	13
   492     0656  3402               	retlw	2
   493     0657  3400               	retlw	0
   494     0658  3405               	retlw	5
   495     0659  3402               	retlw	2
   496     065A  3400               	retlw	0
   497     065B  34FD               	retlw	253
   498     065C  3401               	retlw	1
   499     065D  3400               	retlw	0
   500     065E  34F6               	retlw	246
   501     065F  3401               	retlw	1
   502     0660  3400               	retlw	0
   503     0661  34EF               	retlw	239
   504     0662  3401               	retlw	1
   505     0663  3400               	retlw	0
   506     0664  34E8               	retlw	232
   507     0665  3401               	retlw	1
   508     0666  3400               	retlw	0
   509     0667  34E1               	retlw	225
   510     0668  3401               	retlw	1
   511     0669  3400               	retlw	0
   512     066A  34DA               	retlw	218
   513     066B  3401               	retlw	1
   514     066C  3400               	retlw	0
   515     066D  34D4               	retlw	212
   516     066E  3401               	retlw	1
   517     066F  3400               	retlw	0
   518     0670  34CD               	retlw	205
   519     0671  3401               	retlw	1
   520     0672  3400               	retlw	0
   521     0673  34C7               	retlw	199
   522     0674  3401               	retlw	1
   523     0675  3400               	retlw	0
   524     0676  34C1               	retlw	193
   525     0677  3401               	retlw	1
   526     0678  3400               	retlw	0
   527     0679  34BB               	retlw	187
   528     067A  3401               	retlw	1
   529     067B  3400               	retlw	0
   530     067C  34B6               	retlw	182
   531     067D  3401               	retlw	1
   532     067E  3400               	retlw	0
   533     067F  34B0               	retlw	176
   534     0680  3401               	retlw	1
   535     0681  3400               	retlw	0
   536     0682  34AB               	retlw	171
   537     0683  3401               	retlw	1
   538     0684  3400               	retlw	0
   539     0685  34A5               	retlw	165
   540     0686  3401               	retlw	1
   541     0687  3400               	retlw	0
   542     0688  34A0               	retlw	160
   543     0689  3401               	retlw	1
   544     068A  3400               	retlw	0
   545     068B  349B               	retlw	155
   546     068C  3401               	retlw	1
   547     068D  3400               	retlw	0
   548     068E  3496               	retlw	150
   549     068F  3401               	retlw	1
   550     0690  3400               	retlw	0
   551     0691  3492               	retlw	146
   552     0692  3401               	retlw	1
   553     0693  3400               	retlw	0
   554     0694  348D               	retlw	141
   555     0695  3401               	retlw	1
   556     0696  3400               	retlw	0
   557     0697  3488               	retlw	136
   558     0698  3401               	retlw	1
   559     0699  3400               	retlw	0
   560     069A  3484               	retlw	132
   561     069B  3401               	retlw	1
   562     069C  3400               	retlw	0
   563     069D  3480               	retlw	128
   564     069E  3401               	retlw	1
   565     069F  3400               	retlw	0
   566     06A0  347B               	retlw	123
   567     06A1  3401               	retlw	1
   568     06A2  3400               	retlw	0
   569     06A3  3477               	retlw	119
   570     06A4  3401               	retlw	1
   571     06A5  3400               	retlw	0
   572     06A6  3473               	retlw	115
   573     06A7  3401               	retlw	1
   574     06A8  3400               	retlw	0
   575     06A9  346F               	retlw	111
   576     06AA  3401               	retlw	1
   577     06AB  3400               	retlw	0
   578     06AC  346B               	retlw	107
   579     06AD  3401               	retlw	1
   580     06AE  3400               	retlw	0
   581     06AF  3467               	retlw	103
   582     06B0  3401               	retlw	1
   583     06B1  3400               	retlw	0
   584     06B2  3464               	retlw	100
   585     06B3  3401               	retlw	1
   586     06B4  3400               	retlw	0
   587     06B5  3460               	retlw	96
   588     06B6  3401               	retlw	1
   589     06B7  3400               	retlw	0
   590     06B8  345C               	retlw	92
   591     06B9  3401               	retlw	1
   592     06BA  3400               	retlw	0
   593     06BB  3459               	retlw	89
   594     06BC  3401               	retlw	1
   595     06BD  3400               	retlw	0
   596     06BE  3455               	retlw	85
   597     06BF  3401               	retlw	1
   598     06C0  3400               	retlw	0
   599     06C1  3452               	retlw	82
   600     06C2  3401               	retlw	1
   601     06C3  3400               	retlw	0
   602     06C4  344F               	retlw	79
   603     06C5  3401               	retlw	1
   604     06C6  3400               	retlw	0
   605     06C7  344B               	retlw	75
   606     06C8  3401               	retlw	1
   607     06C9  3400               	retlw	0
   608     06CA  3448               	retlw	72
   609     06CB  3401               	retlw	1
   610     06CC  3400               	retlw	0
   611     06CD  3445               	retlw	69
   612     06CE  3401               	retlw	1
   613     06CF  3400               	retlw	0
   614     06D0  3442               	retlw	66
   615     06D1  3401               	retlw	1
   616     06D2  3400               	retlw	0
   617     06D3  343F               	retlw	63
   618     06D4  3401               	retlw	1
   619     06D5  3400               	retlw	0
   620     06D6  343C               	retlw	60
   621     06D7  3401               	retlw	1
   622     06D8  3400               	retlw	0
   623     06D9  3439               	retlw	57
   624     06DA  3401               	retlw	1
   625     06DB  3400               	retlw	0
   626     06DC  3436               	retlw	54
   627     06DD  3401               	retlw	1
   628     06DE  3400               	retlw	0
   629     06DF  3434               	retlw	52
   630     06E0  3401               	retlw	1
   631     06E1  3400               	retlw	0
   632     06E2  3431               	retlw	49
   633     06E3  3401               	retlw	1
   634     06E4  3400               	retlw	0
   635     06E5  342E               	retlw	46
   636     06E6  3401               	retlw	1
   637     06E7  3400               	retlw	0
   638     06E8  342B               	retlw	43
   639     06E9  3401               	retlw	1
   640     06EA  3400               	retlw	0
   641     06EB  3429               	retlw	41
   642     06EC  3401               	retlw	1
   643     06ED  3400               	retlw	0
   644     06EE  3426               	retlw	38
   645     06EF  3401               	retlw	1
   646     06F0  3400               	retlw	0
   647     06F1  3424               	retlw	36
   648     06F2  3401               	retlw	1
   649     06F3  3400               	retlw	0
   650     06F4  3421               	retlw	33
   651     06F5  3401               	retlw	1
   652     06F6  3400               	retlw	0
   653     06F7  341F               	retlw	31
   654     06F8  3401               	retlw	1
   655     06F9  3400               	retlw	0
   656     06FA  341C               	retlw	28
   657     06FB  3401               	retlw	1
   658     06FC  3400               	retlw	0
   659     06FD  341A               	retlw	26
   660     06FE  3401               	retlw	1
   661     06FF  3400               	retlw	0
   662     0700  3418               	retlw	24
   663     0701  3401               	retlw	1
   664     0702  3400               	retlw	0
   665     0703  3416               	retlw	22
   666     0704  3401               	retlw	1
   667     0705  3400               	retlw	0
   668     0706  3413               	retlw	19
   669     0707  3401               	retlw	1
   670     0708  3400               	retlw	0
   671     0709  3411               	retlw	17
   672     070A  3401               	retlw	1
   673     070B  3400               	retlw	0
   674     070C  340F               	retlw	15
   675     070D  3401               	retlw	1
   676     070E  3400               	retlw	0
   677     070F  340D               	retlw	13
   678     0710  3401               	retlw	1
   679     0711  3400               	retlw	0
   680     0712  340B               	retlw	11
   681     0713  3401               	retlw	1
   682     0714  3400               	retlw	0
   683     0715  3409               	retlw	9
   684     0716  3401               	retlw	1
   685     0717  3400               	retlw	0
   686     0718  3407               	retlw	7
   687     0719  3401               	retlw	1
   688     071A  3400               	retlw	0
   689                           
   690                           	psect	idataBANK1
   691     0C31                     __pidataBANK1:
   692                           
   693                           ;initializer for _tx_buf
   694     0C31  3428               	retlw	40
   695     0C32  3497               	retlw	151
   696                           
   697                           ;initializer for _sw4_pos
   698     0C33  3403               	retlw	3
   699                           
   700                           ;initializer for _sw3_pos
   701     0C34  3403               	retlw	3
   702                           
   703                           ;initializer for _sw2_pos
   704     0C35  3403               	retlw	3
   705                           
   706                           ;initializer for _sw1_pos
   707     0C36  3402               	retlw	2
   708                           
   709                           	psect	stringtext1
   710     1000                     __pstringtext1:
   711     1000                     _min_ret_table:
   712     1000  34DC               	retlw	220
   713     1001  3405               	retlw	5
   714     1002  3414               	retlw	20
   715     1003  3405               	retlw	5
   716     1004  344C               	retlw	76
   717     1005  3404               	retlw	4
   718     1006  3484               	retlw	132
   719     1007  3403               	retlw	3
   720     1008                     __end_of_min_ret_table:
   721                           
   722                           	psect	stringtext2
   723     1008                     __pstringtext2:
   724     1008                     _max_adv_table:
   725     1008  34C4               	retlw	196
   726     1009  3409               	retlw	9
   727     100A  3434               	retlw	52
   728     100B  3408               	retlw	8
   729     100C  34A4               	retlw	164
   730     100D  3406               	retlw	6
   731     100E  3414               	retlw	20
   732     100F  3405               	retlw	5
   733     1010                     __end_of_max_adv_table:
   734                           
   735                           	psect	stringtext3
   736     1015                     __pstringtext3:
   737     1015                     _max_adv_grad_table:
   738     1015  3428               	retlw	40
   739     1016  341E               	retlw	30
   740     1017  3414               	retlw	20
   741     1018  340A               	retlw	10
   742     1019                     __end_of_max_adv_grad_table:
   743                           
   744                           	psect	stringtext4
   745     1019                     __pstringtext4:
   746     1019                     _adv_start_rpm_table:
   747     1019  342D               	retlw	45
   748     101A  3423               	retlw	35
   749     101B  3419               	retlw	25
   750     101C  340F               	retlw	15
   751     101D                     __end_of_adv_start_rpm_table:
   752                           
   753                           	psect	stringtext5
   754     1010                     __pstringtext5:
   755     1010                     _numerator_rpm:
   756     1010  347C               	retlw	124
   757     1011  3492               	retlw	146
   758     1012                     __end_of_numerator_rpm:
   759     0014                     _TRISC	set	20
   760     0013                     _TRISB	set	19
   761     0012                     _TRISA	set	18
   762     001A                     _LATC	set	26
   763     0019                     _LATB	set	25
   764     0018                     _LATA	set	24
   765     000E                     _PORTC	set	14
   766     000D                     _PORTB	set	13
   767     000C                     _PORTA	set	12
   768     000D                     _PORTBbits	set	13
   769     000E                     _PORTCbits	set	14
   770     005E                     _PEIE	set	94
   771     005F                     _GIE	set	95
   772     00C0                     _LATA0	set	192
   773     00D1                     _LATC1	set	209
   774     0064                     _RA4	set	100
   775     0075                     _RC5	set	117
   776     00D2                     _LATC2	set	210
   777     011C                     _SP1BRGH	set	284
   778     011B                     _SP1BRGL	set	283
   779     011E                     _TX1STA	set	286
   780     011D                     _RC1STA	set	285
   781     011F                     _BAUD1CON	set	287
   782     011A                     _TX1REG	set	282
   783     08F1                     _TRMT	set	2289
   784     020C                     _TMR1	set	524
   785     020E                     _T1CON	set	526
   786     0211                     _T1CLK	set	529
   787     020C                     _TMR1L	set	524
   788     020D                     _TMR1H	set	525
   789     1070                     _TMR1ON	set	4208
   790     0310                     _CCPR2	set	784
   791     0313                     _CCP2CAP	set	787
   792     030F                     _CCP1CAP	set	783
   793     0312                     _CCP2CON	set	786
   794     030E                     _CCP1CON	set	782
   795     030C                     _CCPR1	set	780
   796     070E                     _PIR2	set	1806
   797     070D                     _PIR1	set	1805
   798     070C                     _PIR0	set	1804
   799     38B4                     _IOCIE	set	14516
   800     38BD                     _TMR1IE	set	14525
   801     38C7                     _CCP2IE	set	14535
   802     38BF                     _CCP1IE	set	14527
   803     386D                     _TMR1IF	set	14445
   804     3877                     _CCP2IF	set	14455
   805     386F                     _CCP1IF	set	14447
   806     080C                     _WDTCON	set	2060
   807     0892                     _OSCTUNE	set	2194
   808     0893                     _OSCFRQ	set	2195
   809     0891                     _OSCEN	set	2193
   810     1ECB                     _RX1PPS	set	7883
   811     1EA2                     _CCP2PPS	set	7842
   812     1EA1                     _CCP1PPS	set	7841
   813     1E8F                     _PPSLOCKbits	set	7823
   814     1E8F                     _PPSLOCK	set	7823
   815     1F1E                     _RB6PPS	set	7966
   816     1F21                     _RC1PPS	set	7969
   817     1F52                     _INLVLC	set	8018
   818     1F47                     _INLVLB	set	8007
   819     1F3C                     _INLVLA	set	7996
   820     1F4E                     _ANSELC	set	8014
   821     1F43                     _ANSELB	set	8003
   822     1F38                     _ANSELA	set	7992
   823     F9F2                     _IOCAN2	set	63986
   824     F9FA                     _IOCAF2	set	63994
   825     1012                     STR_2:
   826     1012  340D               	retlw	13
   827     1013  340A               	retlw	10
   828     1014  3400               	retlw	0
   829                           
   830                           	psect	stringtext6
   831     101D                     __pstringtext6:
   832     101D                     STR_1:
   833     101D  3425               	retlw	37	;'%'
   834     101E  3464               	retlw	100	;'d'
   835     101F  3400               	retlw	0
   836                           
   837                           	psect	stringtext7
   838     0000                     __pstringtext7:
   839                           
   840                           	psect	cinit
   841     015C                     start_initialization:	
   842                           ; #config settings
   843                           
   844     015C                     __initialization:	;BIGRAM
   845                           
   846                           ; Initialize objects allocated to BIGRAM
   847     015C  3092               	movlw	low __pidataBIGRAM
   848     015D  0084               	movwf	4
   849     015E  3085               	movlw	(high __pidataBIGRAM)| (0+128)
   850     015F  0085               	movwf	5
   851     0160  30DE               	movlw	low (0+8414)
   852     0161  0086               	movwf	6
   853     0162  3020               	movlw	high (0+8414)
   854     0163  0087               	movwf	7
   855     0164  3001               	movlw	1
   856     0165  00FF               	movwf	btemp+1
   857     0166  3089               	movlw	137
   858     0167  318C  2474  3181   	fcall	init_ram
   859                           
   860                           ; Initialize objects allocated to BANK1
   861     016A  3031               	movlw	low __pidataBANK1
   862     016B  0084               	movwf	4
   863     016C  308C               	movlw	(high __pidataBANK1)| (0+128)
   864     016D  0085               	movwf	5
   865     016E  30D6               	movlw	low __pdataBANK1
   866     016F  0086               	movwf	6
   867     0170  3000               	movlw	high __pdataBANK1
   868     0171  0087               	movwf	7
   869     0172  3000               	movlw	0
   870     0173  00FF               	movwf	btemp+1
   871     0174  3006               	movlw	6
   872     0175  318C  2474  3181   	fcall	init_ram
   873                           
   874                           ; Clear objects allocated to BIGRAM
   875     0178  3067               	movlw	low (0+8807)
   876     0179  0084               	movwf	4
   877     017A  3022               	movlw	high (0+8807)
   878     017B  0085               	movwf	5
   879     017C  3089               	movlw	137
   880     017D  00FE               	movwf	btemp
   881     017E  3001               	movlw	1
   882     017F  00FF               	movwf	btemp+1
   883     0180  318C  2468  3181   	fcall	clear_ram0
   884                           
   885                           ; Clear objects allocated to COMMON
   886     0183  01FC               	clrf	__pbssCOMMON& (0+127)
   887     0184  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   888                           
   889                           ; Clear objects allocated to BANK0
   890     0185  01CC               	clrf	__pbssBANK0& (0+127)
   891     0186  01CD               	clrf	(__pbssBANK0+1)& (0+127)
   892     0187  01CE               	clrf	(__pbssBANK0+2)& (0+127)
   893     0188  01CF               	clrf	(__pbssBANK0+3)& (0+127)
   894     0189  01D0               	clrf	(__pbssBANK0+4)& (0+127)
   895     018A  01D1               	clrf	(__pbssBANK0+5)& (0+127)
   896     018B  01D2               	clrf	(__pbssBANK0+6)& (0+127)
   897                           
   898                           ; Clear objects allocated to BANK1
   899     018C  0141               	movlb	1	; select bank1
   900     018D  01DC               	clrf	__pbssBANK1& (0+127)
   901     018E  01DD               	clrf	(__pbssBANK1+1)& (0+127)
   902     018F  01DE               	clrf	(__pbssBANK1+2)& (0+127)
   903     0190  01DF               	clrf	(__pbssBANK1+3)& (0+127)
   904     0191  01E0               	clrf	(__pbssBANK1+4)& (0+127)
   905                           
   906                           ; Clear objects allocated to BANK2
   907     0192  3020               	movlw	low __pbssBANK2
   908     0193  0084               	movwf	4
   909     0194  3001               	movlw	high __pbssBANK2
   910     0195  0085               	movwf	5
   911     0196  3020               	movlw	32
   912     0197  00FE               	movwf	btemp
   913     0198  3000               	movlw	0
   914     0199  00FF               	movwf	btemp+1
   915     019A  318C  2468  3181   	fcall	clear_ram0
   916     019D                     end_of_initialization:	
   917                           ;End of C runtime variable initialization code
   918                           
   919     019D                     __end_of__initialization:
   920     019D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   921     019E  0140               	movlb	0
   922     019F  318C  2C92         	ljmp	_main	;jump to C main() function
   923                           
   924                           	psect	bssCOMMON
   925     007C                     __pbssCOMMON:
   926     007C                     _test:
   927     007C                     	ds	1
   928     007D                     _map_sel:
   929     007D                     	ds	1
   930                           
   931                           	psect	bssBANK0
   932     004C                     __pbssBANK0:
   933     004C                     _ig_counter:
   934     004C                     	ds	2
   935     004E                     _pwj_state:
   936     004E                     	ds	1
   937     004F                     _revlimit_state:
   938     004F                     	ds	1
   939     0050                     _EG_state:
   940     0050                     	ds	1
   941     0051                     _orev_counter:
   942     0051                     	ds	1
   943     0052                     _rpm:
   944     0052                     	ds	1
   945                           
   946                           	psect	bssBANK1
   947     00DC                     __pbssBANK1:
   948     00DC                     _width:
   949     00DC                     	ds	2
   950     00DE                     _prec:
   951     00DE                     	ds	2
   952     00E0                     _flags:
   953     00E0                     	ds	1
   954                           
   955                           	psect	dataBANK1
   956     00D6                     __pdataBANK1:
   957     00D6                     _tx_buf:
   958     00D6                     	ds	2
   959     00D8                     _sw4_pos:
   960     00D8                     	ds	1
   961     00D9                     _sw3_pos:
   962     00D9                     	ds	1
   963     00DA                     _sw2_pos:
   964     00DA                     	ds	1
   965     00DB                     _sw1_pos:
   966     00DB                     	ds	1
   967                           
   968                           	psect	bssBANK2
   969     0120                     __pbssBANK2:
   970     0120                     _dbuf:
   971     0120                     	ds	32
   972                           
   973                           	psect	inittext
   974     0C74                     init_ram:
   975     0C74  00FE               	movwf	btemp
   976     0C75                     initloop:
   977     0C75  0012               	moviw fsr0++
   978     0C76  001E               	movwi fsr1++
   979     0C77  3001               	movlw	1
   980     0C78  02FE               	subwf	btemp,f
   981     0C79  3000               	movlw	0
   982     0C7A  3BFF               	subwfb	btemp+1,f
   983     0C7B  087F               	movf	btemp+1,w
   984     0C7C  047E               	iorwf	btemp,w
   985     0C7D  1D03               	skipz
   986     0C7E  2C75               	goto	initloop
   987     0C7F  3400               	retlw	0
   988                           
   989                           	psect	clrtext
   990     0C68                     clear_ram0:	
   991                           ;	Called with FSR0 containing the base address, and
   992                           ;	btemp/btemp+1 has the size to clear
   993                           
   994     0C68  0064               	clrwdt	;clear the watchdog before getting into this loop
   995     0C69                     clrloop0:
   996     0C69  0180               	clrf	0	;clear RAM location pointed to by FSR
   997     0C6A  3101               	addfsr 0,1
   998     0C6B  3001               	movlw	1
   999     0C6C  02FE               	subwf	btemp,f
  1000     0C6D  3000               	movlw	0
  1001     0C6E  3BFF               	subwfb	btemp+1,f
  1002     0C6F  087F               	movf	btemp+1,w
  1003     0C70  047E               	iorwf	btemp,w
  1004     0C71  1D03               	skipz
  1005     0C72  2C69               	goto	clrloop0	;have we reached the end yet?
  1006     0C73  3400               	retlw	0	;all done for this memory range, return
  1007                           
  1008                           	psect	cstackBANK1
  1009     00A0                     __pcstackBANK1:
  1010     00A0                     ??_initialize_system:
  1011     00A0                     ??_check_sw_state:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014     00A0                     ??_ccp1_enable:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017     00A0                     ??_ccp2_disable:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020     00A0                     ??_putch:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023     00A0                     ??_Write_Byte:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026     00A0                     ?_fputc:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029     00A0                     ?___wmul:	
  1030                           ; 2 bytes @ 0x0
  1031                           
  1032     00A0                     ?___awdiv:	
  1033                           ; 2 bytes @ 0x0
  1034                           
  1035     00A0                     ?___awmod:	
  1036                           ; 2 bytes @ 0x0
  1037                           
  1038     00A0                     ?___lwdiv:	
  1039                           ; 2 bytes @ 0x0
  1040                           
  1041     00A0                     Write_Byte@chr:	
  1042                           ; 2 bytes @ 0x0
  1043                           
  1044     00A0                     ___wmul@multiplier:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047     00A0                     ___awdiv@divisor:	
  1048                           ; 2 bytes @ 0x0
  1049                           
  1050     00A0                     ___awmod@divisor:	
  1051                           ; 2 bytes @ 0x0
  1052                           
  1053     00A0                     ___lwdiv@divisor:	
  1054                           ; 2 bytes @ 0x0
  1055                           
  1056     00A0                     fputc@c:	
  1057                           ; 2 bytes @ 0x0
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x0
  1061     00A0                     	ds	1
  1062     00A1                     ?_WriteString:
  1063     00A1                     WriteString@str:	
  1064                           ; 1 bytes @ 0x1
  1065                           
  1066                           
  1067                           ; 2 bytes @ 0x1
  1068     00A1                     	ds	1
  1069     00A2                     fputc@fp:
  1070     00A2                     ___wmul@multiplicand:	
  1071                           ; 1 bytes @ 0x2
  1072                           
  1073     00A2                     ___awdiv@dividend:	
  1074                           ; 2 bytes @ 0x2
  1075                           
  1076     00A2                     ___awmod@dividend:	
  1077                           ; 2 bytes @ 0x2
  1078                           
  1079     00A2                     ___lwdiv@dividend:	
  1080                           ; 2 bytes @ 0x2
  1081                           
  1082                           
  1083                           ; 2 bytes @ 0x2
  1084     00A2                     	ds	1
  1085     00A3                     ??_WriteString:
  1086     00A3                     ??_fputc:	
  1087                           ; 1 bytes @ 0x3
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0x3
  1091     00A3                     	ds	1
  1092     00A4                     ??___wmul:
  1093     00A4                     ??___awdiv:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096     00A4                     ??___awmod:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099     00A4                     ??___lwdiv:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102     00A4                     ___wmul@product:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0x4
  1107     00A4                     	ds	1
  1108     00A5                     ___awdiv@counter:
  1109     00A5                     ___awmod@counter:	
  1110                           ; 1 bytes @ 0x5
  1111                           
  1112     00A5                     ___lwdiv@quotient:	
  1113                           ; 1 bytes @ 0x5
  1114                           
  1115                           
  1116                           ; 2 bytes @ 0x5
  1117     00A5                     	ds	1
  1118     00A6                     ?___tmul:
  1119     00A6                     ___awdiv@sign:	
  1120                           ; 3 bytes @ 0x6
  1121                           
  1122     00A6                     ___awmod@sign:	
  1123                           ; 1 bytes @ 0x6
  1124                           
  1125     00A6                     ___tmul@multiplier:	
  1126                           ; 1 bytes @ 0x6
  1127                           
  1128                           
  1129                           ; 3 bytes @ 0x6
  1130     00A6                     	ds	1
  1131     00A7                     ?_abs:
  1132     00A7                     ___lwdiv@counter:	
  1133                           ; 2 bytes @ 0x7
  1134                           
  1135     00A7                     ___awdiv@quotient:	
  1136                           ; 1 bytes @ 0x7
  1137                           
  1138     00A7                     abs@a:	
  1139                           ; 2 bytes @ 0x7
  1140                           
  1141                           
  1142                           ; 2 bytes @ 0x7
  1143     00A7                     	ds	2
  1144     00A9                     ??_abs:
  1145     00A9                     ___tmul@multiplicand:	
  1146                           ; 1 bytes @ 0x9
  1147                           
  1148                           
  1149                           ; 3 bytes @ 0x9
  1150     00A9                     	ds	2
  1151     00AB                     ?_vfpfcnvrt:
  1152     00AB                     vfpfcnvrt@fmt:	
  1153                           ; 1 bytes @ 0xB
  1154                           
  1155                           
  1156                           ; 1 bytes @ 0xB
  1157     00AB                     	ds	1
  1158     00AC                     ??___tmul:
  1159     00AC                     vfpfcnvrt@ap:	
  1160                           ; 1 bytes @ 0xC
  1161                           
  1162     00AC                     ___tmul@product:	
  1163                           ; 1 bytes @ 0xC
  1164                           
  1165                           
  1166                           ; 3 bytes @ 0xC
  1167     00AC                     	ds	1
  1168     00AD                     ??_vfpfcnvrt:
  1169                           
  1170                           ; 1 bytes @ 0xD
  1171     00AD                     	ds	2
  1172     00AF                     ??_calc_map:
  1173                           
  1174                           ; 1 bytes @ 0xF
  1175     00AF                     	ds	2
  1176     00B1                     vfpfcnvrt@done:
  1177                           
  1178                           ; 1 bytes @ 0x11
  1179     00B1                     	ds	1
  1180     00B2                     vfpfcnvrt@fp:
  1181                           
  1182                           ; 1 bytes @ 0x12
  1183     00B2                     	ds	1
  1184     00B3                     vfpfcnvrt@cp:
  1185                           
  1186                           ; 2 bytes @ 0x13
  1187     00B3                     	ds	2
  1188     00B5                     vfpfcnvrt@convarg:
  1189                           
  1190                           ; 4 bytes @ 0x15
  1191     00B5                     	ds	4
  1192     00B9                     vfpfcnvrt@c:
  1193                           
  1194                           ; 1 bytes @ 0x19
  1195     00B9                     	ds	1
  1196     00BA                     ?_vfprintf:
  1197     00BA                     vfprintf@fmt:	
  1198                           ; 2 bytes @ 0x1A
  1199                           
  1200                           
  1201                           ; 2 bytes @ 0x1A
  1202     00BA                     	ds	1
  1203     00BB                     calc_map@temp:
  1204                           
  1205                           ; 3 bytes @ 0x1B
  1206     00BB                     	ds	1
  1207     00BC                     vfprintf@ap:
  1208                           
  1209                           ; 1 bytes @ 0x1C
  1210     00BC                     	ds	1
  1211     00BD                     ??_vfprintf:
  1212                           
  1213                           ; 1 bytes @ 0x1D
  1214     00BD                     	ds	1
  1215     00BE                     vfprintf@fp:
  1216     00BE                     calc_map@temp1:	
  1217                           ; 1 bytes @ 0x1E
  1218                           
  1219                           
  1220                           ; 3 bytes @ 0x1E
  1221     00BE                     	ds	1
  1222     00BF                     vfprintf@cfmt:
  1223                           
  1224                           ; 2 bytes @ 0x1F
  1225     00BF                     	ds	2
  1226     00C1                     ?_sprintf:
  1227     00C1                     calc_map@coeff_p1_p2:	
  1228                           ; 2 bytes @ 0x21
  1229                           
  1230     00C1                     sprintf@fmt:	
  1231                           ; 1 bytes @ 0x21
  1232                           
  1233                           
  1234                           ; 2 bytes @ 0x21
  1235     00C1                     	ds	1
  1236     00C2                     calc_map@coeff_p3_p4:
  1237                           
  1238                           ; 1 bytes @ 0x22
  1239     00C2                     	ds	1
  1240     00C3                     calc_map@p1y:
  1241                           
  1242                           ; 2 bytes @ 0x23
  1243     00C3                     	ds	2
  1244     00C5                     ??_sprintf:
  1245     00C5                     calc_map@p2y:	
  1246                           ; 1 bytes @ 0x25
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0x25
  1250     00C5                     	ds	1
  1251     00C6                     sprintf@ap:
  1252                           
  1253                           ; 1 bytes @ 0x26
  1254     00C6                     	ds	1
  1255     00C7                     sprintf@s:
  1256     00C7                     calc_map@p3y:	
  1257                           ; 1 bytes @ 0x27
  1258                           
  1259                           
  1260                           ; 2 bytes @ 0x27
  1261     00C7                     	ds	1
  1262     00C8                     sprintf@f:
  1263                           
  1264                           ; 11 bytes @ 0x28
  1265     00C8                     	ds	1
  1266     00C9                     calc_map@p4y:
  1267                           
  1268                           ; 2 bytes @ 0x29
  1269     00C9                     	ds	2
  1270     00CB                     calc_map@p1x:
  1271                           
  1272                           ; 1 bytes @ 0x2B
  1273     00CB                     	ds	1
  1274     00CC                     calc_map@p2x:
  1275                           
  1276                           ; 1 bytes @ 0x2C
  1277     00CC                     	ds	1
  1278     00CD                     calc_map@p3x:
  1279                           
  1280                           ; 1 bytes @ 0x2D
  1281     00CD                     	ds	1
  1282     00CE                     calc_map@p4x:
  1283                           
  1284                           ; 1 bytes @ 0x2E
  1285     00CE                     	ds	1
  1286     00CF                     calc_map@a:
  1287                           
  1288                           ; 1 bytes @ 0x2F
  1289     00CF                     	ds	4
  1290     00D3                     ??_Write_table:
  1291                           
  1292                           ; 1 bytes @ 0x33
  1293     00D3                     	ds	2
  1294     00D5                     Write_table@a:
  1295                           
  1296                           ; 1 bytes @ 0x35
  1297     00D5                     	ds	1
  1298     00D6                     ??_main:
  1299                           
  1300                           	psect	cstackCOMMON
  1301     0070                     __pcstackCOMMON:	
  1302                           ; 1 bytes @ 0x36
  1303                           
  1304     0070                     ?_initialize_system:
  1305     0070                     ?_check_sw_state:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308     0070                     ?_calc_map:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311     0070                     ?_ccp1_enable:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314     0070                     ?_Write_table:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317     0070                     ?_ccp1_disable:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320     0070                     ??_ccp1_disable:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323     0070                     ?_ccp2_enable:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326     0070                     ??_ccp2_enable:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329     0070                     ?_ccp2_disable:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332     0070                     ?_ignition_disable:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335     0070                     ??_ignition_disable:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338     0070                     ?_putch:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341     0070                     ?_main:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344     0070                     ?_Write_Byte:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347     0070                     ?_InterruptManager:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350     0070                     ?i1_calc_map:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353     0070                     ?i1_ccp1_enable:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356     0070                     ??i1_ccp1_enable:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359     0070                     ?i1_ccp2_disable:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362     0070                     ??i1_ccp2_disable:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365     0070                     ?i1___wmul:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368     0070                     ?i1___lwdiv:	
  1369                           ; 2 bytes @ 0x0
  1370                           
  1371     0070                     putch@c:	
  1372                           ; 2 bytes @ 0x0
  1373                           
  1374     0070                     i1___wmul@multiplier:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377     0070                     i1___lwdiv@divisor:	
  1378                           ; 2 bytes @ 0x0
  1379                           
  1380                           
  1381                           ; 2 bytes @ 0x0
  1382     0070                     	ds	2
  1383     0072                     i1___wmul@multiplicand:
  1384     0072                     i1___lwdiv@dividend:	
  1385                           ; 2 bytes @ 0x2
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x2
  1389     0072                     	ds	2
  1390     0074                     ??i1___wmul:
  1391     0074                     ??i1___lwdiv:	
  1392                           ; 1 bytes @ 0x4
  1393                           
  1394     0074                     i1___wmul@product:	
  1395                           ; 1 bytes @ 0x4
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x4
  1399     0074                     	ds	1
  1400     0075                     i1___lwdiv@quotient:
  1401                           
  1402                           ; 2 bytes @ 0x5
  1403     0075                     	ds	1
  1404     0076                     ?i1___tmul:
  1405     0076                     i1___tmul@multiplier:	
  1406                           ; 3 bytes @ 0x6
  1407                           
  1408                           
  1409                           ; 3 bytes @ 0x6
  1410     0076                     	ds	1
  1411     0077                     i1___lwdiv@counter:
  1412                           
  1413                           ; 1 bytes @ 0x7
  1414     0077                     	ds	2
  1415     0079                     i1___tmul@multiplicand:
  1416                           
  1417                           ; 3 bytes @ 0x9
  1418     0079                     	ds	3
  1419     007C                     ??i1___tmul:
  1420                           
  1421                           	psect	cstackBANK0
  1422     0020                     __pcstackBANK0:	
  1423                           ; 1 bytes @ 0xC
  1424                           
  1425     0020                     i1___tmul@product:
  1426                           
  1427                           ; 3 bytes @ 0x0
  1428     0020                     	ds	3
  1429     0023                     ??i1_calc_map:
  1430                           
  1431                           ; 1 bytes @ 0x3
  1432     0023                     	ds	12
  1433     002F                     i1calc_map@temp:
  1434                           
  1435                           ; 3 bytes @ 0xF
  1436     002F                     	ds	3
  1437     0032                     i1calc_map@temp1:
  1438                           
  1439                           ; 3 bytes @ 0x12
  1440     0032                     	ds	3
  1441     0035                     i1calc_map@coeff_p1_p2:
  1442                           
  1443                           ; 1 bytes @ 0x15
  1444     0035                     	ds	1
  1445     0036                     i1calc_map@coeff_p3_p4:
  1446                           
  1447                           ; 1 bytes @ 0x16
  1448     0036                     	ds	1
  1449     0037                     i1calc_map@p1y:
  1450                           
  1451                           ; 2 bytes @ 0x17
  1452     0037                     	ds	2
  1453     0039                     i1calc_map@p2y:
  1454                           
  1455                           ; 2 bytes @ 0x19
  1456     0039                     	ds	2
  1457     003B                     i1calc_map@p3y:
  1458                           
  1459                           ; 2 bytes @ 0x1B
  1460     003B                     	ds	2
  1461     003D                     i1calc_map@p4y:
  1462                           
  1463                           ; 2 bytes @ 0x1D
  1464     003D                     	ds	2
  1465     003F                     i1calc_map@p1x:
  1466                           
  1467                           ; 1 bytes @ 0x1F
  1468     003F                     	ds	1
  1469     0040                     i1calc_map@p2x:
  1470                           
  1471                           ; 1 bytes @ 0x20
  1472     0040                     	ds	1
  1473     0041                     i1calc_map@p3x:
  1474                           
  1475                           ; 1 bytes @ 0x21
  1476     0041                     	ds	1
  1477     0042                     i1calc_map@p4x:
  1478                           
  1479                           ; 1 bytes @ 0x22
  1480     0042                     	ds	1
  1481     0043                     i1calc_map@a:
  1482                           
  1483                           ; 1 bytes @ 0x23
  1484     0043                     	ds	1
  1485     0044                     ??_InterruptManager:
  1486                           
  1487                           ; 1 bytes @ 0x24
  1488     0044                     	ds	4
  1489     0048                     InterruptManager@t1_count:
  1490                           
  1491                           ; 2 bytes @ 0x28
  1492     0048                     	ds	2
  1493     004A                     InterruptManager@pu1_2_period_count:
  1494                           
  1495                           ; 2 bytes @ 0x2A
  1496     004A                     	ds	2
  1497                           
  1498                           	psect	maintext
  1499     0C92                     __pmaintext:	
  1500 ;;
  1501 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1502 ;;
  1503 ;; *************** function _main *****************
  1504 ;; Defined at:
  1505 ;;		line 162 in file "main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : B3F/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels required when called: 9
  1525 ;; This function calls:
  1526 ;;		_Write_table
  1527 ;;		_calc_map
  1528 ;;		_ccp1_enable
  1529 ;;		_check_sw_state
  1530 ;;		_initialize_system
  1531 ;; This function is called by:
  1532 ;;		Startup code after reset
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536     0C92                     _main:	
  1537                           ;psect for function _main
  1538                           
  1539     0C92                     l2314:	
  1540                           ;incstack = 0
  1541                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1542                           
  1543                           
  1544                           ;main.c: 163:     initialize_system();
  1545     0C92  3187  271B  318C   	fcall	_initialize_system
  1546     0C95                     l2316:
  1547                           
  1548                           ;main.c: 164:     LATC2 = (0);
  1549     0C95  0140               	movlb	0	; select bank0
  1550     0C96  111A               	bcf	26,2	;volatile
  1551     0C97                     l2318:
  1552                           
  1553                           ;main.c: 165:     check_sw_state();
  1554     0C97  318E  26BA  318C   	fcall	_check_sw_state
  1555     0C9A                     l2320:
  1556                           
  1557                           ;main.c: 166:     calc_map();
  1558     0C9A  3183  239E  318C   	fcall	_calc_map
  1559     0C9D                     l2322:
  1560                           
  1561                           ;main.c: 167:     ccp1_enable();
  1562     0C9D  318C  2449  318C   	fcall	_ccp1_enable
  1563     0CA0                     l2324:
  1564                           
  1565                           ;main.c: 170:         check_sw_state();
  1566     0CA0  318E  26BA  318C   	fcall	_check_sw_state
  1567     0CA3  0064               	clrwdt	;# 
  1568                           
  1569                           ;main.c: 172:         Write_table();
  1570     0CA4  318D  2522  318C   	fcall	_Write_table
  1571     0CA7  2CA0               	goto	l2324
  1572     0CA8  3181  295A         	ljmp	start
  1573     0CAA                     __end_of_main:
  1574                           
  1575                           	psect	text1
  1576     071B                     __ptext1:	
  1577 ;; *************** function _initialize_system *****************
  1578 ;; Defined at:
  1579 ;;		line 443 in file "main.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0, pclath, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; Hardware stack levels required when called: 4
  1600 ;; This function calls:
  1601 ;;		_ccp2_disable
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607     071B                     _initialize_system:	
  1608                           ;psect for function _initialize_system
  1609                           
  1610     071B                     l2000:	
  1611                           ;incstack = 0
  1612                           ; Regs used in _initialize_system: [wreg+status,2+status,0+pclath+cstack]
  1613                           
  1614                           
  1615                           ;main.c: 445:     OSCEN = 0x40;
  1616     071B  3040               	movlw	64
  1617     071C  0151               	movlb	17	; select bank17
  1618     071D  0091               	movwf	17	;volatile
  1619                           
  1620                           ;main.c: 446:     OSCFRQ = 0x05;
  1621     071E  3005               	movlw	5
  1622     071F  0093               	movwf	19	;volatile
  1623     0720                     l2002:
  1624                           
  1625                           ;main.c: 447:     OSCTUNE = 0X00;
  1626     0720  0192               	clrf	18	;volatile
  1627     0721                     l2004:
  1628                           
  1629                           ;main.c: 450:     PORTA = 0x00;
  1630     0721  0140               	movlb	0	; select bank0
  1631     0722  018C               	clrf	12	;volatile
  1632     0723                     l2006:
  1633                           
  1634                           ;main.c: 451:     PORTB = 0x00;
  1635     0723  018D               	clrf	13	;volatile
  1636     0724                     l2008:
  1637                           
  1638                           ;main.c: 452:     PORTC = 0x00;
  1639     0724  018E               	clrf	14	;volatile
  1640     0725                     l2010:
  1641                           
  1642                           ;main.c: 453:     LATA = 0x00;
  1643     0725  0198               	clrf	24	;volatile
  1644     0726                     l2012:
  1645                           
  1646                           ;main.c: 454:     LATB = 0x00;
  1647     0726  0199               	clrf	25	;volatile
  1648     0727                     l2014:
  1649                           
  1650                           ;main.c: 455:     LATC = 0x00;
  1651     0727  019A               	clrf	26	;volatile
  1652     0728                     l2016:
  1653                           
  1654                           ;main.c: 456:     ANSELA = 0x00;
  1655     0728  017E               	movlb	62	; select bank62
  1656     0729  01B8               	clrf	56	;volatile
  1657     072A                     l2018:
  1658                           
  1659                           ;main.c: 457:     ANSELB = 0x00;
  1660     072A  01C3               	clrf	67	;volatile
  1661     072B                     l2020:
  1662                           
  1663                           ;main.c: 458:     ANSELC = 0x00;
  1664     072B  01CE               	clrf	78	;volatile
  1665                           
  1666                           ;main.c: 461:     TRISA = 0b00110100;
  1667     072C  3034               	movlw	52
  1668     072D  0140               	movlb	0	; select bank0
  1669     072E  0092               	movwf	18	;volatile
  1670                           
  1671                           ;main.c: 462:     TRISB = 0b10110000;
  1672     072F  30B0               	movlw	176
  1673     0730  0093               	movwf	19	;volatile
  1674                           
  1675                           ;main.c: 463:     TRISC = 0b11111001;
  1676     0731  30F9               	movlw	249
  1677     0732  0094               	movwf	20	;volatile
  1678                           
  1679                           ;main.c: 464:     INLVLA = 0b00110100;
  1680     0733  3034               	movlw	52
  1681     0734  017E               	movlb	62	; select bank62
  1682     0735  00BC               	movwf	60	;volatile
  1683                           
  1684                           ;main.c: 465:     INLVLB = 0b10110000;
  1685     0736  30B0               	movlw	176
  1686     0737  00C7               	movwf	71	;volatile
  1687                           
  1688                           ;main.c: 466:     INLVLC = 0b11111001;
  1689     0738  30F9               	movlw	249
  1690     0739  00D2               	movwf	82	;volatile
  1691                           
  1692                           ;main.c: 469:     T1CLK = 0b00000001;
  1693     073A  3001               	movlw	1
  1694     073B  0144               	movlb	4	; select bank4
  1695     073C  0091               	movwf	17	;volatile
  1696                           
  1697                           ;main.c: 470:     T1CON = 0b00110000;
  1698     073D  3030               	movlw	48
  1699     073E  008E               	movwf	14	;volatile
  1700     073F                     l2022:
  1701                           
  1702                           ;main.c: 471:     TMR1 = 0x0000;
  1703     073F  018C               	clrf	12	;volatile
  1704     0740  018D               	clrf	13	;volatile
  1705     0741                     l2024:
  1706                           
  1707                           ;main.c: 476:     CCP1CAP = 0x0;
  1708     0741  0146               	movlb	6	; select bank6
  1709     0742  018F               	clrf	15	;volatile
  1710     0743                     l2026:
  1711                           
  1712                           ;main.c: 477:     CCP2CAP = 0x0;
  1713     0743  0193               	clrf	19	;volatile
  1714     0744                     l2028:
  1715                           
  1716                           ;main.c: 478:     CCPR1 = 0x0000;
  1717     0744  018C               	clrf	12	;volatile
  1718     0745  018D               	clrf	13	;volatile
  1719     0746                     l2030:
  1720                           
  1721                           ;main.c: 479:     CCPR2 = 0x0000;
  1722     0746  0190               	clrf	16	;volatile
  1723     0747  0191               	clrf	17	;volatile
  1724     0748                     l2032:
  1725                           
  1726                           ;main.c: 482:     IOCAN2 = 1;
  1727     0748  017E               	movlb	62	; select bank62
  1728     0749  153E               	bsf	62,2	;volatile
  1729     074A                     l2034:
  1730                           
  1731                           ;main.c: 485:     PPSLOCK = 0x55;
  1732     074A  3055               	movlw	85
  1733     074B  017D               	movlb	61	; select bank61
  1734     074C  008F               	movwf	15	;volsfr
  1735     074D                     l2036:
  1736                           
  1737                           ;main.c: 486:     PPSLOCK = 0xAA;
  1738     074D  30AA               	movlw	170
  1739     074E  008F               	movwf	15	;volsfr
  1740     074F                     l2038:
  1741                           
  1742                           ;main.c: 487:     PPSLOCKbits.PPSLOCKED = 0;
  1743     074F  100F               	bcf	15,0	;volsfr
  1744     0750                     l2040:
  1745                           
  1746                           ;main.c: 488:     CCP1PPS = 0x10;
  1747     0750  3010               	movlw	16
  1748     0751  00A1               	movwf	33	;volatile
  1749     0752                     l2042:
  1750                           
  1751                           ;main.c: 489:     CCP2PPS = 0b00010001;
  1752     0752  3011               	movlw	17
  1753     0753  00A2               	movwf	34	;volatile
  1754     0754                     l2044:
  1755                           
  1756                           ;main.c: 490:     RC1PPS = 0x02;
  1757     0754  3002               	movlw	2
  1758     0755  017E               	movlb	62	; select bank62
  1759     0756  00A1               	movwf	33	;volatile
  1760     0757                     l2046:
  1761                           
  1762                           ;main.c: 491:     RX1PPS = 0x0F;
  1763     0757  300F               	movlw	15
  1764     0758  017D               	movlb	61	; select bank61
  1765     0759  00CB               	movwf	75	;volatile
  1766     075A                     l2048:
  1767                           
  1768                           ;main.c: 492:     RB6PPS = 0x05;
  1769     075A  3005               	movlw	5
  1770     075B  017E               	movlb	62	; select bank62
  1771     075C  009E               	movwf	30	;volatile
  1772     075D                     l2050:
  1773                           
  1774                           ;main.c: 493:     PPSLOCK = 0x55;
  1775     075D  3055               	movlw	85
  1776     075E  017D               	movlb	61	; select bank61
  1777     075F  008F               	movwf	15	;volsfr
  1778     0760                     l2052:
  1779                           
  1780                           ;main.c: 494:     PPSLOCK = 0xAA;
  1781     0760  30AA               	movlw	170
  1782     0761  008F               	movwf	15	;volsfr
  1783     0762                     l2054:
  1784                           
  1785                           ;main.c: 495:     PPSLOCKbits.PPSLOCKED = 1;
  1786     0762  140F               	bsf	15,0	;volsfr
  1787                           
  1788                           ;main.c: 498:     BAUD1CON = 0x00;
  1789     0763  0142               	movlb	2	; select bank2
  1790     0764  019F               	clrf	31	;volatile
  1791                           
  1792                           ;main.c: 499:     RC1STA = 0x00;
  1793     0765  019D               	clrf	29	;volatile
  1794                           
  1795                           ;main.c: 500:     TX1STA = 0x00;
  1796     0766  019E               	clrf	30	;volatile
  1797                           
  1798                           ;main.c: 501:     SP1BRGL = 0x00;
  1799     0767  019B               	clrf	27	;volatile
  1800                           
  1801                           ;main.c: 502:     SP1BRGH = 0x00;
  1802     0768  019C               	clrf	28	;volatile
  1803     0769                     l2056:
  1804                           
  1805                           ;main.c: 504:     BAUD1CON = 0x40;
  1806     0769  3040               	movlw	64
  1807     076A  009F               	movwf	31	;volatile
  1808     076B                     l2058:
  1809                           
  1810                           ;main.c: 506:     RC1STA = 0x80;
  1811     076B  3080               	movlw	128
  1812     076C  009D               	movwf	29	;volatile
  1813     076D                     l2060:
  1814                           
  1815                           ;main.c: 508:     TX1STA = 0x22;
  1816     076D  3022               	movlw	34
  1817     076E  009E               	movwf	30	;volatile
  1818     076F                     l2062:
  1819                           
  1820                           ;main.c: 510:     SP1BRGL = 0x33;
  1821     076F  3033               	movlw	51
  1822     0770  009B               	movwf	27	;volatile
  1823                           
  1824                           ;main.c: 512:     SP1BRGH = 0x0;
  1825     0771  019C               	clrf	28	;volatile
  1826     0772                     l2064:
  1827                           
  1828                           ;main.c: 516:     WDTCON = 0x13;
  1829     0772  3013               	movlw	19
  1830     0773  0150               	movlb	16	; select bank16
  1831     0774  008C               	movwf	12	;volatile
  1832     0775                     l2066:
  1833                           
  1834                           ;main.c: 519:     PIR0 = 0x0;
  1835     0775  014E               	movlb	14	; select bank14
  1836     0776  018C               	clrf	12	;volatile
  1837     0777                     l2068:
  1838                           
  1839                           ;main.c: 520:     PIR1 = 0x0;
  1840     0777  018D               	clrf	13	;volatile
  1841     0778                     l2070:
  1842                           
  1843                           ;main.c: 521:     PIR2 = 0x0;
  1844     0778  018E               	clrf	14	;volatile
  1845     0779                     l2072:
  1846                           
  1847                           ;main.c: 524:     GIE = 1;
  1848     0779  178B               	bsf	11,7	;volatile
  1849     077A                     l2074:
  1850                           
  1851                           ;main.c: 525:     PEIE = 1;
  1852     077A  170B               	bsf	11,6	;volatile
  1853     077B                     l2076:
  1854                           
  1855                           ;main.c: 526:     CCP1IE = 1;
  1856     077B  1797               	bsf	23,7	;volatile
  1857     077C                     l2078:
  1858                           
  1859                           ;main.c: 527:     CCP2IE = 1;
  1860     077C  1798               	bsf	24,7	;volatile
  1861     077D                     l2080:
  1862                           
  1863                           ;main.c: 528:     TMR1IE = 1;
  1864     077D  1697               	bsf	23,5	;volatile
  1865     077E                     l2082:
  1866                           
  1867                           ;main.c: 529:     IOCIE = 1;
  1868     077E  1616               	bsf	22,4	;volatile
  1869     077F                     l2084:
  1870                           
  1871                           ;main.c: 531:     ccp2_disable();
  1872     077F  318C  242C  3187   	fcall	_ccp2_disable
  1873     0782                     l2086:
  1874                           
  1875                           ;main.c: 532:     LATC1 = 0;
  1876     0782  0140               	movlb	0	; select bank0
  1877     0783  109A               	bcf	26,1	;volatile
  1878     0784                     l307:
  1879     0784  0008               	return
  1880     0785                     __end_of_initialize_system:
  1881                           
  1882                           	psect	text2
  1883     0C2C                     __ptext2:	
  1884 ;; *************** function _ccp2_disable *****************
  1885 ;; Defined at:
  1886 ;;		line 434 in file "main.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		status,2
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1904 ;;Total ram usage:        0 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 3
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_initialize_system
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914     0C2C                     _ccp2_disable:	
  1915                           ;psect for function _ccp2_disable
  1916                           
  1917     0C2C                     l1878:	
  1918                           ;incstack = 0
  1919                           ; Regs used in _ccp2_disable: [status,2]
  1920                           
  1921                           
  1922                           ;main.c: 435:     CCP2IE = 0;
  1923     0C2C  014E               	movlb	14	; select bank14
  1924     0C2D  1398               	bcf	24,7	;volatile
  1925     0C2E                     l1880:
  1926                           
  1927                           ;main.c: 436:     CCP2CON = 0;
  1928     0C2E  0146               	movlb	6	; select bank6
  1929     0C2F  0192               	clrf	18	;volatile
  1930     0C30                     l304:
  1931     0C30  0008               	return
  1932     0C31                     __end_of_ccp2_disable:
  1933                           
  1934                           	psect	text3
  1935     0EBA                     __ptext3:	
  1936 ;; *************** function _check_sw_state *****************
  1937 ;; Defined at:
  1938 ;;		line 263 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1954 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1955 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1956 ;;Total ram usage:        2 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 3
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966     0EBA                     _check_sw_state:	
  1967                           ;psect for function _check_sw_state
  1968                           
  1969     0EBA                     l2088:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _check_sw_state: [wreg-fsr0h+status,2+status,0]
  1972                           
  1973                           
  1974                           ;main.c: 264:     switch (RC5) {
  1975     0EBA  2EC0               	goto	l2094
  1976     0EBB                     l246:	
  1977                           ;main.c: 265:     case 0:
  1978                           
  1979                           
  1980                           ;main.c: 266:         pwj_state = PWJ_DISABLE;
  1981     0EBB  01CE               	clrf	_pwj_state
  1982     0EBC  0ACE               	incf	_pwj_state,f
  1983                           
  1984                           ;main.c: 267:         break;
  1985     0EBD  2ED0               	goto	l2100
  1986     0EBE                     l2090:
  1987                           
  1988                           ;main.c: 269:         pwj_state = PWJ_ENABLE;
  1989     0EBE  01CE               	clrf	_pwj_state
  1990                           
  1991                           ;main.c: 270:         break;
  1992     0EBF  2ED0               	goto	l2100
  1993     0EC0                     l2094:
  1994     0EC0  3000               	movlw	0
  1995     0EC1  0140               	movlb	0	; select bank0
  1996     0EC2  1A8E               	btfsc	14,5	;volatile
  1997     0EC3  3001               	movlw	1
  1998                           
  1999                           ; Switch size 1, requested type "simple"
  2000                           ; Number of cases is 2, Range of values is 0 to 1
  2001                           ; switch strategies available:
  2002                           ; Name         Instructions Cycles
  2003                           ; simple_byte            7     4 (average)
  2004                           ; direct_byte           10     6 (fixed)
  2005                           ; jumptable            260     6 (fixed)
  2006                           ;	Chosen strategy is simple_byte
  2007     0EC4  3A00               	xorlw	0	; case 0
  2008     0EC5  1903               	skipnz
  2009     0EC6  2EBB               	goto	l246
  2010     0EC7  3A01               	xorlw	1	; case 1
  2011     0EC8  1903               	skipnz
  2012     0EC9  2EBE               	goto	l2090
  2013     0ECA  2ED0               	goto	l2100
  2014     0ECB                     l250:	
  2015                           ;main.c: 273:     case 0:
  2016                           
  2017                           
  2018                           ;main.c: 274:         revlimit_state = REVLIMIT_DISABLE;
  2019     0ECB  01CF               	clrf	_revlimit_state
  2020     0ECC  0ACF               	incf	_revlimit_state,f
  2021                           
  2022                           ;main.c: 275:         break;
  2023     0ECD  2EDA               	goto	l2102
  2024     0ECE                     l2096:
  2025                           
  2026                           ;main.c: 277:         revlimit_state = REVLIMIT_ENABLE;
  2027     0ECE  01CF               	clrf	_revlimit_state
  2028                           
  2029                           ;main.c: 278:         break;
  2030     0ECF  2EDA               	goto	l2102
  2031     0ED0                     l2100:
  2032     0ED0  3000               	movlw	0
  2033     0ED1  1A0C               	btfsc	12,4	;volatile
  2034     0ED2  3001               	movlw	1
  2035                           
  2036                           ; Switch size 1, requested type "simple"
  2037                           ; Number of cases is 2, Range of values is 0 to 1
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte            7     4 (average)
  2041                           ; direct_byte           10     6 (fixed)
  2042                           ; jumptable            260     6 (fixed)
  2043                           ;	Chosen strategy is simple_byte
  2044     0ED3  3A00               	xorlw	0	; case 0
  2045     0ED4  1903               	skipnz
  2046     0ED5  2ECB               	goto	l250
  2047     0ED6  3A01               	xorlw	1	; case 1
  2048     0ED7  1903               	skipnz
  2049     0ED8  2ECE               	goto	l2096
  2050     0ED9  2EDA               	goto	l2102
  2051     0EDA                     l2102:
  2052                           
  2053                           ;main.c: 281:     sw1_pos = (PORTCbits.RC4 << 1) + PORTCbits.RC3;
  2054     0EDA  0E0E               	swapf	14,w	;volatile
  2055     0EDB  3901               	andlw	1
  2056     0EDC  0141               	movlb	1	; select bank1
  2057     0EDD  00A0               	movwf	??_check_sw_state^(0+128)
  2058     0EDE  3001               	movlw	1
  2059     0EDF                     u1805:
  2060     0EDF  35A0               	lslf	??_check_sw_state^(0+128),f
  2061     0EE0  0B89               	decfsz	9,f
  2062     0EE1  2EDF               	goto	u1805
  2063     0EE2  0140               	movlb	0	; select bank0
  2064     0EE3  0C0E               	rrf	14,w	;volatile
  2065     0EE4  0141               	movlb	1	; select bank1
  2066     0EE5  00A1               	movwf	(??_check_sw_state+1)^(0+128)
  2067     0EE6  0CA1               	rrf	(??_check_sw_state+1)^(0+128),f
  2068     0EE7  0C21               	rrf	(??_check_sw_state+1)^(0+128),w
  2069     0EE8  3901               	andlw	1
  2070     0EE9  0720               	addwf	??_check_sw_state^(0+128),w
  2071     0EEA  00DB               	movwf	_sw1_pos^(0+128)
  2072                           
  2073                           ;main.c: 282:     sw2_pos = (PORTCbits.RC6 << 1) + PORTCbits.RC7;
  2074     0EEB  0140               	movlb	0	; select bank0
  2075     0EEC  0E0E               	swapf	14,w	;volatile
  2076     0EED  0C89               	rrf	9,f
  2077     0EEE  0C89               	rrf	9,f
  2078     0EEF  3901               	andlw	1
  2079     0EF0  0141               	movlb	1	; select bank1
  2080     0EF1  00A0               	movwf	??_check_sw_state^(0+128)
  2081     0EF2  3001               	movlw	1
  2082     0EF3                     u1815:
  2083     0EF3  35A0               	lslf	??_check_sw_state^(0+128),f
  2084     0EF4  0B89               	decfsz	9,f
  2085     0EF5  2EF3               	goto	u1815
  2086     0EF6  0140               	movlb	0	; select bank0
  2087     0EF7  0D0E               	rlf	14,w	;volatile
  2088     0EF8  0D0E               	rlf	14,w	;volatile
  2089     0EF9  3901               	andlw	1
  2090     0EFA  0141               	movlb	1	; select bank1
  2091     0EFB  0720               	addwf	??_check_sw_state^(0+128),w
  2092     0EFC  00DA               	movwf	_sw2_pos^(0+128)
  2093     0EFD                     l2104:
  2094                           
  2095                           ;main.c: 284:     sw3_pos = 3;
  2096     0EFD  3003               	movlw	3
  2097     0EFE  00D9               	movwf	_sw3_pos^(0+128)
  2098     0EFF                     l2106:
  2099                           
  2100                           ;main.c: 285:     sw4_pos = (PORTBbits.RB5 << 1) + PORTBbits.RB4;
  2101     0EFF  0140               	movlb	0	; select bank0
  2102     0F00  0E0D               	swapf	13,w	;volatile
  2103     0F01  0C89               	rrf	9,f
  2104     0F02  3901               	andlw	1
  2105     0F03  0141               	movlb	1	; select bank1
  2106     0F04  00A0               	movwf	??_check_sw_state^(0+128)
  2107     0F05  3001               	movlw	1
  2108     0F06                     u1825:
  2109     0F06  35A0               	lslf	??_check_sw_state^(0+128),f
  2110     0F07  0B89               	decfsz	9,f
  2111     0F08  2F06               	goto	u1825
  2112     0F09  0140               	movlb	0	; select bank0
  2113     0F0A  0E0D               	swapf	13,w	;volatile
  2114     0F0B  3901               	andlw	1
  2115     0F0C  0141               	movlb	1	; select bank1
  2116     0F0D  0720               	addwf	??_check_sw_state^(0+128),w
  2117     0F0E  00D8               	movwf	_sw4_pos^(0+128)
  2118     0F0F                     l253:
  2119     0F0F  0008               	return
  2120     0F10                     __end_of_check_sw_state:
  2121                           
  2122                           	psect	text4
  2123     0C49                     __ptext4:	
  2124 ;; *************** function _ccp1_enable *****************
  2125 ;; Defined at:
  2126 ;;		line 403 in file "main.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 3
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154     0C49                     _ccp1_enable:	
  2155                           ;psect for function _ccp1_enable
  2156                           
  2157     0C49                     l2196:	
  2158                           ;incstack = 0
  2159                           ; Regs used in _ccp1_enable: [wreg]
  2160                           
  2161                           
  2162                           ;main.c: 404:     CCP1IE = 0;
  2163     0C49  014E               	movlb	14	; select bank14
  2164     0C4A  1397               	bcf	23,7	;volatile
  2165                           
  2166                           ;main.c: 405:     CCP1IF = 0;
  2167     0C4B  138D               	bcf	13,7	;volatile
  2168     0C4C                     l2198:
  2169                           
  2170                           ;main.c: 406:     CCP1CON = 0x84;
  2171     0C4C  3084               	movlw	132
  2172     0C4D  0146               	movlb	6	; select bank6
  2173     0C4E  008E               	movwf	14	;volatile
  2174     0C4F                     l2200:
  2175                           
  2176                           ;main.c: 407:     CCP1IE = 1;
  2177     0C4F  014E               	movlb	14	; select bank14
  2178     0C50  1797               	bsf	23,7	;volatile
  2179     0C51                     l295:
  2180     0C51  0008               	return
  2181     0C52                     __end_of_ccp1_enable:
  2182                           
  2183                           	psect	text5
  2184     039E                     __ptext5:	
  2185 ;; *************** function _calc_map *****************
  2186 ;; Defined at:
  2187 ;;		line 212 in file "main.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  temp1           3   30[BANK1 ] unsigned um
  2192 ;;  temp            3   27[BANK1 ] unsigned um
  2193 ;;  p4y             2   41[BANK1 ] unsigned short 
  2194 ;;  p3y             2   39[BANK1 ] unsigned short 
  2195 ;;  p2y             2   37[BANK1 ] unsigned short 
  2196 ;;  p1y             2   35[BANK1 ] unsigned short 
  2197 ;;  a               1   47[BANK1 ] unsigned char 
  2198 ;;  p4x             1   46[BANK1 ] unsigned char 
  2199 ;;  p3x             1   45[BANK1 ] unsigned char 
  2200 ;;  p2x             1   44[BANK1 ] unsigned char 
  2201 ;;  p1x             1   43[BANK1 ] unsigned char 
  2202 ;;  coeff_p3_p4     1   34[BANK1 ] unsigned char 
  2203 ;;  coeff_p1_p2     1   33[BANK1 ] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;Total ram usage:       33 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 4
  2220 ;; This function calls:
  2221 ;;		___lwdiv
  2222 ;;		___tmul
  2223 ;;		___wmul
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229     039E                     _calc_map:	
  2230                           ;psect for function _calc_map
  2231                           
  2232     039E                     l2108:	
  2233                           ;incstack = 0
  2234                           ; Regs used in _calc_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2235                           
  2236                           
  2237                           ;main.c: 213:     uint8_t p1x, p2x, p3x, p4x;;main.c: 214:     uint16_t p1y, p2y, p3y, p
      +                          4y;;main.c: 215:     uint8_t coeff_p1_p2, coeff_p3_p4;;main.c: 216:     uint8_t a;;main.
      +                          c: 217:     uint24_t temp;;main.c: 218:     uint24_t temp1;;main.c: 220:     p1x = adv_s
      +                          tart_rpm_table[sw1_pos];
  2238     039E  0141               	movlb	1	; select bank1
  2239     039F  085B               	movf	_sw1_pos^(0+128),w
  2240     03A0  3E19               	addlw	low (_adv_start_rpm_table| (0+32768))
  2241     03A1  0084               	movwf	4
  2242     03A2  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  2243     03A3  1803               	skipnc
  2244     03A4  3E01               	addlw	1
  2245     03A5  0085               	movwf	5
  2246     03A6  0800               	movf	0,w	;code access
  2247     03A7  00CB               	movwf	calc_map@p1x^(0+128)
  2248     03A8                     l2110:
  2249                           
  2250                           ;main.c: 221:     p2x = adv_start_rpm_table[sw1_pos] + max_adv_grad_table[sw3_pos];
  2251     03A8  0859               	movf	_sw3_pos^(0+128),w
  2252     03A9  3E15               	addlw	low (_max_adv_grad_table| (0+32768))
  2253     03AA  0084               	movwf	4
  2254     03AB  3090               	movlw	high (_max_adv_grad_table| (0+32768))
  2255     03AC  1803               	skipnc
  2256     03AD  3E01               	addlw	1
  2257     03AE  0085               	movwf	5
  2258     03AF  0800               	movf	0,w	;code access
  2259     03B0  00AF               	movwf	??_calc_map^(0+128)
  2260     03B1  085B               	movf	_sw1_pos^(0+128),w
  2261     03B2  3E19               	addlw	low (_adv_start_rpm_table| (0+32768))
  2262     03B3  0084               	movwf	4
  2263     03B4  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  2264     03B5  1803               	skipnc
  2265     03B6  3E01               	addlw	1
  2266     03B7  0085               	movwf	5
  2267     03B8  0800               	movf	0,w	;code access
  2268     03B9  072F               	addwf	??_calc_map^(0+128),w
  2269     03BA  00CC               	movwf	calc_map@p2x^(0+128)
  2270     03BB                     l2112:
  2271                           
  2272                           ;main.c: 222:     p3x = (55);
  2273     03BB  3037               	movlw	55
  2274     03BC  00CD               	movwf	calc_map@p3x^(0+128)
  2275     03BD                     l2114:
  2276                           
  2277                           ;main.c: 223:     p4x = (80);
  2278     03BD  3050               	movlw	80
  2279     03BE  00CE               	movwf	calc_map@p4x^(0+128)
  2280     03BF                     l2116:
  2281                           
  2282                           ;main.c: 224:     p1y = (500);
  2283     03BF  30F4               	movlw	244
  2284     03C0  00C3               	movwf	calc_map@p1y^(0+128)
  2285     03C1  3001               	movlw	1
  2286     03C2  00C4               	movwf	(calc_map@p1y^(0+128)+1)
  2287     03C3                     l2118:
  2288                           
  2289                           ;main.c: 225:     p2y = max_adv_table[sw2_pos];
  2290     03C3  085A               	movf	_sw2_pos^(0+128),w
  2291     03C4  00AF               	movwf	??_calc_map^(0+128)
  2292     03C5  01B0               	clrf	(??_calc_map^(0+128)+1)
  2293     03C6  35AF               	lslf	??_calc_map^(0+128),f
  2294     03C7  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2295     03C8  3008               	movlw	low _max_adv_table
  2296     03C9  072F               	addwf	??_calc_map^(0+128),w
  2297     03CA  0084               	movwf	4
  2298     03CB  3010               	movlw	high _max_adv_table
  2299     03CC  3D30               	addwfc	(??_calc_map+1)^(0+128),w
  2300     03CD  3880               	iorlw	128
  2301     03CE  0085               	movwf	5
  2302     03CF  3F00               	moviw [0]fsr0
  2303     03D0  00C5               	movwf	calc_map@p2y^(0+128)
  2304     03D1  3F01               	moviw [1]fsr0
  2305     03D2  00C6               	movwf	(calc_map@p2y+1)^(0+128)
  2306     03D3                     l2120:
  2307                           
  2308                           ;main.c: 226:     p3y = p2y;
  2309     03D3  0846               	movf	(calc_map@p2y+1)^(0+128),w
  2310     03D4  00C8               	movwf	(calc_map@p3y+1)^(0+128)
  2311     03D5  0845               	movf	calc_map@p2y^(0+128),w
  2312     03D6  00C7               	movwf	calc_map@p3y^(0+128)
  2313     03D7                     l2122:
  2314                           
  2315                           ;main.c: 227:     p4y = min_ret_table[sw4_pos];
  2316     03D7  0858               	movf	_sw4_pos^(0+128),w
  2317     03D8  00AF               	movwf	??_calc_map^(0+128)
  2318     03D9  01B0               	clrf	(??_calc_map^(0+128)+1)
  2319     03DA  35AF               	lslf	??_calc_map^(0+128),f
  2320     03DB  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2321     03DC  3000               	movlw	low _min_ret_table
  2322     03DD  072F               	addwf	??_calc_map^(0+128),w
  2323     03DE  0084               	movwf	4
  2324     03DF  3010               	movlw	high _min_ret_table
  2325     03E0  3D30               	addwfc	(??_calc_map+1)^(0+128),w
  2326     03E1  3880               	iorlw	128
  2327     03E2  0085               	movwf	5
  2328     03E3  3F00               	moviw [0]fsr0
  2329     03E4  00C9               	movwf	calc_map@p4y^(0+128)
  2330     03E5  3F01               	moviw [1]fsr0
  2331     03E6  00CA               	movwf	(calc_map@p4y+1)^(0+128)
  2332     03E7                     l2124:
  2333                           
  2334                           ;main.c: 228:     coeff_p1_p2 = (uint8_t) ((p2y - p1y) / (p2x - p1x));
  2335     03E7  084B               	movf	calc_map@p1x^(0+128),w
  2336     03E8  024C               	subwf	calc_map@p2x^(0+128),w
  2337     03E9  00A0               	movwf	___lwdiv@divisor^(0+128)
  2338     03EA  01A1               	clrf	(___lwdiv@divisor^(0+128)+1)
  2339     03EB  1C03               	skipc
  2340     03EC  03A1               	decf	(___lwdiv@divisor+1)^(0+128),f
  2341     03ED  0845               	movf	calc_map@p2y^(0+128),w
  2342     03EE  3E0C               	addlw	12
  2343     03EF  00A2               	movwf	___lwdiv@dividend^(0+128)
  2344     03F0  30FE               	movlw	254
  2345     03F1  3D46               	addwfc	(calc_map@p2y+1)^(0+128),w
  2346     03F2  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2347     03F3  318D  25D7  3183   	fcall	___lwdiv
  2348     03F6  0141               	movlb	1	; select bank1
  2349     03F7  0820               	movf	?___lwdiv^(0+128),w
  2350     03F8  00C1               	movwf	calc_map@coeff_p1_p2^(0+128)
  2351     03F9                     l2126:
  2352                           
  2353                           ;main.c: 229:     coeff_p3_p4 = (uint8_t) ((p3y - p4y) / (p4x - p3x));
  2354     03F9  3019               	movlw	25
  2355     03FA  00A0               	movwf	___lwdiv@divisor^(0+128)
  2356     03FB  3000               	movlw	0
  2357     03FC  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  2358     03FD  0849               	movf	calc_map@p4y^(0+128),w
  2359     03FE  0247               	subwf	calc_map@p3y^(0+128),w
  2360     03FF  00A2               	movwf	___lwdiv@dividend^(0+128)
  2361     0400  084A               	movf	(calc_map@p4y+1)^(0+128),w
  2362     0401  3B48               	subwfb	(calc_map@p3y+1)^(0+128),w
  2363     0402  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2364     0403  318D  25D7  3183   	fcall	___lwdiv
  2365     0406  0141               	movlb	1	; select bank1
  2366     0407  0820               	movf	?___lwdiv^(0+128),w
  2367     0408  00C2               	movwf	calc_map@coeff_p3_p4^(0+128)
  2368     0409                     l2128:
  2369                           
  2370                           ;main.c: 232:     for (a = 15; a <= p1x; a++) {
  2371     0409  300F               	movlw	15
  2372     040A  00CF               	movwf	calc_map@a^(0+128)
  2373     040B  2C23               	goto	l2134
  2374     040C                     l2130:
  2375                           
  2376                           ;main.c: 233:         IG_table[a] = p1y;
  2377     040C  084F               	movf	calc_map@a^(0+128),w
  2378     040D  00AF               	movwf	??_calc_map^(0+128)
  2379     040E  01B0               	clrf	(??_calc_map^(0+128)+1)
  2380     040F  35AF               	lslf	??_calc_map^(0+128),f
  2381     0410  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2382     0411  3067               	movlw	103
  2383     0412  00B1               	movwf	(??_calc_map+2)^(0+128)
  2384     0413  3022               	movlw	34
  2385     0414  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2386     0415  082F               	movf	??_calc_map^(0+128),w
  2387     0416  0731               	addwf	(??_calc_map+2)^(0+128),w
  2388     0417  0086               	movwf	6
  2389     0418  0830               	movf	(??_calc_map+1)^(0+128),w
  2390     0419  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2391     041A  0087               	movwf	7
  2392     041B  0843               	movf	calc_map@p1y^(0+128),w
  2393     041C  3FC0               	movwi [0]fsr1
  2394     041D  0844               	movf	(calc_map@p1y+1)^(0+128),w
  2395     041E  3FC1               	movwi [1]fsr1
  2396     041F                     l2132:
  2397                           
  2398                           ;main.c: 234:     }
  2399     041F  3001               	movlw	1
  2400     0420  00AF               	movwf	??_calc_map^(0+128)
  2401     0421  082F               	movf	??_calc_map^(0+128),w
  2402     0422  07CF               	addwf	calc_map@a^(0+128),f
  2403     0423                     l2134:
  2404     0423  084F               	movf	calc_map@a^(0+128),w
  2405     0424  024B               	subwf	calc_map@p1x^(0+128),w
  2406     0425  1803               	skipnc
  2407     0426  2C28               	goto	u1831
  2408     0427  2C29               	goto	u1830
  2409     0428                     u1831:
  2410     0428  2C0C               	goto	l2130
  2411     0429                     u1830:
  2412     0429                     l2136:
  2413                           
  2414                           ;main.c: 235:     for (a = p1x + 1; a <= p2x; a++) {
  2415     0429  084B               	movf	calc_map@p1x^(0+128),w
  2416     042A  3E01               	addlw	1
  2417     042B  00CF               	movwf	calc_map@a^(0+128)
  2418     042C  2C5E               	goto	l2142
  2419     042D                     l2138:
  2420                           
  2421                           ;main.c: 236:         IG_table[a] = coeff_p1_p2 + IG_table[a - 1];
  2422     042D  084F               	movf	calc_map@a^(0+128),w
  2423     042E  00AF               	movwf	??_calc_map^(0+128)
  2424     042F  01B0               	clrf	(??_calc_map^(0+128)+1)
  2425     0430  35AF               	lslf	??_calc_map^(0+128),f
  2426     0431  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2427     0432  3065               	movlw	101
  2428     0433  00B1               	movwf	(??_calc_map+2)^(0+128)
  2429     0434  3022               	movlw	34
  2430     0435  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2431     0436  082F               	movf	??_calc_map^(0+128),w
  2432     0437  0731               	addwf	(??_calc_map+2)^(0+128),w
  2433     0438  0086               	movwf	6
  2434     0439  0830               	movf	(??_calc_map+1)^(0+128),w
  2435     043A  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2436     043B  0087               	movwf	7
  2437     043C  3F40               	moviw [0]fsr1
  2438     043D  00B3               	movwf	(??_calc_map+4)^(0+128)
  2439     043E  3F41               	moviw [1]fsr1
  2440     043F  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2441     0440  0841               	movf	calc_map@coeff_p1_p2^(0+128),w
  2442     0441  0733               	addwf	(??_calc_map+4)^(0+128),w
  2443     0442  00B5               	movwf	(??_calc_map+6)^(0+128)
  2444     0443  0834               	movf	(??_calc_map+5)^(0+128),w
  2445     0444  1803               	skipnc
  2446     0445  0A34               	incf	(??_calc_map+5)^(0+128),w
  2447     0446  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2448     0447  084F               	movf	calc_map@a^(0+128),w
  2449     0448  00B7               	movwf	(??_calc_map+8)^(0+128)
  2450     0449  01B8               	clrf	((??_calc_map+8)^(0+128)+1)
  2451     044A  35B7               	lslf	(??_calc_map+8)^(0+128),f
  2452     044B  0DB8               	rlf	((??_calc_map+8)^(0+128)+1),f
  2453     044C  3067               	movlw	103
  2454     044D  00B9               	movwf	(??_calc_map+10)^(0+128)
  2455     044E  3022               	movlw	34
  2456     044F  00BA               	movwf	((??_calc_map+10)^(0+128)+1)
  2457     0450  0837               	movf	(??_calc_map+8)^(0+128),w
  2458     0451  0739               	addwf	(??_calc_map+10)^(0+128),w
  2459     0452  0086               	movwf	6
  2460     0453  0838               	movf	(??_calc_map+9)^(0+128),w
  2461     0454  3D3A               	addwfc	(??_calc_map+11)^(0+128),w
  2462     0455  0087               	movwf	7
  2463     0456  0835               	movf	(??_calc_map+6)^(0+128),w
  2464     0457  3FC0               	movwi [0]fsr1
  2465     0458  0836               	movf	((??_calc_map+6)^(0+128)+1),w
  2466     0459  3FC1               	movwi [1]fsr1
  2467     045A                     l2140:
  2468                           
  2469                           ;main.c: 237:     }
  2470     045A  3001               	movlw	1
  2471     045B  00AF               	movwf	??_calc_map^(0+128)
  2472     045C  082F               	movf	??_calc_map^(0+128),w
  2473     045D  07CF               	addwf	calc_map@a^(0+128),f
  2474     045E                     l2142:
  2475     045E  084F               	movf	calc_map@a^(0+128),w
  2476     045F  024C               	subwf	calc_map@p2x^(0+128),w
  2477     0460  1803               	skipnc
  2478     0461  2C63               	goto	u1841
  2479     0462  2C64               	goto	u1840
  2480     0463                     u1841:
  2481     0463  2C2D               	goto	l2138
  2482     0464                     u1840:
  2483     0464                     l2144:
  2484                           
  2485                           ;main.c: 238:     for (a = p2x + 1; a <= p3x; a++) {
  2486     0464  084C               	movf	calc_map@p2x^(0+128),w
  2487     0465  3E01               	addlw	1
  2488     0466  00CF               	movwf	calc_map@a^(0+128)
  2489     0467  2C7F               	goto	l2150
  2490     0468                     l2146:
  2491                           
  2492                           ;main.c: 239:         IG_table[a] = p3y;
  2493     0468  084F               	movf	calc_map@a^(0+128),w
  2494     0469  00AF               	movwf	??_calc_map^(0+128)
  2495     046A  01B0               	clrf	(??_calc_map^(0+128)+1)
  2496     046B  35AF               	lslf	??_calc_map^(0+128),f
  2497     046C  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2498     046D  3067               	movlw	103
  2499     046E  00B1               	movwf	(??_calc_map+2)^(0+128)
  2500     046F  3022               	movlw	34
  2501     0470  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2502     0471  082F               	movf	??_calc_map^(0+128),w
  2503     0472  0731               	addwf	(??_calc_map+2)^(0+128),w
  2504     0473  0086               	movwf	6
  2505     0474  0830               	movf	(??_calc_map+1)^(0+128),w
  2506     0475  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2507     0476  0087               	movwf	7
  2508     0477  0847               	movf	calc_map@p3y^(0+128),w
  2509     0478  3FC0               	movwi [0]fsr1
  2510     0479  0848               	movf	(calc_map@p3y+1)^(0+128),w
  2511     047A  3FC1               	movwi [1]fsr1
  2512     047B                     l2148:
  2513                           
  2514                           ;main.c: 240:     }
  2515     047B  3001               	movlw	1
  2516     047C  00AF               	movwf	??_calc_map^(0+128)
  2517     047D  082F               	movf	??_calc_map^(0+128),w
  2518     047E  07CF               	addwf	calc_map@a^(0+128),f
  2519     047F                     l2150:
  2520     047F  084F               	movf	calc_map@a^(0+128),w
  2521     0480  024D               	subwf	calc_map@p3x^(0+128),w
  2522     0481  1803               	skipnc
  2523     0482  2C84               	goto	u1851
  2524     0483  2C85               	goto	u1850
  2525     0484                     u1851:
  2526     0484  2C68               	goto	l2146
  2527     0485                     u1850:
  2528     0485                     l2152:
  2529                           
  2530                           ;main.c: 241:     for (a = p3x + 1; a <= p4x; a++) {
  2531     0485  084D               	movf	calc_map@p3x^(0+128),w
  2532     0486  3E01               	addlw	1
  2533     0487  00CF               	movwf	calc_map@a^(0+128)
  2534     0488  2CBA               	goto	l2158
  2535     0489                     l2154:
  2536                           
  2537                           ;main.c: 242:         IG_table[a] = IG_table[a - 1] - coeff_p3_p4;
  2538     0489  084F               	movf	calc_map@a^(0+128),w
  2539     048A  00AF               	movwf	??_calc_map^(0+128)
  2540     048B  01B0               	clrf	(??_calc_map^(0+128)+1)
  2541     048C  35AF               	lslf	??_calc_map^(0+128),f
  2542     048D  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2543     048E  3065               	movlw	101
  2544     048F  00B1               	movwf	(??_calc_map+2)^(0+128)
  2545     0490  3022               	movlw	34
  2546     0491  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2547     0492  082F               	movf	??_calc_map^(0+128),w
  2548     0493  0731               	addwf	(??_calc_map+2)^(0+128),w
  2549     0494  0086               	movwf	6
  2550     0495  0830               	movf	(??_calc_map+1)^(0+128),w
  2551     0496  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2552     0497  0087               	movwf	7
  2553     0498  3F40               	moviw [0]fsr1
  2554     0499  00B3               	movwf	(??_calc_map+4)^(0+128)
  2555     049A  3F41               	moviw [1]fsr1
  2556     049B  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2557     049C  0834               	movf	(??_calc_map+5)^(0+128),w
  2558     049D  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2559     049E  0842               	movf	calc_map@coeff_p3_p4^(0+128),w
  2560     049F  0233               	subwf	(??_calc_map+4)^(0+128),w
  2561     04A0  00B5               	movwf	(??_calc_map+6)^(0+128)
  2562     04A1  1C03               	skipc
  2563     04A2  03B6               	decf	((??_calc_map+6)^(0+128)+1),f
  2564     04A3  084F               	movf	calc_map@a^(0+128),w
  2565     04A4  00B7               	movwf	(??_calc_map+8)^(0+128)
  2566     04A5  01B8               	clrf	((??_calc_map+8)^(0+128)+1)
  2567     04A6  35B7               	lslf	(??_calc_map+8)^(0+128),f
  2568     04A7  0DB8               	rlf	((??_calc_map+8)^(0+128)+1),f
  2569     04A8  3067               	movlw	103
  2570     04A9  00B9               	movwf	(??_calc_map+10)^(0+128)
  2571     04AA  3022               	movlw	34
  2572     04AB  00BA               	movwf	((??_calc_map+10)^(0+128)+1)
  2573     04AC  0837               	movf	(??_calc_map+8)^(0+128),w
  2574     04AD  0739               	addwf	(??_calc_map+10)^(0+128),w
  2575     04AE  0086               	movwf	6
  2576     04AF  0838               	movf	(??_calc_map+9)^(0+128),w
  2577     04B0  3D3A               	addwfc	(??_calc_map+11)^(0+128),w
  2578     04B1  0087               	movwf	7
  2579     04B2  0835               	movf	(??_calc_map+6)^(0+128),w
  2580     04B3  3FC0               	movwi [0]fsr1
  2581     04B4  0836               	movf	((??_calc_map+6)^(0+128)+1),w
  2582     04B5  3FC1               	movwi [1]fsr1
  2583     04B6                     l2156:
  2584                           
  2585                           ;main.c: 243:     }
  2586     04B6  3001               	movlw	1
  2587     04B7  00AF               	movwf	??_calc_map^(0+128)
  2588     04B8  082F               	movf	??_calc_map^(0+128),w
  2589     04B9  07CF               	addwf	calc_map@a^(0+128),f
  2590     04BA                     l2158:
  2591     04BA  084F               	movf	calc_map@a^(0+128),w
  2592     04BB  024E               	subwf	calc_map@p4x^(0+128),w
  2593     04BC  1803               	skipnc
  2594     04BD  2CBF               	goto	u1861
  2595     04BE  2CC0               	goto	u1860
  2596     04BF                     u1861:
  2597     04BF  2C89               	goto	l2154
  2598     04C0                     u1860:
  2599     04C0                     l2160:
  2600                           
  2601                           ;main.c: 244:     for (a = p4x + 1; a <= 130; a++) {
  2602     04C0  084E               	movf	calc_map@p4x^(0+128),w
  2603     04C1  3E01               	addlw	1
  2604     04C2  00CF               	movwf	calc_map@a^(0+128)
  2605     04C3                     l2162:
  2606     04C3  3083               	movlw	131
  2607     04C4  024F               	subwf	calc_map@a^(0+128),w
  2608     04C5  1C03               	skipc
  2609     04C6  2CC8               	goto	u1871
  2610     04C7  2CC9               	goto	u1870
  2611     04C8                     u1871:
  2612     04C8  2CCA               	goto	l2166
  2613     04C9                     u1870:
  2614     04C9  2CE2               	goto	l2172
  2615     04CA                     l2166:
  2616                           
  2617                           ;main.c: 245:         IG_table[a] = p4y;
  2618     04CA  084F               	movf	calc_map@a^(0+128),w
  2619     04CB  00AF               	movwf	??_calc_map^(0+128)
  2620     04CC  01B0               	clrf	(??_calc_map^(0+128)+1)
  2621     04CD  35AF               	lslf	??_calc_map^(0+128),f
  2622     04CE  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2623     04CF  3067               	movlw	103
  2624     04D0  00B1               	movwf	(??_calc_map+2)^(0+128)
  2625     04D1  3022               	movlw	34
  2626     04D2  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2627     04D3  082F               	movf	??_calc_map^(0+128),w
  2628     04D4  0731               	addwf	(??_calc_map+2)^(0+128),w
  2629     04D5  0086               	movwf	6
  2630     04D6  0830               	movf	(??_calc_map+1)^(0+128),w
  2631     04D7  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2632     04D8  0087               	movwf	7
  2633     04D9  0849               	movf	calc_map@p4y^(0+128),w
  2634     04DA  3FC0               	movwi [0]fsr1
  2635     04DB  084A               	movf	(calc_map@p4y+1)^(0+128),w
  2636     04DC  3FC1               	movwi [1]fsr1
  2637     04DD                     l2168:
  2638                           
  2639                           ;main.c: 246:     }
  2640     04DD  3001               	movlw	1
  2641     04DE  00AF               	movwf	??_calc_map^(0+128)
  2642     04DF  082F               	movf	??_calc_map^(0+128),w
  2643     04E0  07CF               	addwf	calc_map@a^(0+128),f
  2644     04E1  2CC3               	goto	l2162
  2645     04E2                     l2172:
  2646                           
  2647                           ;main.c: 248:     for (a = 15; a <= 130; a++) {
  2648     04E2  300F               	movlw	15
  2649     04E3  00CF               	movwf	calc_map@a^(0+128)
  2650     04E4                     l2176:
  2651                           
  2652                           ;main.c: 249:         deg_table[a] = (uint8_t) (IG_table[a] / 100);
  2653     04E4  3064               	movlw	100
  2654     04E5  00A0               	movwf	___lwdiv@divisor^(0+128)
  2655     04E6  3000               	movlw	0
  2656     04E7  00A1               	movwf	(___lwdiv@divisor^(0+128)+1)
  2657     04E8  084F               	movf	calc_map@a^(0+128),w
  2658     04E9  00AF               	movwf	??_calc_map^(0+128)
  2659     04EA  01B0               	clrf	(??_calc_map^(0+128)+1)
  2660     04EB  35AF               	lslf	??_calc_map^(0+128),f
  2661     04EC  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2662     04ED  3067               	movlw	103
  2663     04EE  00B1               	movwf	(??_calc_map+2)^(0+128)
  2664     04EF  3022               	movlw	34
  2665     04F0  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2666     04F1  082F               	movf	??_calc_map^(0+128),w
  2667     04F2  0731               	addwf	(??_calc_map+2)^(0+128),w
  2668     04F3  0086               	movwf	6
  2669     04F4  0830               	movf	(??_calc_map+1)^(0+128),w
  2670     04F5  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2671     04F6  0087               	movwf	7
  2672     04F7  3F40               	moviw [0]fsr1
  2673     04F8  00A2               	movwf	___lwdiv@dividend^(0+128)
  2674     04F9  3F41               	moviw [1]fsr1
  2675     04FA  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2676     04FB  318D  25D7  3183   	fcall	___lwdiv
  2677     04FE  0141               	movlb	1	; select bank1
  2678     04FF  0820               	movf	?___lwdiv^(0+128),w
  2679     0500  00B3               	movwf	(??_calc_map+4)^(0+128)
  2680     0501  084F               	movf	calc_map@a^(0+128),w
  2681     0502  3E6D               	addlw	109
  2682     0503  00B4               	movwf	(??_calc_map+5)^(0+128)
  2683     0504  01B5               	clrf	((??_calc_map+5)^(0+128)+1)
  2684     0505  3023               	movlw	35
  2685     0506  3DB5               	addwfc	((??_calc_map+5)^(0+128)+1),f
  2686     0507  0834               	movf	(??_calc_map+5)^(0+128),w
  2687     0508  0086               	movwf	6
  2688     0509  0835               	movf	(??_calc_map+6)^(0+128),w
  2689     050A  0087               	movwf	7
  2690     050B  0833               	movf	(??_calc_map+4)^(0+128),w
  2691     050C  0081               	movwf	1
  2692     050D                     l2178:
  2693                           
  2694                           ;main.c: 250:     }
  2695     050D  3001               	movlw	1
  2696     050E  00AF               	movwf	??_calc_map^(0+128)
  2697     050F  082F               	movf	??_calc_map^(0+128),w
  2698     0510  07CF               	addwf	calc_map@a^(0+128),f
  2699     0511                     l2180:
  2700     0511  3083               	movlw	131
  2701     0512  024F               	subwf	calc_map@a^(0+128),w
  2702     0513  1C03               	skipc
  2703     0514  2D16               	goto	u1881
  2704     0515  2D17               	goto	u1880
  2705     0516                     u1881:
  2706     0516  2CE4               	goto	l2176
  2707     0517                     u1880:
  2708     0517                     l2182:
  2709                           
  2710                           ;main.c: 252:     for (a = 15; a <= 130; a++) {
  2711     0517  300F               	movlw	15
  2712     0518  00CF               	movwf	calc_map@a^(0+128)
  2713     0519                     l2186:
  2714                           
  2715                           ;main.c: 253:         temp1 = (((3500) - IG_table[a]) >> 1);
  2716     0519  084F               	movf	calc_map@a^(0+128),w
  2717     051A  00AF               	movwf	??_calc_map^(0+128)
  2718     051B  01B0               	clrf	(??_calc_map^(0+128)+1)
  2719     051C  35AF               	lslf	??_calc_map^(0+128),f
  2720     051D  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2721     051E  3067               	movlw	103
  2722     051F  00B1               	movwf	(??_calc_map+2)^(0+128)
  2723     0520  3022               	movlw	34
  2724     0521  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2725     0522  082F               	movf	??_calc_map^(0+128),w
  2726     0523  0731               	addwf	(??_calc_map+2)^(0+128),w
  2727     0524  0086               	movwf	6
  2728     0525  0830               	movf	(??_calc_map+1)^(0+128),w
  2729     0526  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2730     0527  0087               	movwf	7
  2731     0528  30AC               	movlw	172
  2732     0529  00B3               	movwf	(??_calc_map+4)^(0+128)
  2733     052A  300D               	movlw	13
  2734     052B  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2735     052C  3F40               	moviw [0]fsr1
  2736     052D  0233               	subwf	(??_calc_map+4)^(0+128),w
  2737     052E  00B5               	movwf	(??_calc_map+6)^(0+128)
  2738     052F  3F41               	moviw [1]fsr1
  2739     0530  3B34               	subwfb	(??_calc_map+5)^(0+128),w
  2740     0531  00B6               	movwf	((??_calc_map+6)^(0+128)+1)
  2741     0532  36B6               	lsrf	((??_calc_map+6)^(0+128)+1),f
  2742     0533  0CB5               	rrf	(??_calc_map+6)^(0+128),f
  2743     0534  0835               	movf	(??_calc_map+6)^(0+128),w
  2744     0535  00BE               	movwf	calc_map@temp1^(0+128)
  2745     0536  0836               	movf	(??_calc_map+7)^(0+128),w
  2746     0537  00BF               	movwf	(calc_map@temp1+1)^(0+128)
  2747     0538  01C0               	clrf	(calc_map@temp1+2)^(0+128)
  2748     0539                     l2188:
  2749                           
  2750                           ;main.c: 254:         temp = ((deg2time_coeff[a] * temp1) >> 10);
  2751     0539  084F               	movf	calc_map@a^(0+128),w
  2752     053A  00AF               	movwf	??_calc_map^(0+128)
  2753     053B  01B0               	clrf	(??_calc_map^(0+128)+1)
  2754     053C  082F               	movf	??_calc_map^(0+128),w
  2755     053D  00A0               	movwf	___wmul@multiplier^(0+128)
  2756     053E  0830               	movf	(??_calc_map+1)^(0+128),w
  2757     053F  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
  2758     0540  3003               	movlw	3
  2759     0541  00A2               	movwf	___wmul@multiplicand^(0+128)
  2760     0542  3000               	movlw	0
  2761     0543  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
  2762     0544  318D  2502  3183   	fcall	___wmul
  2763     0547  30DE               	movlw	222
  2764     0548  0141               	movlb	1	; select bank1
  2765     0549  00B1               	movwf	(??_calc_map+2)^(0+128)
  2766     054A  3020               	movlw	32
  2767     054B  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2768     054C  0820               	movf	?___wmul^(0+128),w
  2769     054D  0731               	addwf	(??_calc_map+2)^(0+128),w
  2770     054E  0086               	movwf	6
  2771     054F  0821               	movf	(?___wmul+1)^(0+128),w
  2772     0550  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2773     0551  0087               	movwf	7
  2774     0552  3F40               	moviw [0]fsr1
  2775     0553  00A6               	movwf	___tmul@multiplier^(0+128)
  2776     0554  3F41               	moviw [1]fsr1
  2777     0555  00A7               	movwf	(___tmul@multiplier+1)^(0+128)
  2778     0556  3F42               	moviw [2]fsr1
  2779     0557  00A8               	movwf	(___tmul@multiplier+2)^(0+128)
  2780     0558  083E               	movf	calc_map@temp1^(0+128),w
  2781     0559  00A9               	movwf	___tmul@multiplicand^(0+128)
  2782     055A  083F               	movf	(calc_map@temp1+1)^(0+128),w
  2783     055B  00AA               	movwf	(___tmul@multiplicand+1)^(0+128)
  2784     055C  0840               	movf	(calc_map@temp1+2)^(0+128),w
  2785     055D  00AB               	movwf	(___tmul@multiplicand+2)^(0+128)
  2786     055E  318D  2543  3183   	fcall	___tmul
  2787     0561  0141               	movlb	1	; select bank1
  2788     0562  0826               	movf	?___tmul^(0+128),w
  2789     0563  00B3               	movwf	(??_calc_map+4)^(0+128)
  2790     0564  0827               	movf	(?___tmul+1)^(0+128),w
  2791     0565  00B4               	movwf	((??_calc_map+4)^(0+128)+1)
  2792     0566  0828               	movf	(?___tmul+2)^(0+128),w
  2793     0567  00B5               	movwf	((??_calc_map+4)^(0+128)+2)
  2794     0568  300A               	movlw	10
  2795     0569                     u1895:
  2796     0569  36B5               	lsrf	((??_calc_map+4)^(0+128)+2),f
  2797     056A  0CB4               	rrf	((??_calc_map+4)^(0+128)+1),f
  2798     056B  0CB3               	rrf	(??_calc_map+4)^(0+128),f
  2799     056C                     u1890:
  2800     056C  0B89               	decfsz	9,f
  2801     056D  2D69               	goto	u1895
  2802     056E  0833               	movf	(??_calc_map+4)^(0+128),w
  2803     056F  00BB               	movwf	calc_map@temp^(0+128)
  2804     0570  0834               	movf	(??_calc_map+5)^(0+128),w
  2805     0571  00BC               	movwf	(calc_map@temp+1)^(0+128)
  2806     0572  0835               	movf	(??_calc_map+6)^(0+128),w
  2807     0573  00BD               	movwf	(calc_map@temp+2)^(0+128)
  2808     0574                     l2190:
  2809                           
  2810                           ;main.c: 255:         IG_table[a] = temp;
  2811     0574  084F               	movf	calc_map@a^(0+128),w
  2812     0575  00AF               	movwf	??_calc_map^(0+128)
  2813     0576  01B0               	clrf	(??_calc_map^(0+128)+1)
  2814     0577  35AF               	lslf	??_calc_map^(0+128),f
  2815     0578  0DB0               	rlf	(??_calc_map^(0+128)+1),f
  2816     0579  3067               	movlw	103
  2817     057A  00B1               	movwf	(??_calc_map+2)^(0+128)
  2818     057B  3022               	movlw	34
  2819     057C  00B2               	movwf	((??_calc_map+2)^(0+128)+1)
  2820     057D  082F               	movf	??_calc_map^(0+128),w
  2821     057E  0731               	addwf	(??_calc_map+2)^(0+128),w
  2822     057F  0086               	movwf	6
  2823     0580  0830               	movf	(??_calc_map+1)^(0+128),w
  2824     0581  3D32               	addwfc	(??_calc_map+3)^(0+128),w
  2825     0582  0087               	movwf	7
  2826     0583  083B               	movf	calc_map@temp^(0+128),w
  2827     0584  3FC0               	movwi [0]fsr1
  2828     0585  083C               	movf	(calc_map@temp+1)^(0+128),w
  2829     0586  3FC1               	movwi [1]fsr1
  2830     0587                     l2192:
  2831                           
  2832                           ;main.c: 256:     }
  2833     0587  3001               	movlw	1
  2834     0588  00AF               	movwf	??_calc_map^(0+128)
  2835     0589  082F               	movf	??_calc_map^(0+128),w
  2836     058A  07CF               	addwf	calc_map@a^(0+128),f
  2837     058B                     l2194:
  2838     058B  3083               	movlw	131
  2839     058C  024F               	subwf	calc_map@a^(0+128),w
  2840     058D  1C03               	skipc
  2841     058E  2D90               	goto	u1901
  2842     058F  2D91               	goto	u1900
  2843     0590                     u1901:
  2844     0590  2D19               	goto	l2186
  2845     0591                     u1900:
  2846     0591                     l242:
  2847     0591  0008               	return
  2848     0592                     __end_of_calc_map:
  2849                           
  2850                           	psect	text6
  2851     0D02                     __ptext6:	
  2852 ;; *************** function ___wmul *****************
  2853 ;; Defined at:
  2854 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2857 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  product         2    4[BANK1 ] unsigned int 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    0[BANK1 ] unsigned int 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2869 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;Total ram usage:        6 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 3
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_calc_map
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883     0D02                     ___wmul:	
  2884                           ;psect for function ___wmul
  2885                           
  2886     0D02                     l1882:	
  2887                           ;incstack = 0
  2888                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2889                           
  2890     0D02  0141               	movlb	1	; select bank1
  2891     0D03  01A4               	clrf	___wmul@product^(0+128)
  2892     0D04  01A5               	clrf	(___wmul@product+1)^(0+128)
  2893     0D05                     l1884:
  2894     0D05  1C20               	btfss	___wmul@multiplier^(0+128),0
  2895     0D06  2D08               	goto	u1501
  2896     0D07  2D09               	goto	u1500
  2897     0D08                     u1501:
  2898     0D08  2D0D               	goto	l375
  2899     0D09                     u1500:
  2900     0D09                     l1886:
  2901     0D09  0822               	movf	___wmul@multiplicand^(0+128),w
  2902     0D0A  07A4               	addwf	___wmul@product^(0+128),f
  2903     0D0B  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  2904     0D0C  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
  2905     0D0D                     l375:
  2906     0D0D  3001               	movlw	1
  2907     0D0E                     u1515:
  2908     0D0E  35A2               	lslf	___wmul@multiplicand^(0+128),f
  2909     0D0F  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2910     0D10  0B89               	decfsz	9,f
  2911     0D11  2D0E               	goto	u1515
  2912     0D12                     l1888:
  2913     0D12  3001               	movlw	1
  2914     0D13                     u1525:
  2915     0D13  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
  2916     0D14  0CA0               	rrf	___wmul@multiplier^(0+128),f
  2917     0D15  0B89               	decfsz	9,f
  2918     0D16  2D13               	goto	u1525
  2919     0D17                     l1890:
  2920     0D17  0820               	movf	___wmul@multiplier^(0+128),w
  2921     0D18  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  2922     0D19  1D03               	btfss	3,2
  2923     0D1A  2D1C               	goto	u1531
  2924     0D1B  2D1D               	goto	u1530
  2925     0D1C                     u1531:
  2926     0D1C  2D05               	goto	l1884
  2927     0D1D                     u1530:
  2928     0D1D                     l1892:
  2929     0D1D  0825               	movf	(___wmul@product+1)^(0+128),w
  2930     0D1E  00A1               	movwf	(?___wmul+1)^(0+128)
  2931     0D1F  0824               	movf	___wmul@product^(0+128),w
  2932     0D20  00A0               	movwf	?___wmul^(0+128)
  2933     0D21                     l377:
  2934     0D21  0008               	return
  2935     0D22                     __end_of___wmul:
  2936                           
  2937                           	psect	text7
  2938     0D43                     __ptext7:	
  2939 ;; *************** function ___tmul *****************
  2940 ;; Defined at:
  2941 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul24.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  multiplier      3    6[BANK1 ] unsigned um
  2944 ;;  multiplicand    3    9[BANK1 ] unsigned um
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  product         3   12[BANK1 ] unsigned um
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  3    6[BANK1 ] unsigned um
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2956 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  2960 ;;Total ram usage:        9 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 3
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_calc_map
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970     0D43                     ___tmul:	
  2971                           ;psect for function ___tmul
  2972                           
  2973     0D43                     l1896:	
  2974                           ;incstack = 0
  2975                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  2976                           
  2977     0D43  3000               	movlw	0
  2978     0D44  0141               	movlb	1	; select bank1
  2979     0D45  00AC               	movwf	___tmul@product^(0+128)
  2980     0D46  3000               	movlw	0
  2981     0D47  00AD               	movwf	(___tmul@product+1)^(0+128)
  2982     0D48  3000               	movlw	0
  2983     0D49  00AE               	movwf	(___tmul@product+2)^(0+128)
  2984     0D4A                     l1898:
  2985     0D4A  1C26               	btfss	___tmul@multiplier^(0+128),0
  2986     0D4B  2D4D               	goto	u1541
  2987     0D4C  2D4E               	goto	u1540
  2988     0D4D                     u1541:
  2989     0D4D  2D54               	goto	l1902
  2990     0D4E                     u1540:
  2991     0D4E                     l1900:
  2992     0D4E  0829               	movf	___tmul@multiplicand^(0+128),w
  2993     0D4F  07AC               	addwf	___tmul@product^(0+128),f
  2994     0D50  082A               	movf	(___tmul@multiplicand+1)^(0+128),w
  2995     0D51  3DAD               	addwfc	(___tmul@product+1)^(0+128),f
  2996     0D52  082B               	movf	(___tmul@multiplicand+2)^(0+128),w
  2997     0D53  3DAE               	addwfc	(___tmul@product+2)^(0+128),f
  2998     0D54                     l1902:
  2999     0D54  3001               	movlw	1
  3000     0D55                     u1555:
  3001     0D55  35A9               	lslf	___tmul@multiplicand^(0+128),f
  3002     0D56  0DAA               	rlf	(___tmul@multiplicand+1)^(0+128),f
  3003     0D57  0DAB               	rlf	(___tmul@multiplicand+2)^(0+128),f
  3004     0D58  0B89               	decfsz	9,f
  3005     0D59  2D55               	goto	u1555
  3006     0D5A                     l1904:
  3007     0D5A  3001               	movlw	1
  3008     0D5B                     u1565:
  3009     0D5B  36A8               	lsrf	(___tmul@multiplier+2)^(0+128),f
  3010     0D5C  0CA7               	rrf	(___tmul@multiplier+1)^(0+128),f
  3011     0D5D  0CA6               	rrf	___tmul@multiplier^(0+128),f
  3012     0D5E  0B89               	decfsz	9,f
  3013     0D5F  2D5B               	goto	u1565
  3014     0D60  0828               	movf	(___tmul@multiplier+2)^(0+128),w
  3015     0D61  0427               	iorwf	(___tmul@multiplier+1)^(0+128),w
  3016     0D62  0426               	iorwf	___tmul@multiplier^(0+128),w
  3017     0D63  1D03               	skipz
  3018     0D64  2D66               	goto	u1571
  3019     0D65  2D67               	goto	u1570
  3020     0D66                     u1571:
  3021     0D66  2D4A               	goto	l1898
  3022     0D67                     u1570:
  3023     0D67                     l1906:
  3024     0D67  082C               	movf	___tmul@product^(0+128),w
  3025     0D68  00A6               	movwf	?___tmul^(0+128)
  3026     0D69  082D               	movf	(___tmul@product+1)^(0+128),w
  3027     0D6A  00A7               	movwf	(?___tmul+1)^(0+128)
  3028     0D6B  082E               	movf	(___tmul@product+2)^(0+128),w
  3029     0D6C  00A8               	movwf	(?___tmul+2)^(0+128)
  3030     0D6D                     l383:
  3031     0D6D  0008               	return
  3032     0D6E                     __end_of___tmul:
  3033                           
  3034                           	psect	text8
  3035     0DD7                     __ptext8:	
  3036 ;; *************** function ___lwdiv *****************
  3037 ;; Defined at:
  3038 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  divisor         2    0[BANK1 ] unsigned int 
  3041 ;;  dividend        2    2[BANK1 ] unsigned int 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  quotient        2    5[BANK1 ] unsigned int 
  3044 ;;  counter         1    7[BANK1 ] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2    0[BANK1 ] unsigned int 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3054 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3058 ;;Total ram usage:        8 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 3
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_calc_map
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068     0DD7                     ___lwdiv:	
  3069                           ;psect for function ___lwdiv
  3070                           
  3071     0DD7                     l1910:	
  3072                           ;incstack = 0
  3073                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3074                           
  3075     0DD7  0141               	movlb	1	; select bank1
  3076     0DD8  01A5               	clrf	___lwdiv@quotient^(0+128)
  3077     0DD9  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  3078     0DDA                     l1912:
  3079     0DDA  0820               	movf	___lwdiv@divisor^(0+128),w
  3080     0DDB  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  3081     0DDC  1903               	btfsc	3,2
  3082     0DDD  2DDF               	goto	u1581
  3083     0DDE  2DE0               	goto	u1580
  3084     0DDF                     u1581:
  3085     0DDF  2E0F               	goto	l1932
  3086     0DE0                     u1580:
  3087     0DE0                     l1914:
  3088     0DE0  01A7               	clrf	___lwdiv@counter^(0+128)
  3089     0DE1  0AA7               	incf	___lwdiv@counter^(0+128),f
  3090     0DE2  2DEC               	goto	l1920
  3091     0DE3                     l1916:
  3092     0DE3  3001               	movlw	1
  3093     0DE4                     u1595:
  3094     0DE4  35A0               	lslf	___lwdiv@divisor^(0+128),f
  3095     0DE5  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  3096     0DE6  0B89               	decfsz	9,f
  3097     0DE7  2DE4               	goto	u1595
  3098     0DE8                     l1918:
  3099     0DE8  3001               	movlw	1
  3100     0DE9  00A4               	movwf	??___lwdiv^(0+128)
  3101     0DEA  0824               	movf	??___lwdiv^(0+128),w
  3102     0DEB  07A7               	addwf	___lwdiv@counter^(0+128),f
  3103     0DEC                     l1920:
  3104     0DEC  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  3105     0DED  2DEF               	goto	u1601
  3106     0DEE  2DF0               	goto	u1600
  3107     0DEF                     u1601:
  3108     0DEF  2DE3               	goto	l1916
  3109     0DF0                     u1600:
  3110     0DF0                     l1922:
  3111     0DF0  3001               	movlw	1
  3112     0DF1                     u1615:
  3113     0DF1  35A5               	lslf	___lwdiv@quotient^(0+128),f
  3114     0DF2  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  3115     0DF3  0B89               	decfsz	9,f
  3116     0DF4  2DF1               	goto	u1615
  3117     0DF5  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3118     0DF6  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  3119     0DF7  1D03               	skipz
  3120     0DF8  2DFB               	goto	u1625
  3121     0DF9  0820               	movf	___lwdiv@divisor^(0+128),w
  3122     0DFA  0222               	subwf	___lwdiv@dividend^(0+128),w
  3123     0DFB                     u1625:
  3124     0DFB  1C03               	skipc
  3125     0DFC  2DFE               	goto	u1621
  3126     0DFD  2DFF               	goto	u1620
  3127     0DFE                     u1621:
  3128     0DFE  2E04               	goto	l1928
  3129     0DFF                     u1620:
  3130     0DFF                     l1924:
  3131     0DFF  0820               	movf	___lwdiv@divisor^(0+128),w
  3132     0E00  02A2               	subwf	___lwdiv@dividend^(0+128),f
  3133     0E01  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  3134     0E02  3BA3               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  3135     0E03                     l1926:
  3136     0E03  1425               	bsf	___lwdiv@quotient^(0+128),0
  3137     0E04                     l1928:
  3138     0E04  3001               	movlw	1
  3139     0E05                     u1635:
  3140     0E05  36A1               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  3141     0E06  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  3142     0E07  0B89               	decfsz	9,f
  3143     0E08  2E05               	goto	u1635
  3144     0E09                     l1930:
  3145     0E09  3001               	movlw	1
  3146     0E0A  02A7               	subwf	___lwdiv@counter^(0+128),f
  3147     0E0B  1D03               	btfss	3,2
  3148     0E0C  2E0E               	goto	u1641
  3149     0E0D  2E0F               	goto	u1640
  3150     0E0E                     u1641:
  3151     0E0E  2DF0               	goto	l1922
  3152     0E0F                     u1640:
  3153     0E0F                     l1932:
  3154     0E0F  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  3155     0E10  00A1               	movwf	(?___lwdiv+1)^(0+128)
  3156     0E11  0825               	movf	___lwdiv@quotient^(0+128),w
  3157     0E12  00A0               	movwf	?___lwdiv^(0+128)
  3158     0E13                     l655:
  3159     0E13  0008               	return
  3160     0E14                     __end_of___lwdiv:
  3161                           
  3162                           	psect	text9
  3163     0D22                     __ptext9:	
  3164 ;; *************** function _Write_table *****************
  3165 ;; Defined at:
  3166 ;;		line 180 in file "main.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  a               1   53[BANK1 ] unsigned char [1]
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3181 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;Total ram usage:        3 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 8
  3187 ;; This function calls:
  3188 ;;		_WriteString
  3189 ;;		_sprintf
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195     0D22                     _Write_table:	
  3196                           ;psect for function _Write_table
  3197                           
  3198     0D22                     l2202:	
  3199                           ;incstack = 0
  3200                           ; Regs used in _Write_table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3201                           
  3202                           
  3203                           ;main.c: 181:     char a[1];;main.c: 183:     sprintf(a, "%d", tx_buf[1]);
  3204     0D22  301D               	movlw	low (STR_1| (0+32768))
  3205     0D23  0141               	movlb	1	; select bank1
  3206     0D24  00C1               	movwf	sprintf@fmt^(0+128)
  3207     0D25  3090               	movlw	high (STR_1| (0+32768))
  3208     0D26  00C2               	movwf	(sprintf@fmt^(0+128)+1)
  3209     0D27  0857               	movf	(_tx_buf^(0+128)+1),w
  3210     0D28  00D3               	movwf	??_Write_table^(0+128)
  3211     0D29  01D4               	clrf	(??_Write_table^(0+128)+1)
  3212     0D2A  0853               	movf	??_Write_table^(0+128),w
  3213     0D2B  00C3               	movwf	(?_sprintf^(0+128)+2)
  3214     0D2C  0854               	movf	(??_Write_table+1)^(0+128),w
  3215     0D2D  00C4               	movwf	((?_sprintf+1)^(0+128)+2)
  3216     0D2E  30D5               	movlw	(low (Write_table@a| 0))& (0+255)
  3217     0D2F  318C  24C6  318D   	fcall	_sprintf
  3218     0D32                     l2204:
  3219                           
  3220                           ;main.c: 184:     WriteString(a);
  3221     0D32  30D5               	movlw	low Write_table@a
  3222     0D33  0141               	movlb	1	; select bank1
  3223     0D34  00A1               	movwf	WriteString@str^(0+128)
  3224     0D35  3000               	movlw	high Write_table@a
  3225     0D36  00A2               	movwf	(WriteString@str+1)^(0+128)
  3226     0D37  3187  27E5  318D   	fcall	_WriteString
  3227     0D3A                     l2206:
  3228                           
  3229                           ;main.c: 185:     WriteString("\r\n");
  3230     0D3A  3012               	movlw	low (STR_2| (0+32768))
  3231     0D3B  0141               	movlb	1	; select bank1
  3232     0D3C  00A1               	movwf	WriteString@str^(0+128)
  3233     0D3D  3090               	movlw	high (STR_2| (0+32768))
  3234     0D3E  00A2               	movwf	(WriteString@str^(0+128)+1)
  3235     0D3F  3187  27E5  318D   	fcall	_WriteString
  3236     0D42                     l209:
  3237     0D42  0008               	return
  3238     0D43                     __end_of_Write_table:
  3239                           
  3240                           	psect	text10
  3241     0CC6                     __ptext10:	
  3242 ;; *************** function _sprintf *****************
  3243 ;; Defined at:
  3244 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  s               1    wreg     PTR unsigned char 
  3247 ;;		 -> Write_table@a(1), 
  3248 ;;  fmt             2   33[BANK1 ] PTR const unsigned char 
  3249 ;;		 -> STR_1(3), 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  s               1   39[BANK1 ] PTR unsigned char 
  3252 ;;		 -> Write_table@a(1), 
  3253 ;;  f              11   40[BANK1 ] struct _IO_FILE
  3254 ;;  ret             2    0        int 
  3255 ;;  ap              1   38[BANK1 ] PTR void [1]
  3256 ;;		 -> ?_sprintf(2), 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  2   33[BANK1 ] int 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3266 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3267 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;Total ram usage:       18 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 7
  3273 ;; This function calls:
  3274 ;;		_vfprintf
  3275 ;; This function is called by:
  3276 ;;		_Write_table
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280     0CC6                     _sprintf:	
  3281                           ;psect for function _sprintf
  3282                           
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3286                           ;sprintf@s stored from wreg
  3287     0CC6  0141               	movlb	1	; select bank1
  3288     0CC7  00C7               	movwf	sprintf@s^(0+128)
  3289     0CC8                     l1858:
  3290     0CC8  30C3               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3291     0CC9  00C6               	movwf	sprintf@ap^(0+128)
  3292     0CCA  0847               	movf	sprintf@s^(0+128),w
  3293     0CCB  00C8               	movwf	sprintf@f^(0+128)
  3294     0CCC                     l1860:
  3295     0CCC  01CA               	clrf	(sprintf@f^(0+128)+2)
  3296     0CCD  01CB               	clrf	((sprintf@f+1)^(0+128)+2)
  3297     0CCE                     l1862:
  3298     0CCE  01D1               	clrf	(sprintf@f^(0+128)+9)
  3299     0CCF  01D2               	clrf	((sprintf@f+1)^(0+128)+9)
  3300     0CD0                     l1864:
  3301     0CD0  0842               	movf	(sprintf@fmt+1)^(0+128),w
  3302     0CD1  00BB               	movwf	(vfprintf@fmt+1)^(0+128)
  3303     0CD2  0841               	movf	sprintf@fmt^(0+128),w
  3304     0CD3  00BA               	movwf	vfprintf@fmt^(0+128)
  3305     0CD4  30C6               	movlw	(low (sprintf@ap| 0))& (0+255)
  3306     0CD5  00BC               	movwf	vfprintf@ap^(0+128)
  3307     0CD6  30C8               	movlw	(low (sprintf@f| 0))& (0+255)
  3308     0CD7  318C  24AA  318C   	fcall	_vfprintf
  3309     0CDA                     l1866:
  3310     0CDA  0141               	movlb	1	; select bank1
  3311     0CDB  084A               	movf	(sprintf@f^(0+128)+2),w
  3312     0CDC  0747               	addwf	sprintf@s^(0+128),w
  3313     0CDD  00C5               	movwf	??_sprintf^(0+128)
  3314     0CDE  0845               	movf	??_sprintf^(0+128),w
  3315     0CDF  0086               	movwf	6
  3316     0CE0  0187               	clrf	7
  3317     0CE1  0181               	clrf	1
  3318     0CE2                     l838:
  3319     0CE2  0008               	return
  3320     0CE3                     __end_of_sprintf:
  3321                           
  3322                           	psect	text11
  3323     0CAA                     __ptext11:	
  3324 ;; *************** function _vfprintf *****************
  3325 ;; Defined at:
  3326 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  fp              1    wreg     PTR struct _IO_FILE
  3329 ;;		 -> sprintf@f(11), 
  3330 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  3331 ;;		 -> STR_1(3), 
  3332 ;;  ap              1   28[BANK1 ] PTR PTR void 
  3333 ;;		 -> sprintf@ap(1), 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  3336 ;;		 -> sprintf@f(11), 
  3337 ;;  cfmt            2   31[BANK1 ] PTR unsigned char 
  3338 ;;		 -> STR_1(3), 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  2   26[BANK1 ] int 
  3341 ;; Registers used:
  3342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3348 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3352 ;;Total ram usage:        7 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 6
  3355 ;; This function calls:
  3356 ;;		_vfpfcnvrt
  3357 ;; This function is called by:
  3358 ;;		_sprintf
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362     0CAA                     _vfprintf:	
  3363                           ;psect for function _vfprintf
  3364                           
  3365                           
  3366                           ;incstack = 0
  3367                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3368                           ;vfprintf@fp stored from wreg
  3369     0CAA  0141               	movlb	1	; select bank1
  3370     0CAB  00BE               	movwf	vfprintf@fp^(0+128)
  3371     0CAC                     l1848:
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3374     0CAC  083B               	movf	(vfprintf@fmt+1)^(0+128),w
  3375     0CAD  00C0               	movwf	(vfprintf@cfmt+1)^(0+128)
  3376     0CAE  083A               	movf	vfprintf@fmt^(0+128),w
  3377     0CAF  00BF               	movwf	vfprintf@cfmt^(0+128)
  3378                           
  3379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3380     0CB0  2CB9               	goto	l1852
  3381     0CB1                     l1850:
  3382                           
  3383                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3384     0CB1  30BF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3385     0CB2  00AB               	movwf	vfpfcnvrt@fmt^(0+128)
  3386     0CB3  083C               	movf	vfprintf@ap^(0+128),w
  3387     0CB4  00AC               	movwf	vfpfcnvrt@ap^(0+128)
  3388     0CB5  083E               	movf	vfprintf@fp^(0+128),w
  3389     0CB6  318F  2710  318C   	fcall	_vfpfcnvrt
  3390     0CB9                     l1852:
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3393     0CB9  0141               	movlb	1	; select bank1
  3394     0CBA  083F               	movf	vfprintf@cfmt^(0+128),w
  3395     0CBB  0084               	movwf	4
  3396     0CBC  0840               	movf	(vfprintf@cfmt+1)^(0+128),w
  3397     0CBD  0085               	movwf	5
  3398     0CBE  0012               	moviw fsr0++
  3399     0CBF  1D03               	btfss	3,2
  3400     0CC0  2CC2               	goto	u1481
  3401     0CC1  2CC3               	goto	u1480
  3402     0CC2                     u1481:
  3403     0CC2  2CB1               	goto	l1850
  3404     0CC3                     u1480:
  3405     0CC3                     l1854:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3408     0CC3  01BA               	clrf	?_vfprintf^(0+128)
  3409     0CC4  01BB               	clrf	(?_vfprintf+1)^(0+128)
  3410     0CC5                     l882:
  3411     0CC5  0008               	return
  3412     0CC6                     __end_of_vfprintf:
  3413                           
  3414                           	psect	text12
  3415     0F10                     __ptext12:	
  3416 ;; *************** function _vfpfcnvrt *****************
  3417 ;; Defined at:
  3418 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  fp              1    wreg     PTR struct _IO_FILE
  3421 ;;		 -> sprintf@f(11), 
  3422 ;;  fmt             1   11[BANK1 ] PTR PTR unsigned char 
  3423 ;;		 -> vfprintf@cfmt(2), 
  3424 ;;  ap              1   12[BANK1 ] PTR PTR void 
  3425 ;;		 -> sprintf@ap(1), 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  fp              1   18[BANK1 ] PTR struct _IO_FILE
  3428 ;;		 -> sprintf@f(11), 
  3429 ;;  convarg         4   21[BANK1 ] struct .
  3430 ;;  cp              2   19[BANK1 ] PTR unsigned char 
  3431 ;;		 -> STR_1(3), 
  3432 ;;  c               1   25[BANK1 ] unsigned char 
  3433 ;;  done            1   17[BANK1 ] _Bool 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3443 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3444 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  3447 ;;Total ram usage:       15 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 5
  3450 ;; This function calls:
  3451 ;;		___awdiv
  3452 ;;		___awmod
  3453 ;;		_abs
  3454 ;;		_fputc
  3455 ;; This function is called by:
  3456 ;;		_vfprintf
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460     0F10                     _vfpfcnvrt:	
  3461                           ;psect for function _vfpfcnvrt
  3462                           
  3463                           
  3464                           ;incstack = 0
  3465                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3466                           ;vfpfcnvrt@fp stored from wreg
  3467     0F10  0141               	movlb	1	; select bank1
  3468     0F11  00B2               	movwf	vfpfcnvrt@fp^(0+128)
  3469     0F12                     l1792:
  3470                           
  3471                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3472     0F12  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3473     0F13  0086               	movwf	6
  3474     0F14  0187               	clrf	7
  3475     0F15  3F40               	moviw [0]fsr1
  3476     0F16  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3477     0F17  3F41               	moviw [1]fsr1
  3478     0F18  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3479     0F19  082D               	movf	??_vfpfcnvrt^(0+128),w
  3480     0F1A  0084               	movwf	4
  3481     0F1B  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3482     0F1C  0085               	movwf	5
  3483     0F1D  0012               	moviw fsr0++
  3484     0F1E  3A25               	xorlw	37
  3485     0F1F  1D03               	btfss	3,2
  3486     0F20  2F22               	goto	u1371
  3487     0F21  2F23               	goto	u1370
  3488     0F22                     u1371:
  3489     0F22  2FE7               	goto	l1838
  3490     0F23                     u1370:
  3491     0F23                     l1794:
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3494     0F23  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3495     0F24  0086               	movwf	6
  3496     0F25  0187               	clrf	7
  3497     0F26  3001               	movlw	1
  3498     0F27  0781               	addwf	1,f
  3499     0F28  3141               	addfsr 1,1
  3500     0F29  1803               	skipnc
  3501     0F2A  0A81               	incf	1,f
  3502     0F2B                     l1796:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3505     0F2B  01DC               	clrf	_width^(0+128)
  3506     0F2C  01DD               	clrf	(_width+1)^(0+128)
  3507     0F2D  1003               	clrc
  3508     0F2E  3000               	movlw	0
  3509     0F2F  1803               	btfsc	3,0
  3510     0F30  3001               	movlw	1
  3511     0F31  00E0               	movwf	_flags^(0+128)
  3512     0F32                     l1798:
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3515     0F32  30FF               	movlw	255
  3516     0F33  00DE               	movwf	_prec^(0+128)
  3517     0F34  30FF               	movlw	255
  3518     0F35  00DF               	movwf	(_prec^(0+128)+1)
  3519     0F36                     l1800:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3522     0F36  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3523     0F37  0086               	movwf	6
  3524     0F38  0187               	clrf	7
  3525     0F39  3F40               	moviw [0]fsr1
  3526     0F3A  00B3               	movwf	vfpfcnvrt@cp^(0+128)
  3527     0F3B  3F41               	moviw [1]fsr1
  3528     0F3C  00B4               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  3529     0F3D                     l1802:
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3532     0F3D  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3533     0F3E  0084               	movwf	4
  3534     0F3F  0834               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3535     0F40  0085               	movwf	5
  3536     0F41  0012               	moviw fsr0++
  3537     0F42  3A64               	xorlw	100
  3538     0F43  1903               	btfsc	3,2
  3539     0F44  2F46               	goto	u1381
  3540     0F45  2F47               	goto	u1380
  3541     0F46                     u1381:
  3542     0F46  2F51               	goto	l1806
  3543     0F47                     u1380:
  3544     0F47                     l1804:
  3545     0F47  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3546     0F48  0084               	movwf	4
  3547     0F49  0834               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3548     0F4A  0085               	movwf	5
  3549     0F4B  0012               	moviw fsr0++
  3550     0F4C  3A69               	xorlw	105
  3551     0F4D  1D03               	btfss	3,2
  3552     0F4E  2F50               	goto	u1391
  3553     0F4F  2F51               	goto	u1390
  3554     0F50                     u1391:
  3555     0F50  2FDD               	goto	l1834
  3556     0F51                     u1390:
  3557     0F51                     l1806:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3560     0F51  082C               	movf	vfpfcnvrt@ap^(0+128),w
  3561     0F52  0086               	movwf	6
  3562     0F53  0187               	clrf	7
  3563     0F54  0801               	movf	1,w
  3564     0F55  0084               	movwf	4
  3565     0F56  0185               	clrf	5
  3566     0F57  3002               	movlw	2
  3567     0F58  0781               	addwf	1,f
  3568     0F59  3F00               	moviw [0]fsr0
  3569     0F5A  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  3570     0F5B  3F01               	moviw [1]fsr0
  3571     0F5C  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3572     0F5D                     l1808:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3575     0F5D  0833               	movf	vfpfcnvrt@cp^(0+128),w
  3576     0F5E  3E01               	addlw	1
  3577     0F5F  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3578     0F60  3000               	movlw	0
  3579     0F61  3D34               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  3580     0F62  00AE               	movwf	(??_vfpfcnvrt+1)^(0+128)
  3581     0F63  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3582     0F64  0086               	movwf	6
  3583     0F65  0187               	clrf	7
  3584     0F66  082D               	movf	??_vfpfcnvrt^(0+128),w
  3585     0F67  3FC0               	movwi [0]fsr1
  3586     0F68  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3587     0F69  3FC1               	movwi [1]fsr1
  3588     0F6A                     l1810:
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3591     0F6A  3020               	movlw	32
  3592     0F6B  00B9               	movwf	vfpfcnvrt@c^(0+128)
  3593     0F6C                     l1812:
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3596     0F6C  1BB6               	btfsc	(vfpfcnvrt@convarg+1)^(0+128),7
  3597     0F6D  2F6F               	goto	u1401
  3598     0F6E  2F71               	goto	u1400
  3599     0F6F                     u1401:
  3600     0F6F  3001               	movlw	1
  3601     0F70  2F72               	goto	u1410
  3602     0F71                     u1400:
  3603     0F71  3000               	movlw	0
  3604     0F72                     u1410:
  3605     0F72  00B1               	movwf	vfpfcnvrt@done^(0+128)
  3606     0F73                     l1814:
  3607                           
  3608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3609     0F73  3001               	movlw	1
  3610     0F74  02B9               	subwf	vfpfcnvrt@c^(0+128),f
  3611     0F75  0839               	movf	vfpfcnvrt@c^(0+128),w
  3612     0F76  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3613     0F77  0086               	movwf	6
  3614     0F78  3001               	movlw	1	; select bank2/3
  3615     0F79  0087               	movwf	7
  3616     0F7A  300A               	movlw	10
  3617     0F7B  00A0               	movwf	___awmod@divisor^(0+128)
  3618     0F7C  3000               	movlw	0
  3619     0F7D  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  3620     0F7E  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3621     0F7F  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  3622     0F80  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3623     0F81  00A2               	movwf	___awmod@dividend^(0+128)
  3624     0F82  318E  2666  318F   	fcall	___awmod
  3625     0F85  0141               	movlb	1	; select bank1
  3626     0F86  0821               	movf	(?___awmod+1)^(0+128),w
  3627     0F87  00A8               	movwf	(abs@a+1)^(0+128)
  3628     0F88  0820               	movf	?___awmod^(0+128),w
  3629     0F89  00A7               	movwf	abs@a^(0+128)
  3630     0F8A  318C  2480  318F   	fcall	_abs
  3631     0F8D  0141               	movlb	1	; select bank1
  3632     0F8E  0827               	movf	?_abs^(0+128),w
  3633     0F8F  3E30               	addlw	48
  3634     0F90  0081               	movwf	1
  3635     0F91                     l1816:
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3638     0F91  300A               	movlw	10
  3639     0F92  00A0               	movwf	___awdiv@divisor^(0+128)
  3640     0F93  3000               	movlw	0
  3641     0F94  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3642     0F95  0836               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3643     0F96  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3644     0F97  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3645     0F98  00A2               	movwf	___awdiv@dividend^(0+128)
  3646     0F99  3187  2785  318F   	fcall	___awdiv
  3647     0F9C  0141               	movlb	1	; select bank1
  3648     0F9D  0821               	movf	(?___awdiv+1)^(0+128),w
  3649     0F9E  00B6               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3650     0F9F  0820               	movf	?___awdiv^(0+128),w
  3651     0FA0  00B5               	movwf	vfpfcnvrt@convarg^(0+128)
  3652     0FA1                     l1818:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3655     0FA1  0835               	movf	vfpfcnvrt@convarg^(0+128),w
  3656     0FA2  0436               	iorwf	(vfpfcnvrt@convarg+1)^(0+128),w
  3657     0FA3  1903               	btfsc	3,2
  3658     0FA4  2FA6               	goto	u1421
  3659     0FA5  2FA7               	goto	u1420
  3660     0FA6                     u1421:
  3661     0FA6  2FAC               	goto	l1822
  3662     0FA7                     u1420:
  3663     0FA7                     l1820:
  3664     0FA7  0839               	movf	vfpfcnvrt@c^(0+128),w
  3665     0FA8  1D03               	btfss	3,2
  3666     0FA9  2FAB               	goto	u1431
  3667     0FAA  2FAC               	goto	u1430
  3668     0FAB                     u1431:
  3669     0FAB  2F73               	goto	l1814
  3670     0FAC                     u1430:
  3671     0FAC                     l1822:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3674     0FAC  0839               	movf	vfpfcnvrt@c^(0+128),w
  3675     0FAD  1903               	btfsc	3,2
  3676     0FAE  2FB0               	goto	u1441
  3677     0FAF  2FB1               	goto	u1440
  3678     0FB0                     u1441:
  3679     0FB0  2FD6               	goto	l1832
  3680     0FB1                     u1440:
  3681     0FB1                     l1824:
  3682     0FB1  0831               	movf	vfpfcnvrt@done^(0+128),w
  3683     0FB2  1903               	btfsc	3,2
  3684     0FB3  2FB5               	goto	u1451
  3685     0FB4  2FB6               	goto	u1450
  3686     0FB5                     u1451:
  3687     0FB5  2FD6               	goto	l1832
  3688     0FB6                     u1450:
  3689     0FB6                     l1826:
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3692     0FB6  3001               	movlw	1
  3693     0FB7  02B9               	subwf	vfpfcnvrt@c^(0+128),f
  3694     0FB8  0839               	movf	vfpfcnvrt@c^(0+128),w
  3695     0FB9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3696     0FBA  0086               	movwf	6
  3697     0FBB  3001               	movlw	1	; select bank2/3
  3698     0FBC  0087               	movwf	7
  3699     0FBD  302D               	movlw	45
  3700     0FBE  0081               	movwf	1
  3701     0FBF  2FD6               	goto	l1832
  3702     0FC0                     l1828:
  3703                           
  3704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3705     0FC0  0839               	movf	vfpfcnvrt@c^(0+128),w
  3706     0FC1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3707     0FC2  0086               	movwf	6
  3708     0FC3  3001               	movlw	1	; select bank2/3
  3709     0FC4  0087               	movwf	7
  3710     0FC5  0801               	movf	1,w
  3711     0FC6  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3712     0FC7  01AE               	clrf	(??_vfpfcnvrt^(0+128)+1)
  3713     0FC8  082D               	movf	??_vfpfcnvrt^(0+128),w
  3714     0FC9  00A0               	movwf	fputc@c^(0+128)
  3715     0FCA  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3716     0FCB  00A1               	movwf	(fputc@c+1)^(0+128)
  3717     0FCC  0832               	movf	vfpfcnvrt@fp^(0+128),w
  3718     0FCD  00A2               	movwf	fputc@fp^(0+128)
  3719     0FCE  318E  2614  318F   	fcall	_fputc
  3720     0FD1                     l1830:
  3721     0FD1  3001               	movlw	1
  3722     0FD2  0141               	movlb	1	; select bank1
  3723     0FD3  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3724     0FD4  082D               	movf	??_vfpfcnvrt^(0+128),w
  3725     0FD5  07B9               	addwf	vfpfcnvrt@c^(0+128),f
  3726     0FD6                     l1832:
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3729     0FD6  3020               	movlw	32
  3730     0FD7  0639               	xorwf	vfpfcnvrt@c^(0+128),w
  3731     0FD8  1D03               	btfss	3,2
  3732     0FD9  2FDB               	goto	u1461
  3733     0FDA  2FDC               	goto	u1460
  3734     0FDB                     u1461:
  3735     0FDB  2FC0               	goto	l1828
  3736     0FDC                     u1460:
  3737     0FDC  2FFF               	goto	l876
  3738     0FDD                     l1834:
  3739                           
  3740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3741     0FDD  0141               	movlb	1	; select bank1
  3742     0FDE  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3743     0FDF  0086               	movwf	6
  3744     0FE0  0187               	clrf	7
  3745     0FE1  3001               	movlw	1
  3746     0FE2  0781               	addwf	1,f
  3747     0FE3  3141               	addfsr 1,1
  3748     0FE4  1803               	skipnc
  3749     0FE5  0A81               	incf	1,f
  3750     0FE6  2FFF               	goto	l876
  3751     0FE7                     l1838:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3754     0FE7  082B               	movf	vfpfcnvrt@fmt^(0+128),w
  3755     0FE8  0086               	movwf	6
  3756     0FE9  0187               	clrf	7
  3757     0FEA  3F40               	moviw [0]fsr1
  3758     0FEB  00AD               	movwf	??_vfpfcnvrt^(0+128)
  3759     0FEC  3F41               	moviw [1]fsr1
  3760     0FED  00AE               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3761     0FEE  082D               	movf	??_vfpfcnvrt^(0+128),w
  3762     0FEF  0084               	movwf	4
  3763     0FF0  082E               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3764     0FF1  0085               	movwf	5
  3765     0FF2  0800               	movf	0,w	;code access
  3766     0FF3  00AF               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3767     0FF4  01B0               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3768     0FF5  082F               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3769     0FF6  00A0               	movwf	fputc@c^(0+128)
  3770     0FF7  0830               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3771     0FF8  00A1               	movwf	(fputc@c+1)^(0+128)
  3772     0FF9  0832               	movf	vfpfcnvrt@fp^(0+128),w
  3773     0FFA  00A2               	movwf	fputc@fp^(0+128)
  3774     0FFB  318E  2614  318F   	fcall	_fputc
  3775     0FFE  2FDD               	goto	l1834
  3776     0FFF                     l876:
  3777     0FFF  0008               	return
  3778     1000                     __end_of_vfpfcnvrt:
  3779                           
  3780                           	psect	text13
  3781     0E14                     __ptext13:	
  3782 ;; *************** function _fputc *****************
  3783 ;; Defined at:
  3784 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  c               2    0[BANK1 ] int 
  3787 ;;  fp              1    2[BANK1 ] PTR struct _IO_FILE
  3788 ;;		 -> sprintf@f(11), 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  2    0[BANK1 ] int 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3800 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;Total ram usage:        8 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; Hardware stack levels required when called: 4
  3807 ;; This function calls:
  3808 ;;		_putch
  3809 ;; This function is called by:
  3810 ;;		_vfpfcnvrt
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814     0E14                     _fputc:	
  3815                           ;psect for function _fputc
  3816                           
  3817     0E14                     l1768:	
  3818                           ;incstack = 0
  3819                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3820                           
  3821     0E14  0141               	movlb	1	; select bank1
  3822     0E15  0822               	movf	fputc@fp^(0+128),w
  3823     0E16  1903               	btfsc	3,2
  3824     0E17  2E19               	goto	u1321
  3825     0E18  2E1A               	goto	u1320
  3826     0E19                     u1321:
  3827     0E19  2E1F               	goto	l1772
  3828     0E1A                     u1320:
  3829     0E1A                     l1770:
  3830     0E1A  0822               	movf	fputc@fp^(0+128),w
  3831     0E1B  1D03               	btfss	3,2
  3832     0E1C  2E1E               	goto	u1331
  3833     0E1D  2E1F               	goto	u1330
  3834     0E1E                     u1331:
  3835     0E1E  2E24               	goto	l1774
  3836     0E1F                     u1330:
  3837     0E1F                     l1772:
  3838     0E1F  0820               	movf	fputc@c^(0+128),w
  3839     0E20  3187  27FE  318E   	fcall	_putch
  3840     0E23  2E65               	goto	l901
  3841     0E24                     l1774:
  3842     0E24  0822               	movf	fputc@fp^(0+128),w
  3843     0E25  3E09               	addlw	9
  3844     0E26  0086               	movwf	6
  3845     0E27  0187               	clrf	7
  3846     0E28  0016               	moviw fsr1++
  3847     0E29  0401               	iorwf	1,w
  3848     0E2A  1903               	btfsc	3,2
  3849     0E2B  2E2D               	goto	u1341
  3850     0E2C  2E2E               	goto	u1340
  3851     0E2D                     u1341:
  3852     0E2D  2E4C               	goto	l1778
  3853     0E2E                     u1340:
  3854     0E2E                     l1776:
  3855     0E2E  0822               	movf	fputc@fp^(0+128),w
  3856     0E2F  3E09               	addlw	9
  3857     0E30  0086               	movwf	6
  3858     0E31  0187               	clrf	7
  3859     0E32  3F40               	moviw [0]fsr1
  3860     0E33  00A3               	movwf	??_fputc^(0+128)
  3861     0E34  3F41               	moviw [1]fsr1
  3862     0E35  00A4               	movwf	(??_fputc^(0+128)+1)
  3863     0E36  0822               	movf	fputc@fp^(0+128),w
  3864     0E37  3E02               	addlw	2
  3865     0E38  0086               	movwf	6
  3866     0E39  0187               	clrf	7
  3867     0E3A  3F40               	moviw [0]fsr1
  3868     0E3B  00A5               	movwf	(??_fputc+2)^(0+128)
  3869     0E3C  3F41               	moviw [1]fsr1
  3870     0E3D  00A6               	movwf	((??_fputc+2)^(0+128)+1)
  3871     0E3E  0826               	movf	(??_fputc+3)^(0+128),w
  3872     0E3F  3A80               	xorlw	128
  3873     0E40  00A7               	movwf	(??_fputc+4)^(0+128)
  3874     0E41  0824               	movf	(??_fputc+1)^(0+128),w
  3875     0E42  3A80               	xorlw	128
  3876     0E43  0227               	subwf	(??_fputc+4)^(0+128),w
  3877     0E44  1D03               	skipz
  3878     0E45  2E48               	goto	u1355
  3879     0E46  0823               	movf	??_fputc^(0+128),w
  3880     0E47  0225               	subwf	(??_fputc+2)^(0+128),w
  3881     0E48                     u1355:
  3882     0E48  1803               	skipnc
  3883     0E49  2E4B               	goto	u1351
  3884     0E4A  2E4C               	goto	u1350
  3885     0E4B                     u1351:
  3886     0E4B  2E65               	goto	l901
  3887     0E4C                     u1350:
  3888     0E4C                     l1778:
  3889     0E4C  0141               	movlb	1	; select bank1
  3890     0E4D  0822               	movf	fputc@fp^(0+128),w
  3891     0E4E  0086               	movwf	6
  3892     0E4F  0187               	clrf	7
  3893     0E50  0822               	movf	fputc@fp^(0+128),w
  3894     0E51  3E02               	addlw	2
  3895     0E52  0084               	movwf	4
  3896     0E53  0185               	clrf	5
  3897     0E54  0800               	movf	0,w
  3898     0E55  0701               	addwf	1,w
  3899     0E56  00A3               	movwf	??_fputc^(0+128)
  3900     0E57  0823               	movf	??_fputc^(0+128),w
  3901     0E58  0086               	movwf	6
  3902     0E59  0187               	clrf	7
  3903     0E5A  0820               	movf	fputc@c^(0+128),w
  3904     0E5B  0081               	movwf	1
  3905     0E5C                     l1780:
  3906     0E5C  0822               	movf	fputc@fp^(0+128),w
  3907     0E5D  3E02               	addlw	2
  3908     0E5E  0086               	movwf	6
  3909     0E5F  0187               	clrf	7
  3910     0E60  3001               	movlw	1
  3911     0E61  0781               	addwf	1,f
  3912     0E62  3141               	addfsr 1,1
  3913     0E63  1803               	skipnc
  3914     0E64  0A81               	incf	1,f
  3915     0E65                     l901:
  3916     0E65  0008               	return
  3917     0E66                     __end_of_fputc:
  3918                           
  3919                           	psect	text14
  3920     07FE                     __ptext14:	
  3921 ;; *************** function _putch *****************
  3922 ;; Defined at:
  3923 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  c               1    wreg     unsigned char 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  c               1    0[COMMON] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;Total ram usage:        0 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 3
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_fputc
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951     07FE                     _putch:	
  3952                           ;psect for function _putch
  3953                           
  3954     07FE                     l912:	
  3955                           ;incstack = 0
  3956                           ; Regs used in _putch: [wreg]
  3957                           
  3958     07FE  0008               	return
  3959     07FF                     __end_of_putch:
  3960                           
  3961                           	psect	text15
  3962     0C80                     __ptext15:	
  3963 ;; *************** function _abs *****************
  3964 ;; Defined at:
  3965 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  a               2    7[BANK1 ] int 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  2    7[BANK1 ] int 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3979 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;Total ram usage:        4 bytes
  3984 ;; Hardware stack levels used: 1
  3985 ;; Hardware stack levels required when called: 3
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_vfpfcnvrt
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993     0C80                     _abs:	
  3994                           ;psect for function _abs
  3995                           
  3996     0C80                     l1784:	
  3997                           ;incstack = 0
  3998                           ; Regs used in _abs: [wreg+status,2+status,0]
  3999                           
  4000     0C80  0141               	movlb	1	; select bank1
  4001     0C81  1BA8               	btfsc	(abs@a+1)^(0+128),7
  4002     0C82  2C84               	goto	u1361
  4003     0C83  2C85               	goto	u1360
  4004     0C84                     u1361:
  4005     0C84  2C86               	goto	l1788
  4006     0C85                     u1360:
  4007     0C85                     l1786:
  4008     0C85  2C91               	goto	l889
  4009     0C86                     l1788:
  4010     0C86  0927               	comf	abs@a^(0+128),w
  4011     0C87  00A9               	movwf	??_abs^(0+128)
  4012     0C88  0928               	comf	(abs@a+1)^(0+128),w
  4013     0C89  00AA               	movwf	(??_abs^(0+128)+1)
  4014     0C8A  0AA9               	incf	??_abs^(0+128),f
  4015     0C8B  1903               	skipnz
  4016     0C8C  0AAA               	incf	(??_abs^(0+128)+1),f
  4017     0C8D  0829               	movf	??_abs^(0+128),w
  4018     0C8E  00A7               	movwf	?_abs^(0+128)
  4019     0C8F  082A               	movf	(??_abs+1)^(0+128),w
  4020     0C90  00A8               	movwf	(?_abs+1)^(0+128)
  4021     0C91                     l889:
  4022     0C91  0008               	return
  4023     0C92                     __end_of_abs:
  4024                           
  4025                           	psect	text16
  4026     0E66                     __ptext16:	
  4027 ;; *************** function ___awmod *****************
  4028 ;; Defined at:
  4029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  divisor         2    0[BANK1 ] int 
  4032 ;;  dividend        2    2[BANK1 ] int 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  sign            1    6[BANK1 ] unsigned char 
  4035 ;;  counter         1    5[BANK1 ] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  2    0[BANK1 ] int 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4045 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;Total ram usage:        7 bytes
  4050 ;; Hardware stack levels used: 1
  4051 ;; Hardware stack levels required when called: 3
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_vfpfcnvrt
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059     0E66                     ___awmod:	
  4060                           ;psect for function ___awmod
  4061                           
  4062     0E66                     l1730:	
  4063                           ;incstack = 0
  4064                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4065                           
  4066     0E66  0141               	movlb	1	; select bank1
  4067     0E67  01A6               	clrf	___awmod@sign^(0+128)
  4068     0E68                     l1732:
  4069     0E68  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  4070     0E69  2E6B               	goto	u1231
  4071     0E6A  2E6C               	goto	u1230
  4072     0E6B                     u1231:
  4073     0E6B  2E73               	goto	l1738
  4074     0E6C                     u1230:
  4075     0E6C                     l1734:
  4076     0E6C  09A2               	comf	___awmod@dividend^(0+128),f
  4077     0E6D  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4078     0E6E  0AA2               	incf	___awmod@dividend^(0+128),f
  4079     0E6F  1903               	skipnz
  4080     0E70  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4081     0E71                     l1736:
  4082     0E71  01A6               	clrf	___awmod@sign^(0+128)
  4083     0E72  0AA6               	incf	___awmod@sign^(0+128),f
  4084     0E73                     l1738:
  4085     0E73  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4086     0E74  2E76               	goto	u1241
  4087     0E75  2E77               	goto	u1240
  4088     0E76                     u1241:
  4089     0E76  2E7C               	goto	l1742
  4090     0E77                     u1240:
  4091     0E77                     l1740:
  4092     0E77  09A0               	comf	___awmod@divisor^(0+128),f
  4093     0E78  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  4094     0E79  0AA0               	incf	___awmod@divisor^(0+128),f
  4095     0E7A  1903               	skipnz
  4096     0E7B  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  4097     0E7C                     l1742:
  4098     0E7C  0820               	movf	___awmod@divisor^(0+128),w
  4099     0E7D  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  4100     0E7E  1903               	btfsc	3,2
  4101     0E7F  2E81               	goto	u1251
  4102     0E80  2E82               	goto	u1250
  4103     0E81                     u1251:
  4104     0E81  2EAB               	goto	l1760
  4105     0E82                     u1250:
  4106     0E82                     l1744:
  4107     0E82  01A5               	clrf	___awmod@counter^(0+128)
  4108     0E83  0AA5               	incf	___awmod@counter^(0+128),f
  4109     0E84  2E8E               	goto	l1750
  4110     0E85                     l1746:
  4111     0E85  3001               	movlw	1
  4112     0E86                     u1265:
  4113     0E86  35A0               	lslf	___awmod@divisor^(0+128),f
  4114     0E87  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  4115     0E88  0B89               	decfsz	9,f
  4116     0E89  2E86               	goto	u1265
  4117     0E8A                     l1748:
  4118     0E8A  3001               	movlw	1
  4119     0E8B  00A4               	movwf	??___awmod^(0+128)
  4120     0E8C  0824               	movf	??___awmod^(0+128),w
  4121     0E8D  07A5               	addwf	___awmod@counter^(0+128),f
  4122     0E8E                     l1750:
  4123     0E8E  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  4124     0E8F  2E91               	goto	u1271
  4125     0E90  2E92               	goto	u1270
  4126     0E91                     u1271:
  4127     0E91  2E85               	goto	l1746
  4128     0E92                     u1270:
  4129     0E92                     l1752:
  4130     0E92  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4131     0E93  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  4132     0E94  1D03               	skipz
  4133     0E95  2E98               	goto	u1285
  4134     0E96  0820               	movf	___awmod@divisor^(0+128),w
  4135     0E97  0222               	subwf	___awmod@dividend^(0+128),w
  4136     0E98                     u1285:
  4137     0E98  1C03               	skipc
  4138     0E99  2E9B               	goto	u1281
  4139     0E9A  2E9C               	goto	u1280
  4140     0E9B                     u1281:
  4141     0E9B  2EA0               	goto	l1756
  4142     0E9C                     u1280:
  4143     0E9C                     l1754:
  4144     0E9C  0820               	movf	___awmod@divisor^(0+128),w
  4145     0E9D  02A2               	subwf	___awmod@dividend^(0+128),f
  4146     0E9E  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4147     0E9F  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
  4148     0EA0                     l1756:
  4149     0EA0  3001               	movlw	1
  4150     0EA1                     u1295:
  4151     0EA1  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
  4152     0EA2  0CA0               	rrf	___awmod@divisor^(0+128),f
  4153     0EA3  0B89               	decfsz	9,f
  4154     0EA4  2EA1               	goto	u1295
  4155     0EA5                     l1758:
  4156     0EA5  3001               	movlw	1
  4157     0EA6  02A5               	subwf	___awmod@counter^(0+128),f
  4158     0EA7  1D03               	btfss	3,2
  4159     0EA8  2EAA               	goto	u1301
  4160     0EA9  2EAB               	goto	u1300
  4161     0EAA                     u1301:
  4162     0EAA  2E92               	goto	l1752
  4163     0EAB                     u1300:
  4164     0EAB                     l1760:
  4165     0EAB  0826               	movf	___awmod@sign^(0+128),w
  4166     0EAC  1903               	btfsc	3,2
  4167     0EAD  2EAF               	goto	u1311
  4168     0EAE  2EB0               	goto	u1310
  4169     0EAF                     u1311:
  4170     0EAF  2EB5               	goto	l1764
  4171     0EB0                     u1310:
  4172     0EB0                     l1762:
  4173     0EB0  09A2               	comf	___awmod@dividend^(0+128),f
  4174     0EB1  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4175     0EB2  0AA2               	incf	___awmod@dividend^(0+128),f
  4176     0EB3  1903               	skipnz
  4177     0EB4  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4178     0EB5                     l1764:
  4179     0EB5  0823               	movf	(___awmod@dividend+1)^(0+128),w
  4180     0EB6  00A1               	movwf	(?___awmod+1)^(0+128)
  4181     0EB7  0822               	movf	___awmod@dividend^(0+128),w
  4182     0EB8  00A0               	movwf	?___awmod^(0+128)
  4183     0EB9                     l541:
  4184     0EB9  0008               	return
  4185     0EBA                     __end_of___awmod:
  4186                           
  4187                           	psect	text17
  4188     0785                     __ptext17:	
  4189 ;; *************** function ___awdiv *****************
  4190 ;; Defined at:
  4191 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  divisor         2    0[BANK1 ] int 
  4194 ;;  dividend        2    2[BANK1 ] int 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  quotient        2    7[BANK1 ] int 
  4197 ;;  sign            1    6[BANK1 ] unsigned char 
  4198 ;;  counter         1    5[BANK1 ] unsigned char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2    0[BANK1 ] int 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4208 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4209 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;Total ram usage:        9 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 3
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_vfpfcnvrt
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222     0785                     ___awdiv:	
  4223                           ;psect for function ___awdiv
  4224                           
  4225     0785                     l1686:	
  4226                           ;incstack = 0
  4227                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4228                           
  4229     0785  0141               	movlb	1	; select bank1
  4230     0786  01A6               	clrf	___awdiv@sign^(0+128)
  4231     0787                     l1688:
  4232     0787  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4233     0788  2F8A               	goto	u1131
  4234     0789  2F8B               	goto	u1130
  4235     078A                     u1131:
  4236     078A  2F92               	goto	l1694
  4237     078B                     u1130:
  4238     078B                     l1690:
  4239     078B  09A0               	comf	___awdiv@divisor^(0+128),f
  4240     078C  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  4241     078D  0AA0               	incf	___awdiv@divisor^(0+128),f
  4242     078E  1903               	skipnz
  4243     078F  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  4244     0790                     l1692:
  4245     0790  01A6               	clrf	___awdiv@sign^(0+128)
  4246     0791  0AA6               	incf	___awdiv@sign^(0+128),f
  4247     0792                     l1694:
  4248     0792  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  4249     0793  2F95               	goto	u1141
  4250     0794  2F96               	goto	u1140
  4251     0795                     u1141:
  4252     0795  2F9F               	goto	l1700
  4253     0796                     u1140:
  4254     0796                     l1696:
  4255     0796  09A2               	comf	___awdiv@dividend^(0+128),f
  4256     0797  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  4257     0798  0AA2               	incf	___awdiv@dividend^(0+128),f
  4258     0799  1903               	skipnz
  4259     079A  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  4260     079B                     l1698:
  4261     079B  3001               	movlw	1
  4262     079C  00A4               	movwf	??___awdiv^(0+128)
  4263     079D  0824               	movf	??___awdiv^(0+128),w
  4264     079E  06A6               	xorwf	___awdiv@sign^(0+128),f
  4265     079F                     l1700:
  4266     079F  01A7               	clrf	___awdiv@quotient^(0+128)
  4267     07A0  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  4268     07A1                     l1702:
  4269     07A1  0820               	movf	___awdiv@divisor^(0+128),w
  4270     07A2  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  4271     07A3  1903               	btfsc	3,2
  4272     07A4  2FA6               	goto	u1151
  4273     07A5  2FA7               	goto	u1150
  4274     07A6                     u1151:
  4275     07A6  2FD6               	goto	l1722
  4276     07A7                     u1150:
  4277     07A7                     l1704:
  4278     07A7  01A5               	clrf	___awdiv@counter^(0+128)
  4279     07A8  0AA5               	incf	___awdiv@counter^(0+128),f
  4280     07A9  2FB3               	goto	l1710
  4281     07AA                     l1706:
  4282     07AA  3001               	movlw	1
  4283     07AB                     u1165:
  4284     07AB  35A0               	lslf	___awdiv@divisor^(0+128),f
  4285     07AC  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  4286     07AD  0B89               	decfsz	9,f
  4287     07AE  2FAB               	goto	u1165
  4288     07AF                     l1708:
  4289     07AF  3001               	movlw	1
  4290     07B0  00A4               	movwf	??___awdiv^(0+128)
  4291     07B1  0824               	movf	??___awdiv^(0+128),w
  4292     07B2  07A5               	addwf	___awdiv@counter^(0+128),f
  4293     07B3                     l1710:
  4294     07B3  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  4295     07B4  2FB6               	goto	u1171
  4296     07B5  2FB7               	goto	u1170
  4297     07B6                     u1171:
  4298     07B6  2FAA               	goto	l1706
  4299     07B7                     u1170:
  4300     07B7                     l1712:
  4301     07B7  3001               	movlw	1
  4302     07B8                     u1185:
  4303     07B8  35A7               	lslf	___awdiv@quotient^(0+128),f
  4304     07B9  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  4305     07BA  0B89               	decfsz	9,f
  4306     07BB  2FB8               	goto	u1185
  4307     07BC  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4308     07BD  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  4309     07BE  1D03               	skipz
  4310     07BF  2FC2               	goto	u1195
  4311     07C0  0820               	movf	___awdiv@divisor^(0+128),w
  4312     07C1  0222               	subwf	___awdiv@dividend^(0+128),w
  4313     07C2                     u1195:
  4314     07C2  1C03               	skipc
  4315     07C3  2FC5               	goto	u1191
  4316     07C4  2FC6               	goto	u1190
  4317     07C5                     u1191:
  4318     07C5  2FCB               	goto	l1718
  4319     07C6                     u1190:
  4320     07C6                     l1714:
  4321     07C6  0820               	movf	___awdiv@divisor^(0+128),w
  4322     07C7  02A2               	subwf	___awdiv@dividend^(0+128),f
  4323     07C8  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  4324     07C9  3BA3               	subwfb	(___awdiv@dividend+1)^(0+128),f
  4325     07CA                     l1716:
  4326     07CA  1427               	bsf	___awdiv@quotient^(0+128),0
  4327     07CB                     l1718:
  4328     07CB  3001               	movlw	1
  4329     07CC                     u1205:
  4330     07CC  36A1               	lsrf	(___awdiv@divisor+1)^(0+128),f
  4331     07CD  0CA0               	rrf	___awdiv@divisor^(0+128),f
  4332     07CE  0B89               	decfsz	9,f
  4333     07CF  2FCC               	goto	u1205
  4334     07D0                     l1720:
  4335     07D0  3001               	movlw	1
  4336     07D1  02A5               	subwf	___awdiv@counter^(0+128),f
  4337     07D2  1D03               	btfss	3,2
  4338     07D3  2FD5               	goto	u1211
  4339     07D4  2FD6               	goto	u1210
  4340     07D5                     u1211:
  4341     07D5  2FB7               	goto	l1712
  4342     07D6                     u1210:
  4343     07D6                     l1722:
  4344     07D6  0826               	movf	___awdiv@sign^(0+128),w
  4345     07D7  1903               	btfsc	3,2
  4346     07D8  2FDA               	goto	u1221
  4347     07D9  2FDB               	goto	u1220
  4348     07DA                     u1221:
  4349     07DA  2FE0               	goto	l1726
  4350     07DB                     u1220:
  4351     07DB                     l1724:
  4352     07DB  09A7               	comf	___awdiv@quotient^(0+128),f
  4353     07DC  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  4354     07DD  0AA7               	incf	___awdiv@quotient^(0+128),f
  4355     07DE  1903               	skipnz
  4356     07DF  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  4357     07E0                     l1726:
  4358     07E0  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  4359     07E1  00A1               	movwf	(?___awdiv+1)^(0+128)
  4360     07E2  0827               	movf	___awdiv@quotient^(0+128),w
  4361     07E3  00A0               	movwf	?___awdiv^(0+128)
  4362     07E4                     l528:
  4363     07E4  0008               	return
  4364     07E5                     __end_of___awdiv:
  4365                           
  4366                           	psect	text18
  4367     07E5                     __ptext18:	
  4368 ;; *************** function _WriteString *****************
  4369 ;; Defined at:
  4370 ;;		line 201 in file "main.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  4373 ;;		 -> STR_2(3), Write_table@a(1), 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4385 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4387 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4388 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4389 ;;Total ram usage:        3 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 4
  4392 ;; This function calls:
  4393 ;;		_Write_Byte
  4394 ;; This function is called by:
  4395 ;;		_Write_table
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399     07E5                     _WriteString:	
  4400                           ;psect for function _WriteString
  4401                           
  4402     07E5                     l1870:	
  4403                           ;incstack = 0
  4404                           ; Regs used in _WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4405                           
  4406                           
  4407                           ;main.c: 202:     while (*str) {
  4408     07E5  2FF3               	goto	l1876
  4409     07E6                     l1872:
  4410                           
  4411                           ;main.c: 203:         Write_Byte(*str);
  4412     07E6  0821               	movf	WriteString@str^(0+128),w
  4413     07E7  0084               	movwf	4
  4414     07E8  0822               	movf	(WriteString@str+1)^(0+128),w
  4415     07E9  0085               	movwf	5
  4416     07EA  0800               	movf	0,w	;code access
  4417     07EB  318C  245C  3187   	fcall	_Write_Byte
  4418     07EE                     l1874:
  4419                           
  4420                           ;main.c: 204:         str++;
  4421     07EE  3001               	movlw	1
  4422     07EF  0141               	movlb	1	; select bank1
  4423     07F0  07A1               	addwf	WriteString@str^(0+128),f
  4424     07F1  3000               	movlw	0
  4425     07F2  3DA2               	addwfc	(WriteString@str+1)^(0+128),f
  4426     07F3                     l1876:
  4427                           
  4428                           ;main.c: 202:     while (*str) {
  4429     07F3  0141               	movlb	1	; select bank1
  4430     07F4  0821               	movf	WriteString@str^(0+128),w
  4431     07F5  0084               	movwf	4
  4432     07F6  0822               	movf	(WriteString@str+1)^(0+128),w
  4433     07F7  0085               	movwf	5
  4434     07F8  0012               	moviw fsr0++
  4435     07F9  1D03               	btfss	3,2
  4436     07FA  2FFC               	goto	u1491
  4437     07FB  2FFD               	goto	u1490
  4438     07FC                     u1491:
  4439     07FC  2FE6               	goto	l1872
  4440     07FD                     u1490:
  4441     07FD                     l221:
  4442     07FD  0008               	return
  4443     07FE                     __end_of_WriteString:
  4444                           
  4445                           	psect	text19
  4446     0C5C                     __ptext19:	
  4447 ;; *************** function _Write_Byte *****************
  4448 ;; Defined at:
  4449 ;;		line 192 in file "main.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  chr             1    wreg     unsigned char 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  chr             1    0[BANK1 ] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;Total ram usage:        1 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 3
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_WriteString
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477     0C5C                     _Write_Byte:	
  4478                           ;psect for function _Write_Byte
  4479                           
  4480                           
  4481                           ;incstack = 0
  4482                           ; Regs used in _Write_Byte: [wreg]
  4483                           ;Write_Byte@chr stored from wreg
  4484     0C5C  0141               	movlb	1	; select bank1
  4485     0C5D  00A0               	movwf	Write_Byte@chr^(0+128)
  4486     0C5E                     l1844:
  4487     0C5E                     l212:	
  4488                           ;main.c: 193:     while (!TRMT);
  4489                           
  4490     0C5E  0142               	movlb	2	; select bank2
  4491     0C5F  1C9E               	btfss	30,1	;volatile
  4492     0C60  2C62               	goto	u1471
  4493     0C61  2C63               	goto	u1470
  4494     0C62                     u1471:
  4495     0C62  2C5E               	goto	l212
  4496     0C63                     u1470:
  4497     0C63                     l1846:
  4498                           
  4499                           ;main.c: 194:     TX1REG = chr;
  4500     0C63  0141               	movlb	1	; select bank1
  4501     0C64  0820               	movf	Write_Byte@chr^(0+128),w
  4502     0C65  0142               	movlb	2	; select bank2
  4503     0C66  009A               	movwf	26	;volatile
  4504     0C67                     l215:
  4505     0C67  0008               	return
  4506     0C68                     __end_of_Write_Byte:
  4507                           
  4508                           	psect	intentry
  4509     0004                     __pintentry:	
  4510 ;; *************** function _InterruptManager *****************
  4511 ;; Defined at:
  4512 ;;		line 292 in file "main.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  pu1_2_period    2   42[BANK0 ] unsigned short 
  4517 ;;  t1_count        2   40[BANK0 ] unsigned short 
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;Total ram usage:        8 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; Hardware stack levels required when called: 2
  4534 ;; This function calls:
  4535 ;;		_ccp1_disable
  4536 ;;		_ccp2_enable
  4537 ;;		_ignition_disable
  4538 ;;		i1___lwdiv
  4539 ;;		i1_calc_map
  4540 ;;		i1_ccp1_enable
  4541 ;;		i1_ccp2_disable
  4542 ;; This function is called by:
  4543 ;;		Interrupt level 1
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547     0004                     _InterruptManager:
  4548                           
  4549                           ;incstack = 0
  4550     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4551                           
  4552                           ; Regs used in _InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4553     0005  3180               	pagesel	$
  4554     0006                     i1l2326:
  4555                           
  4556                           ;main.c: 293:     uint16_t t1_count;;main.c: 295:     if (CCP1IF) {
  4557     0006  014E               	movlb	14	; select bank14
  4558     0007  1F8D               	btfss	13,7	;volatile
  4559     0008  280A               	goto	u199_21
  4560     0009  280B               	goto	u199_20
  4561     000A                     u199_21:
  4562     000A  28E4               	goto	i1l2414
  4563     000B                     u199_20:
  4564     000B                     i1l2328:
  4565                           
  4566                           ;main.c: 296:         if (EG_state == EG_RUN) {
  4567     000B  0140               	movlb	0	; select bank0
  4568     000C  0350               	decf	_EG_state,w
  4569     000D  1D03               	btfss	3,2
  4570     000E  2810               	goto	u200_21
  4571     000F  2811               	goto	u200_20
  4572     0010                     u200_21:
  4573     0010  28D6               	goto	i1l2404
  4574     0011                     u200_20:
  4575     0011                     i1l2330:
  4576                           
  4577                           ;main.c: 297:             TMR1ON = 0;
  4578     0011  0144               	movlb	4	; select bank4
  4579     0012  100E               	bcf	14,0	;volatile
  4580     0013                     i1l2332:
  4581                           
  4582                           ;main.c: 298:             TMR1H = 0x00;
  4583     0013  018D               	clrf	13	;volatile
  4584                           
  4585                           ;main.c: 299:             TMR1L = 0x00;
  4586     0014  018C               	clrf	12	;volatile
  4587     0015                     i1l2334:
  4588                           
  4589                           ;main.c: 300:             TMR1ON = 1;
  4590     0015  140E               	bsf	14,0	;volatile
  4591     0016                     i1l2336:
  4592                           
  4593                           ;main.c: 301:             ccp1_disable();
  4594     0016  318C  2422  3180   	fcall	_ccp1_disable
  4595     0019                     i1l2338:
  4596                           
  4597                           ;main.c: 303:             rpm = (uint8_t) (numerator_rpm / (CCPR1 >> 4));
  4598     0019  0146               	movlb	6	; select bank6
  4599     001A  0E0C               	swapf	12,w	;volatile
  4600     001B  390F               	andlw	15
  4601     001C  00F0               	movwf	i1___lwdiv@divisor
  4602     001D  0E0D               	swapf	13,w	;volatile
  4603     001E  39F0               	andlw	240
  4604     001F  04F0               	iorwf	i1___lwdiv@divisor,f
  4605     0020  0E0D               	swapf	13,w	;volatile
  4606     0021  390F               	andlw	15
  4607     0022  00F1               	movwf	i1___lwdiv@divisor+1
  4608     0023  307C               	movlw	124
  4609     0024  00F2               	movwf	i1___lwdiv@dividend
  4610     0025  3092               	movlw	146
  4611     0026  00F3               	movwf	i1___lwdiv@dividend+1
  4612     0027  318D  259B  3180   	fcall	i1___lwdiv
  4613     002A  0870               	movf	?i1___lwdiv,w
  4614     002B  0140               	movlb	0	; select bank0
  4615     002C  00D2               	movwf	_rpm
  4616     002D                     i1l2340:
  4617                           
  4618                           ;main.c: 305:             if ((rpm > (15))&&(rpm <= (130))) {
  4619     002D  3010               	movlw	16
  4620     002E  0252               	subwf	_rpm,w
  4621     002F  1C03               	skipc
  4622     0030  2832               	goto	u201_21
  4623     0031  2833               	goto	u201_20
  4624     0032                     u201_21:
  4625     0032  2877               	goto	i1l2362
  4626     0033                     u201_20:
  4627     0033                     i1l2342:
  4628     0033  3083               	movlw	131
  4629     0034  0252               	subwf	_rpm,w
  4630     0035  1803               	skipnc
  4631     0036  2838               	goto	u202_21
  4632     0037  2839               	goto	u202_20
  4633     0038                     u202_21:
  4634     0038  2877               	goto	i1l2362
  4635     0039                     u202_20:
  4636     0039                     i1l2344:
  4637                           
  4638                           ;main.c: 306:                 ig_counter = IG_table[rpm];
  4639     0039  0852               	movf	_rpm,w
  4640     003A  00C4               	movwf	??_InterruptManager
  4641     003B  01C5               	clrf	??_InterruptManager+1
  4642     003C  35C4               	lslf	??_InterruptManager,f
  4643     003D  0DC5               	rlf	??_InterruptManager+1,f
  4644     003E  3067               	movlw	103
  4645     003F  00C6               	movwf	??_InterruptManager+2
  4646     0040  3022               	movlw	34
  4647     0041  00C7               	movwf	??_InterruptManager+3
  4648     0042  0844               	movf	??_InterruptManager,w
  4649     0043  0746               	addwf	??_InterruptManager+2,w
  4650     0044  0086               	movwf	6
  4651     0045  0845               	movf	??_InterruptManager+1,w
  4652     0046  3D47               	addwfc	??_InterruptManager+3,w
  4653     0047  0087               	movwf	7
  4654     0048  3F40               	moviw [0]fsr1
  4655     0049  00CC               	movwf	_ig_counter
  4656     004A  3F41               	moviw [1]fsr1
  4657     004B  00CD               	movwf	_ig_counter+1
  4658     004C                     i1l2346:
  4659                           
  4660                           ;main.c: 307:                 LATC2 = (0);
  4661     004C  111A               	bcf	26,2	;volatile
  4662     004D                     i1l2348:
  4663                           
  4664                           ;main.c: 308:                 if ((ig_counter - 15) > TMR1) {
  4665     004D  084C               	movf	_ig_counter,w
  4666     004E  3EF1               	addlw	241
  4667     004F  00C4               	movwf	??_InterruptManager
  4668     0050  30FF               	movlw	255
  4669     0051  3D4D               	addwfc	_ig_counter+1,w
  4670     0052  00C5               	movwf	??_InterruptManager+1
  4671     0053  0845               	movf	??_InterruptManager+1,w
  4672     0054  0144               	movlb	4	; select bank4
  4673     0055  020D               	subwf	13,w	;volatile
  4674     0056  1D03               	skipz
  4675     0057  285C               	goto	u203_25
  4676     0058  0140               	movlb	0	; select bank0
  4677     0059  0844               	movf	??_InterruptManager,w
  4678     005A  0144               	movlb	4	; select bank4
  4679     005B  020C               	subwf	12,w	;volatile
  4680     005C                     u203_25:
  4681     005C  1803               	skipnc
  4682     005D  285F               	goto	u203_21
  4683     005E  2860               	goto	u203_20
  4684     005F                     u203_21:
  4685     005F  286C               	goto	i1l2354
  4686     0060                     u203_20:
  4687     0060                     i1l2350:
  4688                           
  4689                           ;main.c: 309:                     CCPR2 = ig_counter;
  4690     0060  0140               	movlb	0	; select bank0
  4691     0061  084D               	movf	_ig_counter+1,w
  4692     0062  0146               	movlb	6	; select bank6
  4693     0063  0091               	movwf	17	;volatile
  4694     0064  0140               	movlb	0	; select bank0
  4695     0065  084C               	movf	_ig_counter,w
  4696     0066  0146               	movlb	6	; select bank6
  4697     0067  0090               	movwf	16	;volatile
  4698     0068                     i1l2352:
  4699                           
  4700                           ;main.c: 310:                     ccp2_enable();
  4701     0068  318C  2437  3180   	fcall	_ccp2_enable
  4702                           
  4703                           ;main.c: 311:                 } else {
  4704     006B  287C               	goto	i1l2366
  4705     006C                     i1l2354:
  4706                           
  4707                           ;main.c: 312:                     ccp2_disable();
  4708     006C  318C  2427  3180   	fcall	i1_ccp2_disable
  4709     006F                     i1l2356:
  4710                           
  4711                           ;main.c: 313:                     LATC1 = (1);
  4712     006F  0140               	movlb	0	; select bank0
  4713     0070  149A               	bsf	26,1	;volatile
  4714     0071                     i1l2358:
  4715                           
  4716                           ;main.c: 314:                     _delay((unsigned long)((60)*(32000000/4000000.0)));
  4717     0071  30A0               	movlw	160
  4718     0072                     u225_27:
  4719     0072  0B89               	decfsz	9,f
  4720     0073  2872               	goto	u225_27
  4721     0074                     i1l2360:
  4722                           
  4723                           ;main.c: 315:                     LATC1 = (0);
  4724     0074  0140               	movlb	0	; select bank0
  4725     0075  109A               	bcf	26,1	;volatile
  4726     0076  287C               	goto	i1l2366
  4727     0077                     i1l2362:
  4728                           
  4729                           ;main.c: 319:                 ccp2_disable();
  4730     0077  318C  2427  3180   	fcall	i1_ccp2_disable
  4731     007A                     i1l2364:
  4732                           
  4733                           ;main.c: 320:                 LATC2 = (0);
  4734     007A  0140               	movlb	0	; select bank0
  4735     007B  111A               	bcf	26,2	;volatile
  4736     007C                     i1l2366:
  4737                           
  4738                           ;main.c: 324:             if (revlimit_state == REVLIMIT_ENABLE) {
  4739     007C  0140               	movlb	0	; select bank0
  4740     007D  084F               	movf	_revlimit_state,w
  4741     007E  1D03               	btfss	3,2
  4742     007F  2881               	goto	u204_21
  4743     0080  2882               	goto	u204_20
  4744     0081                     u204_21:
  4745     0081  28AD               	goto	i1l2384
  4746     0082                     u204_20:
  4747     0082                     i1l2368:
  4748                           
  4749                           ;main.c: 325:                 if (rpm > (97)) {
  4750     0082  3062               	movlw	98
  4751     0083  0252               	subwf	_rpm,w
  4752     0084  1C03               	skipc
  4753     0085  2887               	goto	u205_21
  4754     0086  2888               	goto	u205_20
  4755     0087                     u205_21:
  4756     0087  2895               	goto	i1l2374
  4757     0088                     u205_20:
  4758     0088                     i1l2370:
  4759                           
  4760                           ;main.c: 326:                     orev_counter++;
  4761     0088  3001               	movlw	1
  4762     0089  00C4               	movwf	??_InterruptManager
  4763     008A  0844               	movf	??_InterruptManager,w
  4764     008B  07D1               	addwf	_orev_counter,f
  4765                           
  4766                           ;main.c: 327:                     if (orev_counter == 1) ignition_disable();
  4767     008C  0351               	decf	_orev_counter,w
  4768     008D  1D03               	btfss	3,2
  4769     008E  2890               	goto	u206_21
  4770     008F  2891               	goto	u206_20
  4771     0090                     u206_21:
  4772     0090  28AD               	goto	i1l2384
  4773     0091                     u206_20:
  4774     0091                     i1l2372:
  4775     0091  318C  2452  3180   	fcall	_ignition_disable
  4776     0094  28AD               	goto	i1l2384
  4777     0095                     i1l2374:
  4778     0095  3063               	movlw	99
  4779     0096  0252               	subwf	_rpm,w
  4780     0097  1C03               	skipc
  4781     0098  289A               	goto	u207_21
  4782     0099  289B               	goto	u207_20
  4783     009A                     u207_21:
  4784     009A  28A6               	goto	i1l2380
  4785     009B                     u207_20:
  4786     009B                     i1l2376:
  4787                           
  4788                           ;main.c: 329:                     orev_counter++;
  4789     009B  3001               	movlw	1
  4790     009C  00C4               	movwf	??_InterruptManager
  4791     009D  0844               	movf	??_InterruptManager,w
  4792     009E  07D1               	addwf	_orev_counter,f
  4793                           
  4794                           ;main.c: 330:                     if (orev_counter == 2) ignition_disable();
  4795     009F  3002               	movlw	2
  4796     00A0  0651               	xorwf	_orev_counter,w
  4797     00A1  1D03               	btfss	3,2
  4798     00A2  28A4               	goto	u208_21
  4799     00A3  28A5               	goto	u208_20
  4800     00A4                     u208_21:
  4801     00A4  28AD               	goto	i1l267
  4802     00A5                     u208_20:
  4803     00A5  2891               	goto	i1l2372
  4804     00A6                     i1l2380:
  4805     00A6  3064               	movlw	100
  4806     00A7  0252               	subwf	_rpm,w
  4807     00A8  1C03               	skipc
  4808     00A9  28AB               	goto	u209_21
  4809     00AA  28AC               	goto	u209_20
  4810     00AB                     u209_21:
  4811     00AB  28AD               	goto	i1l267
  4812     00AC                     u209_20:
  4813     00AC  2891               	goto	i1l2372
  4814     00AD                     i1l267:
  4815     00AD                     i1l2384:
  4816                           
  4817                           ;main.c: 335:             if (pwj_state == PWJ_ENABLE) {
  4818     00AD  0140               	movlb	0	; select bank0
  4819     00AE  084E               	movf	_pwj_state,w
  4820     00AF  1D03               	btfss	3,2
  4821     00B0  28B2               	goto	u210_21
  4822     00B1  28B3               	goto	u210_20
  4823     00B2                     u210_21:
  4824     00B2  28C3               	goto	i1l2394
  4825     00B3                     u210_20:
  4826     00B3                     i1l2386:
  4827                           
  4828                           ;main.c: 336:                 if (rpm > (85)) LATA0 = 1;
  4829     00B3  3056               	movlw	86
  4830     00B4  0252               	subwf	_rpm,w
  4831     00B5  1C03               	skipc
  4832     00B6  28B8               	goto	u211_21
  4833     00B7  28B9               	goto	u211_20
  4834     00B8                     u211_21:
  4835     00B8  28BB               	goto	i1l2390
  4836     00B9                     u211_20:
  4837     00B9                     i1l2388:
  4838     00B9  1418               	bsf	24,0	;volatile
  4839     00BA  28D6               	goto	i1l2404
  4840     00BB                     i1l2390:
  4841     00BB  3053               	movlw	83
  4842     00BC  0252               	subwf	_rpm,w
  4843     00BD  1803               	skipnc
  4844     00BE  28C0               	goto	u212_21
  4845     00BF  28C1               	goto	u212_20
  4846     00C0                     u212_21:
  4847     00C0  28D6               	goto	i1l276
  4848     00C1                     u212_20:
  4849     00C1                     i1l2392:
  4850     00C1  1018               	bcf	24,0	;volatile
  4851     00C2  28D6               	goto	i1l2404
  4852     00C3                     i1l2394:
  4853     00C3  034E               	decf	_pwj_state,w
  4854     00C4  1D03               	btfss	3,2
  4855     00C5  28C7               	goto	u213_21
  4856     00C6  28C8               	goto	u213_20
  4857     00C7                     u213_21:
  4858     00C7  28D6               	goto	i1l2404
  4859     00C8                     u213_20:
  4860     00C8                     i1l2396:
  4861                           
  4862                           ;main.c: 339:                 if (rpm > (30)) LATA0 = 1;
  4863     00C8  301F               	movlw	31
  4864     00C9  0252               	subwf	_rpm,w
  4865     00CA  1C03               	skipc
  4866     00CB  28CD               	goto	u214_21
  4867     00CC  28CE               	goto	u214_20
  4868     00CD                     u214_21:
  4869     00CD  28CF               	goto	i1l2400
  4870     00CE                     u214_20:
  4871     00CE  28B9               	goto	i1l2388
  4872     00CF                     i1l2400:
  4873     00CF  301C               	movlw	28
  4874     00D0  0252               	subwf	_rpm,w
  4875     00D1  1803               	skipnc
  4876     00D2  28D4               	goto	u215_21
  4877     00D3  28D5               	goto	u215_20
  4878     00D4                     u215_21:
  4879     00D4  28D6               	goto	i1l2404
  4880     00D5                     u215_20:
  4881     00D5  28C1               	goto	i1l2392
  4882     00D6                     i1l276:
  4883     00D6                     i1l2404:
  4884                           
  4885                           ;main.c: 344:         if (EG_state == EG_LOW) {
  4886     00D6  0850               	movf	_EG_state,w
  4887     00D7  1D03               	btfss	3,2
  4888     00D8  28DA               	goto	u216_21
  4889     00D9  28DB               	goto	u216_20
  4890     00DA                     u216_21:
  4891     00DA  28E2               	goto	i1l2412
  4892     00DB                     u216_20:
  4893     00DB                     i1l2406:
  4894                           
  4895                           ;main.c: 345:             TMR1 = 0;
  4896     00DB  0144               	movlb	4	; select bank4
  4897     00DC  018C               	clrf	12	;volatile
  4898     00DD  018D               	clrf	13	;volatile
  4899     00DE                     i1l2408:
  4900                           
  4901                           ;main.c: 346:             TMR1ON = 1;
  4902     00DE  140E               	bsf	14,0	;volatile
  4903     00DF                     i1l2410:
  4904                           
  4905                           ;main.c: 347:             EG_state = EG_RUN;
  4906     00DF  0140               	movlb	0	; select bank0
  4907     00E0  01D0               	clrf	_EG_state
  4908     00E1  0AD0               	incf	_EG_state,f
  4909     00E2                     i1l2412:
  4910                           
  4911                           ;main.c: 349:         CCP1IF = 0;
  4912     00E2  014E               	movlb	14	; select bank14
  4913     00E3  138D               	bcf	13,7	;volatile
  4914     00E4                     i1l2414:
  4915                           
  4916                           ;main.c: 352:     if (CCP2IF) {
  4917     00E4  1F8E               	btfss	14,7	;volatile
  4918     00E5  28E7               	goto	u217_21
  4919     00E6  28E8               	goto	u217_20
  4920     00E7                     u217_21:
  4921     00E7  28FD               	goto	i1l2426
  4922     00E8                     u217_20:
  4923     00E8                     i1l2416:
  4924                           
  4925                           ;main.c: 353:         _delay((unsigned long)((60)*(32000000/4000000.0)));
  4926     00E8  30A0               	movlw	160
  4927     00E9                     u226_27:
  4928     00E9  0B89               	decfsz	9,f
  4929     00EA  28E9               	goto	u226_27
  4930     00EB                     i1l2418:
  4931                           
  4932                           ;main.c: 354:         ccp2_disable();
  4933     00EB  318C  2427  3180   	fcall	i1_ccp2_disable
  4934     00EE                     i1l2420:
  4935                           
  4936                           ;main.c: 355:         LATC1 = 0;
  4937     00EE  0140               	movlb	0	; select bank0
  4938     00EF  109A               	bcf	26,1	;volatile
  4939                           
  4940                           ;main.c: 356:         ccp1_enable();
  4941     00F0  318C  2440  3180   	fcall	i1_ccp1_enable
  4942     00F3                     i1l2422:
  4943                           
  4944                           ;main.c: 357:         if (rpm < 30) calc_map();
  4945     00F3  301E               	movlw	30
  4946     00F4  0140               	movlb	0	; select bank0
  4947     00F5  0252               	subwf	_rpm,w
  4948     00F6  1803               	skipnc
  4949     00F7  28F9               	goto	u218_21
  4950     00F8  28FA               	goto	u218_20
  4951     00F9                     u218_21:
  4952     00F9  28FD               	goto	i1l2426
  4953     00FA                     u218_20:
  4954     00FA                     i1l2424:
  4955     00FA  3181  21A1  3180   	fcall	i1_calc_map
  4956     00FD                     i1l2426:
  4957                           
  4958                           ;main.c: 361:     if (IOCAF2) {
  4959     00FD  017E               	movlb	62	; select bank62
  4960     00FE  1D3F               	btfss	63,2	;volatile
  4961     00FF  2901               	goto	u219_21
  4962     0100  2902               	goto	u219_20
  4963     0101                     u219_21:
  4964     0101  293E               	goto	i1l2444
  4965     0102                     u219_20:
  4966     0102                     i1l2428:
  4967                           
  4968                           ;main.c: 362:         uint16_t pu1_2_period_count;;main.c: 363:         if (EG_state == 
      +                          EG_RUN) {
  4969     0102  0140               	movlb	0	; select bank0
  4970     0103  0350               	decf	_EG_state,w
  4971     0104  1D03               	btfss	3,2
  4972     0105  2907               	goto	u220_21
  4973     0106  2908               	goto	u220_20
  4974     0107                     u220_21:
  4975     0107  293C               	goto	i1l2442
  4976     0108                     u220_20:
  4977     0108                     i1l2430:
  4978                           
  4979                           ;main.c: 364:             pu1_2_period_count = TMR1;
  4980     0108  0144               	movlb	4	; select bank4
  4981     0109  080D               	movf	13,w	;volatile
  4982     010A  0140               	movlb	0	; select bank0
  4983     010B  00CB               	movwf	InterruptManager@pu1_2_period_count+1
  4984     010C  0144               	movlb	4	; select bank4
  4985     010D  080C               	movf	12,w	;volatile
  4986     010E  0140               	movlb	0	; select bank0
  4987     010F  00CA               	movwf	InterruptManager@pu1_2_period_count
  4988                           
  4989                           ;main.c: 365:             if ((rpm < 25)&&((t1_count - pu1_2_period_count)<(pu1_2_period
      +                          _count << 2))) {
  4990     0110  3019               	movlw	25
  4991     0111  0252               	subwf	_rpm,w
  4992     0112  1803               	skipnc
  4993     0113  2915               	goto	u221_21
  4994     0114  2916               	goto	u221_20
  4995     0115                     u221_21:
  4996     0115  292F               	goto	i1l2436
  4997     0116                     u221_20:
  4998     0116                     i1l2432:
  4999     0116  084B               	movf	InterruptManager@pu1_2_period_count+1,w
  5000     0117  00C5               	movwf	??_InterruptManager+1
  5001     0118  084A               	movf	InterruptManager@pu1_2_period_count,w
  5002     0119  00C4               	movwf	??_InterruptManager
  5003     011A  35C4               	lslf	??_InterruptManager,f
  5004     011B  0DC5               	rlf	??_InterruptManager+1,f
  5005     011C  35C4               	lslf	??_InterruptManager,f
  5006     011D  0DC5               	rlf	??_InterruptManager+1,f
  5007     011E  084A               	movf	InterruptManager@pu1_2_period_count,w
  5008     011F  0248               	subwf	InterruptManager@t1_count,w
  5009     0120  00C6               	movwf	??_InterruptManager+2
  5010     0121  084B               	movf	InterruptManager@pu1_2_period_count+1,w
  5011     0122  3B49               	subwfb	InterruptManager@t1_count+1,w
  5012     0123  00C7               	movwf	??_InterruptManager+3
  5013     0124  0845               	movf	??_InterruptManager+1,w
  5014     0125  0247               	subwf	??_InterruptManager+3,w
  5015     0126  1D03               	skipz
  5016     0127  292A               	goto	u222_25
  5017     0128  0844               	movf	??_InterruptManager,w
  5018     0129  0246               	subwf	??_InterruptManager+2,w
  5019     012A                     u222_25:
  5020     012A  1803               	skipnc
  5021     012B  292D               	goto	u222_21
  5022     012C  292E               	goto	u222_20
  5023     012D                     u222_21:
  5024     012D  292F               	goto	i1l2436
  5025     012E                     u222_20:
  5026     012E                     i1l2434:
  5027                           
  5028                           ;main.c: 366:                 LATC2 = (1);
  5029     012E  151A               	bsf	26,2	;volatile
  5030     012F                     i1l2436:
  5031                           
  5032                           ;main.c: 368:             ccp1_enable();
  5033     012F  318C  2440  3180   	fcall	i1_ccp1_enable
  5034     0132                     i1l2438:
  5035                           
  5036                           ;main.c: 369:             if (rpm < 40) calc_map();
  5037     0132  3028               	movlw	40
  5038     0133  0140               	movlb	0	; select bank0
  5039     0134  0252               	subwf	_rpm,w
  5040     0135  1803               	skipnc
  5041     0136  2938               	goto	u223_21
  5042     0137  2939               	goto	u223_20
  5043     0138                     u223_21:
  5044     0138  293C               	goto	i1l2442
  5045     0139                     u223_20:
  5046     0139                     i1l2440:
  5047     0139  3181  21A1  3180   	fcall	i1_calc_map
  5048     013C                     i1l2442:
  5049                           
  5050                           ;main.c: 371:         IOCAF2 = 0;
  5051     013C  017E               	movlb	62	; select bank62
  5052     013D  113F               	bcf	63,2	;volatile
  5053     013E                     i1l2444:
  5054                           
  5055                           ;main.c: 374:     if (TMR1IF) {
  5056     013E  014E               	movlb	14	; select bank14
  5057     013F  1E8D               	btfss	13,5	;volatile
  5058     0140  2942               	goto	u224_21
  5059     0141  2943               	goto	u224_20
  5060     0142                     u224_21:
  5061     0142  2957               	goto	i1l288
  5062     0143                     u224_20:
  5063     0143                     i1l2446:
  5064                           
  5065                           ;main.c: 375:         EG_state = EG_LOW;
  5066     0143  0140               	movlb	0	; select bank0
  5067     0144  01D0               	clrf	_EG_state
  5068     0145                     i1l2448:
  5069                           
  5070                           ;main.c: 376:         TMR1ON = 0;
  5071     0145  0144               	movlb	4	; select bank4
  5072     0146  100E               	bcf	14,0	;volatile
  5073                           
  5074                           ;main.c: 377:         TMR1 = 0;
  5075     0147  018C               	clrf	12	;volatile
  5076     0148  018D               	clrf	13	;volatile
  5077                           
  5078                           ;main.c: 378:         CCPR1 = 0;
  5079     0149  0146               	movlb	6	; select bank6
  5080     014A  018C               	clrf	12	;volatile
  5081     014B  018D               	clrf	13	;volatile
  5082                           
  5083                           ;main.c: 379:         CCPR2 = 0;
  5084     014C  0190               	clrf	16	;volatile
  5085     014D  0191               	clrf	17	;volatile
  5086     014E                     i1l2450:
  5087                           
  5088                           ;main.c: 380:         TMR1IF = 0;
  5089     014E  014E               	movlb	14	; select bank14
  5090     014F  128D               	bcf	13,5	;volatile
  5091     0150                     i1l2452:
  5092                           
  5093                           ;main.c: 381:         LATA0 = 0;
  5094     0150  0140               	movlb	0	; select bank0
  5095     0151  1018               	bcf	24,0	;volatile
  5096     0152                     i1l2454:
  5097                           
  5098                           ;main.c: 382:         ccp2_disable();
  5099     0152  318C  2427  3180   	fcall	i1_ccp2_disable
  5100     0155                     i1l2456:
  5101                           
  5102                           ;main.c: 383:         LATC1 = 0;
  5103     0155  0140               	movlb	0	; select bank0
  5104     0156  109A               	bcf	26,1	;volatile
  5105     0157                     i1l288:	
  5106                           ;main.c: 384:     }
  5107                           
  5108     0157  0064               	clrwdt	;# 
  5109     0158                     i1l289:
  5110     0158  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5111     0159  0009               	retfie
  5112     015A                     __end_of_InterruptManager:
  5113                           
  5114                           	psect	text21
  5115     01A1                     __ptext21:	
  5116 ;; *************** function i1_calc_map *****************
  5117 ;; Defined at:
  5118 ;;		line 212 in file "main.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  temp1           3   18[BANK0 ] unsigned um
  5123 ;;  temp            3   15[BANK0 ] unsigned um
  5124 ;;  p4y             2   29[BANK0 ] unsigned short 
  5125 ;;  p3y             2   27[BANK0 ] unsigned short 
  5126 ;;  p2y             2   25[BANK0 ] unsigned short 
  5127 ;;  p1y             2   23[BANK0 ] unsigned short 
  5128 ;;  a               1   35[BANK0 ] unsigned char 
  5129 ;;  p4x             1   34[BANK0 ] unsigned char 
  5130 ;;  p3x             1   33[BANK0 ] unsigned char 
  5131 ;;  p2x             1   32[BANK0 ] unsigned char 
  5132 ;;  p1x             1   31[BANK0 ] unsigned char 
  5133 ;;  coeff_p3_p4     1   22[BANK0 ] unsigned char 
  5134 ;;  coeff_p1_p2     1   21[BANK0 ] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;Total ram usage:       33 bytes
  5149 ;; Hardware stack levels used: 1
  5150 ;; Hardware stack levels required when called: 1
  5151 ;; This function calls:
  5152 ;;		i1___lwdiv
  5153 ;;		i1___tmul
  5154 ;;		i1___wmul
  5155 ;; This function is called by:
  5156 ;;		_InterruptManager
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160     01A1                     i1_calc_map:	
  5161                           ;psect for function i1_calc_map
  5162                           
  5163     01A1                     i1l2226:	
  5164                           ;incstack = 0
  5165                           ; Regs used in i1_calc_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5166                           
  5167                           
  5168                           ;main.c: 213:     uint8_t p1x, p2x, p3x, p4x;;main.c: 214:     uint16_t p1y, p2y, p3y, p
      +                          4y;;main.c: 215:     uint8_t coeff_p1_p2, coeff_p3_p4;;main.c: 216:     uint8_t a;;main.
      +                          c: 217:     uint24_t temp;;main.c: 218:     uint24_t temp1;;main.c: 220:     p1x = adv_s
      +                          tart_rpm_table[sw1_pos];
  5169     01A1  0141               	movlb	1	; select bank1
  5170     01A2  085B               	movf	_sw1_pos^(0+128),w
  5171     01A3  3E19               	addlw	low (_adv_start_rpm_table| (0+32768))
  5172     01A4  0084               	movwf	4
  5173     01A5  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  5174     01A6  1803               	skipnc
  5175     01A7  3E01               	addlw	1
  5176     01A8  0085               	movwf	5
  5177     01A9  0800               	movf	0,w	;code access
  5178     01AA  0140               	movlb	0	; select bank0
  5179     01AB  00BF               	movwf	i1calc_map@p1x
  5180     01AC                     i1l2228:
  5181                           
  5182                           ;main.c: 221:     p2x = adv_start_rpm_table[sw1_pos] + max_adv_grad_table[sw3_pos];
  5183     01AC  0141               	movlb	1	; select bank1
  5184     01AD  0859               	movf	_sw3_pos^(0+128),w
  5185     01AE  3E15               	addlw	low (_max_adv_grad_table| (0+32768))
  5186     01AF  0084               	movwf	4
  5187     01B0  3090               	movlw	high (_max_adv_grad_table| (0+32768))
  5188     01B1  1803               	skipnc
  5189     01B2  3E01               	addlw	1
  5190     01B3  0085               	movwf	5
  5191     01B4  0800               	movf	0,w	;code access
  5192     01B5  0140               	movlb	0	; select bank0
  5193     01B6  00A3               	movwf	??i1_calc_map
  5194     01B7  0141               	movlb	1	; select bank1
  5195     01B8  085B               	movf	_sw1_pos^(0+128),w
  5196     01B9  3E19               	addlw	low (_adv_start_rpm_table| (0+32768))
  5197     01BA  0084               	movwf	4
  5198     01BB  3090               	movlw	high (_adv_start_rpm_table| (0+32768))
  5199     01BC  1803               	skipnc
  5200     01BD  3E01               	addlw	1
  5201     01BE  0085               	movwf	5
  5202     01BF  0800               	movf	0,w	;code access
  5203     01C0  0140               	movlb	0	; select bank0
  5204     01C1  0723               	addwf	??i1_calc_map,w
  5205     01C2  00C0               	movwf	i1calc_map@p2x
  5206     01C3                     i1l2230:
  5207                           
  5208                           ;main.c: 222:     p3x = (55);
  5209     01C3  3037               	movlw	55
  5210     01C4  00C1               	movwf	i1calc_map@p3x
  5211     01C5                     i1l2232:
  5212                           
  5213                           ;main.c: 223:     p4x = (80);
  5214     01C5  3050               	movlw	80
  5215     01C6  00C2               	movwf	i1calc_map@p4x
  5216     01C7                     i1l2234:
  5217                           
  5218                           ;main.c: 224:     p1y = (500);
  5219     01C7  30F4               	movlw	244
  5220     01C8  00B7               	movwf	i1calc_map@p1y
  5221     01C9  3001               	movlw	1
  5222     01CA  00B8               	movwf	i1calc_map@p1y+1
  5223     01CB                     i1l2236:
  5224                           
  5225                           ;main.c: 225:     p2y = max_adv_table[sw2_pos];
  5226     01CB  0141               	movlb	1	; select bank1
  5227     01CC  085A               	movf	_sw2_pos^(0+128),w
  5228     01CD  0140               	movlb	0	; select bank0
  5229     01CE  00A3               	movwf	??i1_calc_map
  5230     01CF  01A4               	clrf	??i1_calc_map+1
  5231     01D0  35A3               	lslf	??i1_calc_map,f
  5232     01D1  0DA4               	rlf	??i1_calc_map+1,f
  5233     01D2  3008               	movlw	low _max_adv_table
  5234     01D3  0723               	addwf	??i1_calc_map,w
  5235     01D4  0084               	movwf	4
  5236     01D5  3010               	movlw	high _max_adv_table
  5237     01D6  3D24               	addwfc	??i1_calc_map+1,w
  5238     01D7  3880               	iorlw	128
  5239     01D8  0085               	movwf	5
  5240     01D9  3F00               	moviw [0]fsr0
  5241     01DA  00B9               	movwf	i1calc_map@p2y
  5242     01DB  3F01               	moviw [1]fsr0
  5243     01DC  00BA               	movwf	i1calc_map@p2y+1
  5244     01DD                     i1l2238:
  5245                           
  5246                           ;main.c: 226:     p3y = p2y;
  5247     01DD  083A               	movf	i1calc_map@p2y+1,w
  5248     01DE  00BC               	movwf	i1calc_map@p3y+1
  5249     01DF  0839               	movf	i1calc_map@p2y,w
  5250     01E0  00BB               	movwf	i1calc_map@p3y
  5251     01E1                     i1l2240:
  5252                           
  5253                           ;main.c: 227:     p4y = min_ret_table[sw4_pos];
  5254     01E1  0141               	movlb	1	; select bank1
  5255     01E2  0858               	movf	_sw4_pos^(0+128),w
  5256     01E3  0140               	movlb	0	; select bank0
  5257     01E4  00A3               	movwf	??i1_calc_map
  5258     01E5  01A4               	clrf	??i1_calc_map+1
  5259     01E6  35A3               	lslf	??i1_calc_map,f
  5260     01E7  0DA4               	rlf	??i1_calc_map+1,f
  5261     01E8  3000               	movlw	low _min_ret_table
  5262     01E9  0723               	addwf	??i1_calc_map,w
  5263     01EA  0084               	movwf	4
  5264     01EB  3010               	movlw	high _min_ret_table
  5265     01EC  3D24               	addwfc	??i1_calc_map+1,w
  5266     01ED  3880               	iorlw	128
  5267     01EE  0085               	movwf	5
  5268     01EF  3F00               	moviw [0]fsr0
  5269     01F0  00BD               	movwf	i1calc_map@p4y
  5270     01F1  3F01               	moviw [1]fsr0
  5271     01F2  00BE               	movwf	i1calc_map@p4y+1
  5272     01F3                     i1l2242:
  5273                           
  5274                           ;main.c: 228:     coeff_p1_p2 = (uint8_t) ((p2y - p1y) / (p2x - p1x));
  5275     01F3  083F               	movf	i1calc_map@p1x,w
  5276     01F4  0240               	subwf	i1calc_map@p2x,w
  5277     01F5  00F0               	movwf	i1___lwdiv@divisor
  5278     01F6  01F1               	clrf	i1___lwdiv@divisor+1
  5279     01F7  1C03               	skipc
  5280     01F8  03F1               	decf	i1___lwdiv@divisor+1,f
  5281     01F9  0839               	movf	i1calc_map@p2y,w
  5282     01FA  3E0C               	addlw	12
  5283     01FB  00F2               	movwf	i1___lwdiv@dividend
  5284     01FC  30FE               	movlw	254
  5285     01FD  3D3A               	addwfc	i1calc_map@p2y+1,w
  5286     01FE  00F3               	movwf	i1___lwdiv@dividend+1
  5287     01FF  318D  259B  3181   	fcall	i1___lwdiv
  5288     0202  0870               	movf	?i1___lwdiv,w
  5289     0203  0140               	movlb	0	; select bank0
  5290     0204  00B5               	movwf	i1calc_map@coeff_p1_p2
  5291     0205                     i1l2244:
  5292                           
  5293                           ;main.c: 229:     coeff_p3_p4 = (uint8_t) ((p3y - p4y) / (p4x - p3x));
  5294     0205  3019               	movlw	25
  5295     0206  00F0               	movwf	i1___lwdiv@divisor
  5296     0207  3000               	movlw	0
  5297     0208  00F1               	movwf	i1___lwdiv@divisor+1
  5298     0209  083D               	movf	i1calc_map@p4y,w
  5299     020A  023B               	subwf	i1calc_map@p3y,w
  5300     020B  00F2               	movwf	i1___lwdiv@dividend
  5301     020C  083E               	movf	i1calc_map@p4y+1,w
  5302     020D  3B3C               	subwfb	i1calc_map@p3y+1,w
  5303     020E  00F3               	movwf	i1___lwdiv@dividend+1
  5304     020F  318D  259B  3181   	fcall	i1___lwdiv
  5305     0212  0870               	movf	?i1___lwdiv,w
  5306     0213  0140               	movlb	0	; select bank0
  5307     0214  00B6               	movwf	i1calc_map@coeff_p3_p4
  5308     0215                     i1l2246:
  5309                           
  5310                           ;main.c: 232:     for (a = 15; a <= p1x; a++) {
  5311     0215  300F               	movlw	15
  5312     0216  00C3               	movwf	i1calc_map@a
  5313     0217  2A2F               	goto	i1l2252
  5314     0218                     i1l2248:
  5315                           
  5316                           ;main.c: 233:         IG_table[a] = p1y;
  5317     0218  0843               	movf	i1calc_map@a,w
  5318     0219  00A3               	movwf	??i1_calc_map
  5319     021A  01A4               	clrf	??i1_calc_map+1
  5320     021B  35A3               	lslf	??i1_calc_map,f
  5321     021C  0DA4               	rlf	??i1_calc_map+1,f
  5322     021D  3067               	movlw	103
  5323     021E  00A5               	movwf	??i1_calc_map+2
  5324     021F  3022               	movlw	34
  5325     0220  00A6               	movwf	??i1_calc_map+3
  5326     0221  0823               	movf	??i1_calc_map,w
  5327     0222  0725               	addwf	??i1_calc_map+2,w
  5328     0223  0086               	movwf	6
  5329     0224  0824               	movf	??i1_calc_map+1,w
  5330     0225  3D26               	addwfc	??i1_calc_map+3,w
  5331     0226  0087               	movwf	7
  5332     0227  0837               	movf	i1calc_map@p1y,w
  5333     0228  3FC0               	movwi [0]fsr1
  5334     0229  0838               	movf	i1calc_map@p1y+1,w
  5335     022A  3FC1               	movwi [1]fsr1
  5336     022B                     i1l2250:
  5337                           
  5338                           ;main.c: 234:     }
  5339     022B  3001               	movlw	1
  5340     022C  00A3               	movwf	??i1_calc_map
  5341     022D  0823               	movf	??i1_calc_map,w
  5342     022E  07C3               	addwf	i1calc_map@a,f
  5343     022F                     i1l2252:
  5344     022F  0843               	movf	i1calc_map@a,w
  5345     0230  023F               	subwf	i1calc_map@p1x,w
  5346     0231  1803               	skipnc
  5347     0232  2A34               	goto	u191_21
  5348     0233  2A35               	goto	u191_20
  5349     0234                     u191_21:
  5350     0234  2A18               	goto	i1l2248
  5351     0235                     u191_20:
  5352     0235                     i1l2254:
  5353                           
  5354                           ;main.c: 235:     for (a = p1x + 1; a <= p2x; a++) {
  5355     0235  083F               	movf	i1calc_map@p1x,w
  5356     0236  3E01               	addlw	1
  5357     0237  00C3               	movwf	i1calc_map@a
  5358     0238  2A6A               	goto	i1l2260
  5359     0239                     i1l2256:
  5360                           
  5361                           ;main.c: 236:         IG_table[a] = coeff_p1_p2 + IG_table[a - 1];
  5362     0239  0843               	movf	i1calc_map@a,w
  5363     023A  00A3               	movwf	??i1_calc_map
  5364     023B  01A4               	clrf	??i1_calc_map+1
  5365     023C  35A3               	lslf	??i1_calc_map,f
  5366     023D  0DA4               	rlf	??i1_calc_map+1,f
  5367     023E  3065               	movlw	101
  5368     023F  00A5               	movwf	??i1_calc_map+2
  5369     0240  3022               	movlw	34
  5370     0241  00A6               	movwf	??i1_calc_map+3
  5371     0242  0823               	movf	??i1_calc_map,w
  5372     0243  0725               	addwf	??i1_calc_map+2,w
  5373     0244  0086               	movwf	6
  5374     0245  0824               	movf	??i1_calc_map+1,w
  5375     0246  3D26               	addwfc	??i1_calc_map+3,w
  5376     0247  0087               	movwf	7
  5377     0248  3F40               	moviw [0]fsr1
  5378     0249  00A7               	movwf	??i1_calc_map+4
  5379     024A  3F41               	moviw [1]fsr1
  5380     024B  00A8               	movwf	??i1_calc_map+5
  5381     024C  0835               	movf	i1calc_map@coeff_p1_p2,w
  5382     024D  0727               	addwf	??i1_calc_map+4,w
  5383     024E  00A9               	movwf	??i1_calc_map+6
  5384     024F  0828               	movf	??i1_calc_map+5,w
  5385     0250  1803               	skipnc
  5386     0251  0A28               	incf	??i1_calc_map+5,w
  5387     0252  00AA               	movwf	??i1_calc_map+7
  5388     0253  0843               	movf	i1calc_map@a,w
  5389     0254  00AB               	movwf	??i1_calc_map+8
  5390     0255  01AC               	clrf	??i1_calc_map+9
  5391     0256  35AB               	lslf	??i1_calc_map+8,f
  5392     0257  0DAC               	rlf	??i1_calc_map+9,f
  5393     0258  3067               	movlw	103
  5394     0259  00AD               	movwf	??i1_calc_map+10
  5395     025A  3022               	movlw	34
  5396     025B  00AE               	movwf	??i1_calc_map+11
  5397     025C  082B               	movf	??i1_calc_map+8,w
  5398     025D  072D               	addwf	??i1_calc_map+10,w
  5399     025E  0086               	movwf	6
  5400     025F  082C               	movf	??i1_calc_map+9,w
  5401     0260  3D2E               	addwfc	??i1_calc_map+11,w
  5402     0261  0087               	movwf	7
  5403     0262  0829               	movf	??i1_calc_map+6,w
  5404     0263  3FC0               	movwi [0]fsr1
  5405     0264  082A               	movf	??i1_calc_map+7,w
  5406     0265  3FC1               	movwi [1]fsr1
  5407     0266                     i1l2258:
  5408                           
  5409                           ;main.c: 237:     }
  5410     0266  3001               	movlw	1
  5411     0267  00A3               	movwf	??i1_calc_map
  5412     0268  0823               	movf	??i1_calc_map,w
  5413     0269  07C3               	addwf	i1calc_map@a,f
  5414     026A                     i1l2260:
  5415     026A  0843               	movf	i1calc_map@a,w
  5416     026B  0240               	subwf	i1calc_map@p2x,w
  5417     026C  1803               	skipnc
  5418     026D  2A6F               	goto	u192_21
  5419     026E  2A70               	goto	u192_20
  5420     026F                     u192_21:
  5421     026F  2A39               	goto	i1l2256
  5422     0270                     u192_20:
  5423     0270                     i1l2262:
  5424                           
  5425                           ;main.c: 238:     for (a = p2x + 1; a <= p3x; a++) {
  5426     0270  0840               	movf	i1calc_map@p2x,w
  5427     0271  3E01               	addlw	1
  5428     0272  00C3               	movwf	i1calc_map@a
  5429     0273  2A8B               	goto	i1l2268
  5430     0274                     i1l2264:
  5431                           
  5432                           ;main.c: 239:         IG_table[a] = p3y;
  5433     0274  0843               	movf	i1calc_map@a,w
  5434     0275  00A3               	movwf	??i1_calc_map
  5435     0276  01A4               	clrf	??i1_calc_map+1
  5436     0277  35A3               	lslf	??i1_calc_map,f
  5437     0278  0DA4               	rlf	??i1_calc_map+1,f
  5438     0279  3067               	movlw	103
  5439     027A  00A5               	movwf	??i1_calc_map+2
  5440     027B  3022               	movlw	34
  5441     027C  00A6               	movwf	??i1_calc_map+3
  5442     027D  0823               	movf	??i1_calc_map,w
  5443     027E  0725               	addwf	??i1_calc_map+2,w
  5444     027F  0086               	movwf	6
  5445     0280  0824               	movf	??i1_calc_map+1,w
  5446     0281  3D26               	addwfc	??i1_calc_map+3,w
  5447     0282  0087               	movwf	7
  5448     0283  083B               	movf	i1calc_map@p3y,w
  5449     0284  3FC0               	movwi [0]fsr1
  5450     0285  083C               	movf	i1calc_map@p3y+1,w
  5451     0286  3FC1               	movwi [1]fsr1
  5452     0287                     i1l2266:
  5453                           
  5454                           ;main.c: 240:     }
  5455     0287  3001               	movlw	1
  5456     0288  00A3               	movwf	??i1_calc_map
  5457     0289  0823               	movf	??i1_calc_map,w
  5458     028A  07C3               	addwf	i1calc_map@a,f
  5459     028B                     i1l2268:
  5460     028B  0843               	movf	i1calc_map@a,w
  5461     028C  0241               	subwf	i1calc_map@p3x,w
  5462     028D  1803               	skipnc
  5463     028E  2A90               	goto	u193_21
  5464     028F  2A91               	goto	u193_20
  5465     0290                     u193_21:
  5466     0290  2A74               	goto	i1l2264
  5467     0291                     u193_20:
  5468     0291                     i1l2270:
  5469                           
  5470                           ;main.c: 241:     for (a = p3x + 1; a <= p4x; a++) {
  5471     0291  0841               	movf	i1calc_map@p3x,w
  5472     0292  3E01               	addlw	1
  5473     0293  00C3               	movwf	i1calc_map@a
  5474     0294  2AC6               	goto	i1l2276
  5475     0295                     i1l2272:
  5476                           
  5477                           ;main.c: 242:         IG_table[a] = IG_table[a - 1] - coeff_p3_p4;
  5478     0295  0843               	movf	i1calc_map@a,w
  5479     0296  00A3               	movwf	??i1_calc_map
  5480     0297  01A4               	clrf	??i1_calc_map+1
  5481     0298  35A3               	lslf	??i1_calc_map,f
  5482     0299  0DA4               	rlf	??i1_calc_map+1,f
  5483     029A  3065               	movlw	101
  5484     029B  00A5               	movwf	??i1_calc_map+2
  5485     029C  3022               	movlw	34
  5486     029D  00A6               	movwf	??i1_calc_map+3
  5487     029E  0823               	movf	??i1_calc_map,w
  5488     029F  0725               	addwf	??i1_calc_map+2,w
  5489     02A0  0086               	movwf	6
  5490     02A1  0824               	movf	??i1_calc_map+1,w
  5491     02A2  3D26               	addwfc	??i1_calc_map+3,w
  5492     02A3  0087               	movwf	7
  5493     02A4  3F40               	moviw [0]fsr1
  5494     02A5  00A7               	movwf	??i1_calc_map+4
  5495     02A6  3F41               	moviw [1]fsr1
  5496     02A7  00A8               	movwf	??i1_calc_map+5
  5497     02A8  0828               	movf	??i1_calc_map+5,w
  5498     02A9  00AA               	movwf	??i1_calc_map+7
  5499     02AA  0836               	movf	i1calc_map@coeff_p3_p4,w
  5500     02AB  0227               	subwf	??i1_calc_map+4,w
  5501     02AC  00A9               	movwf	??i1_calc_map+6
  5502     02AD  1C03               	skipc
  5503     02AE  03AA               	decf	??i1_calc_map+7,f
  5504     02AF  0843               	movf	i1calc_map@a,w
  5505     02B0  00AB               	movwf	??i1_calc_map+8
  5506     02B1  01AC               	clrf	??i1_calc_map+9
  5507     02B2  35AB               	lslf	??i1_calc_map+8,f
  5508     02B3  0DAC               	rlf	??i1_calc_map+9,f
  5509     02B4  3067               	movlw	103
  5510     02B5  00AD               	movwf	??i1_calc_map+10
  5511     02B6  3022               	movlw	34
  5512     02B7  00AE               	movwf	??i1_calc_map+11
  5513     02B8  082B               	movf	??i1_calc_map+8,w
  5514     02B9  072D               	addwf	??i1_calc_map+10,w
  5515     02BA  0086               	movwf	6
  5516     02BB  082C               	movf	??i1_calc_map+9,w
  5517     02BC  3D2E               	addwfc	??i1_calc_map+11,w
  5518     02BD  0087               	movwf	7
  5519     02BE  0829               	movf	??i1_calc_map+6,w
  5520     02BF  3FC0               	movwi [0]fsr1
  5521     02C0  082A               	movf	??i1_calc_map+7,w
  5522     02C1  3FC1               	movwi [1]fsr1
  5523     02C2                     i1l2274:
  5524                           
  5525                           ;main.c: 243:     }
  5526     02C2  3001               	movlw	1
  5527     02C3  00A3               	movwf	??i1_calc_map
  5528     02C4  0823               	movf	??i1_calc_map,w
  5529     02C5  07C3               	addwf	i1calc_map@a,f
  5530     02C6                     i1l2276:
  5531     02C6  0843               	movf	i1calc_map@a,w
  5532     02C7  0242               	subwf	i1calc_map@p4x,w
  5533     02C8  1803               	skipnc
  5534     02C9  2ACB               	goto	u194_21
  5535     02CA  2ACC               	goto	u194_20
  5536     02CB                     u194_21:
  5537     02CB  2A95               	goto	i1l2272
  5538     02CC                     u194_20:
  5539     02CC                     i1l2278:
  5540                           
  5541                           ;main.c: 244:     for (a = p4x + 1; a <= 130; a++) {
  5542     02CC  0842               	movf	i1calc_map@p4x,w
  5543     02CD  3E01               	addlw	1
  5544     02CE  00C3               	movwf	i1calc_map@a
  5545     02CF                     i1l2280:
  5546     02CF  3083               	movlw	131
  5547     02D0  0243               	subwf	i1calc_map@a,w
  5548     02D1  1C03               	skipc
  5549     02D2  2AD4               	goto	u195_21
  5550     02D3  2AD5               	goto	u195_20
  5551     02D4                     u195_21:
  5552     02D4  2AD6               	goto	i1l2284
  5553     02D5                     u195_20:
  5554     02D5  2AEE               	goto	i1l2290
  5555     02D6                     i1l2284:
  5556                           
  5557                           ;main.c: 245:         IG_table[a] = p4y;
  5558     02D6  0843               	movf	i1calc_map@a,w
  5559     02D7  00A3               	movwf	??i1_calc_map
  5560     02D8  01A4               	clrf	??i1_calc_map+1
  5561     02D9  35A3               	lslf	??i1_calc_map,f
  5562     02DA  0DA4               	rlf	??i1_calc_map+1,f
  5563     02DB  3067               	movlw	103
  5564     02DC  00A5               	movwf	??i1_calc_map+2
  5565     02DD  3022               	movlw	34
  5566     02DE  00A6               	movwf	??i1_calc_map+3
  5567     02DF  0823               	movf	??i1_calc_map,w
  5568     02E0  0725               	addwf	??i1_calc_map+2,w
  5569     02E1  0086               	movwf	6
  5570     02E2  0824               	movf	??i1_calc_map+1,w
  5571     02E3  3D26               	addwfc	??i1_calc_map+3,w
  5572     02E4  0087               	movwf	7
  5573     02E5  083D               	movf	i1calc_map@p4y,w
  5574     02E6  3FC0               	movwi [0]fsr1
  5575     02E7  083E               	movf	i1calc_map@p4y+1,w
  5576     02E8  3FC1               	movwi [1]fsr1
  5577     02E9                     i1l2286:
  5578                           
  5579                           ;main.c: 246:     }
  5580     02E9  3001               	movlw	1
  5581     02EA  00A3               	movwf	??i1_calc_map
  5582     02EB  0823               	movf	??i1_calc_map,w
  5583     02EC  07C3               	addwf	i1calc_map@a,f
  5584     02ED  2ACF               	goto	i1l2280
  5585     02EE                     i1l2290:
  5586                           
  5587                           ;main.c: 248:     for (a = 15; a <= 130; a++) {
  5588     02EE  300F               	movlw	15
  5589     02EF  00C3               	movwf	i1calc_map@a
  5590     02F0                     i1l2294:
  5591                           
  5592                           ;main.c: 249:         deg_table[a] = (uint8_t) (IG_table[a] / 100);
  5593     02F0  3064               	movlw	100
  5594     02F1  00F0               	movwf	i1___lwdiv@divisor
  5595     02F2  3000               	movlw	0
  5596     02F3  00F1               	movwf	i1___lwdiv@divisor+1
  5597     02F4  0843               	movf	i1calc_map@a,w
  5598     02F5  00A3               	movwf	??i1_calc_map
  5599     02F6  01A4               	clrf	??i1_calc_map+1
  5600     02F7  35A3               	lslf	??i1_calc_map,f
  5601     02F8  0DA4               	rlf	??i1_calc_map+1,f
  5602     02F9  3067               	movlw	103
  5603     02FA  00A5               	movwf	??i1_calc_map+2
  5604     02FB  3022               	movlw	34
  5605     02FC  00A6               	movwf	??i1_calc_map+3
  5606     02FD  0823               	movf	??i1_calc_map,w
  5607     02FE  0725               	addwf	??i1_calc_map+2,w
  5608     02FF  0086               	movwf	6
  5609     0300  0824               	movf	??i1_calc_map+1,w
  5610     0301  3D26               	addwfc	??i1_calc_map+3,w
  5611     0302  0087               	movwf	7
  5612     0303  3F40               	moviw [0]fsr1
  5613     0304  00F2               	movwf	i1___lwdiv@dividend
  5614     0305  3F41               	moviw [1]fsr1
  5615     0306  00F3               	movwf	i1___lwdiv@dividend+1
  5616     0307  318D  259B  3181   	fcall	i1___lwdiv
  5617     030A  0870               	movf	?i1___lwdiv,w
  5618     030B  0140               	movlb	0	; select bank0
  5619     030C  00A7               	movwf	??i1_calc_map+4
  5620     030D  0843               	movf	i1calc_map@a,w
  5621     030E  3E6D               	addlw	109
  5622     030F  00A8               	movwf	??i1_calc_map+5
  5623     0310  01A9               	clrf	??i1_calc_map+6
  5624     0311  3023               	movlw	35
  5625     0312  3DA9               	addwfc	??i1_calc_map+6,f
  5626     0313  0828               	movf	??i1_calc_map+5,w
  5627     0314  0086               	movwf	6
  5628     0315  0829               	movf	??i1_calc_map+6,w
  5629     0316  0087               	movwf	7
  5630     0317  0827               	movf	??i1_calc_map+4,w
  5631     0318  0081               	movwf	1
  5632     0319                     i1l2296:
  5633                           
  5634                           ;main.c: 250:     }
  5635     0319  3001               	movlw	1
  5636     031A  00A3               	movwf	??i1_calc_map
  5637     031B  0823               	movf	??i1_calc_map,w
  5638     031C  07C3               	addwf	i1calc_map@a,f
  5639     031D                     i1l2298:
  5640     031D  3083               	movlw	131
  5641     031E  0243               	subwf	i1calc_map@a,w
  5642     031F  1C03               	skipc
  5643     0320  2B22               	goto	u196_21
  5644     0321  2B23               	goto	u196_20
  5645     0322                     u196_21:
  5646     0322  2AF0               	goto	i1l2294
  5647     0323                     u196_20:
  5648     0323                     i1l2300:
  5649                           
  5650                           ;main.c: 252:     for (a = 15; a <= 130; a++) {
  5651     0323  300F               	movlw	15
  5652     0324  00C3               	movwf	i1calc_map@a
  5653     0325                     i1l2304:
  5654                           
  5655                           ;main.c: 253:         temp1 = (((3500) - IG_table[a]) >> 1);
  5656     0325  0843               	movf	i1calc_map@a,w
  5657     0326  00A3               	movwf	??i1_calc_map
  5658     0327  01A4               	clrf	??i1_calc_map+1
  5659     0328  35A3               	lslf	??i1_calc_map,f
  5660     0329  0DA4               	rlf	??i1_calc_map+1,f
  5661     032A  3067               	movlw	103
  5662     032B  00A5               	movwf	??i1_calc_map+2
  5663     032C  3022               	movlw	34
  5664     032D  00A6               	movwf	??i1_calc_map+3
  5665     032E  0823               	movf	??i1_calc_map,w
  5666     032F  0725               	addwf	??i1_calc_map+2,w
  5667     0330  0086               	movwf	6
  5668     0331  0824               	movf	??i1_calc_map+1,w
  5669     0332  3D26               	addwfc	??i1_calc_map+3,w
  5670     0333  0087               	movwf	7
  5671     0334  30AC               	movlw	172
  5672     0335  00A7               	movwf	??i1_calc_map+4
  5673     0336  300D               	movlw	13
  5674     0337  00A8               	movwf	??i1_calc_map+5
  5675     0338  3F40               	moviw [0]fsr1
  5676     0339  0227               	subwf	??i1_calc_map+4,w
  5677     033A  00A9               	movwf	??i1_calc_map+6
  5678     033B  3F41               	moviw [1]fsr1
  5679     033C  3B28               	subwfb	??i1_calc_map+5,w
  5680     033D  00AA               	movwf	??i1_calc_map+7
  5681     033E  36AA               	lsrf	??i1_calc_map+7,f
  5682     033F  0CA9               	rrf	??i1_calc_map+6,f
  5683     0340  0829               	movf	??i1_calc_map+6,w
  5684     0341  00B2               	movwf	i1calc_map@temp1
  5685     0342  082A               	movf	??i1_calc_map+7,w
  5686     0343  00B3               	movwf	i1calc_map@temp1+1
  5687     0344  01B4               	clrf	i1calc_map@temp1+2
  5688     0345                     i1l2306:
  5689                           
  5690                           ;main.c: 254:         temp = ((deg2time_coeff[a] * temp1) >> 10);
  5691     0345  0843               	movf	i1calc_map@a,w
  5692     0346  00A3               	movwf	??i1_calc_map
  5693     0347  01A4               	clrf	??i1_calc_map+1
  5694     0348  0823               	movf	??i1_calc_map,w
  5695     0349  00F0               	movwf	i1___wmul@multiplier
  5696     034A  0824               	movf	??i1_calc_map+1,w
  5697     034B  00F1               	movwf	i1___wmul@multiplier+1
  5698     034C  3003               	movlw	3
  5699     034D  00F2               	movwf	i1___wmul@multiplicand
  5700     034E  3000               	movlw	0
  5701     034F  00F3               	movwf	i1___wmul@multiplicand+1
  5702     0350  318C  24E3  3181   	fcall	i1___wmul
  5703     0353  30DE               	movlw	222
  5704     0354  0140               	movlb	0	; select bank0
  5705     0355  00A5               	movwf	??i1_calc_map+2
  5706     0356  3020               	movlw	32
  5707     0357  00A6               	movwf	??i1_calc_map+3
  5708     0358  0870               	movf	?i1___wmul,w
  5709     0359  0725               	addwf	??i1_calc_map+2,w
  5710     035A  0086               	movwf	6
  5711     035B  0871               	movf	?i1___wmul+1,w
  5712     035C  3D26               	addwfc	??i1_calc_map+3,w
  5713     035D  0087               	movwf	7
  5714     035E  3F40               	moviw [0]fsr1
  5715     035F  00F6               	movwf	i1___tmul@multiplier
  5716     0360  3F41               	moviw [1]fsr1
  5717     0361  00F7               	movwf	i1___tmul@multiplier+1
  5718     0362  3F42               	moviw [2]fsr1
  5719     0363  00F8               	movwf	i1___tmul@multiplier+2
  5720     0364  0832               	movf	i1calc_map@temp1,w
  5721     0365  00F9               	movwf	i1___tmul@multiplicand
  5722     0366  0833               	movf	i1calc_map@temp1+1,w
  5723     0367  00FA               	movwf	i1___tmul@multiplicand+1
  5724     0368  0834               	movf	i1calc_map@temp1+2,w
  5725     0369  00FB               	movwf	i1___tmul@multiplicand+2
  5726     036A  318D  256E  3181   	fcall	i1___tmul
  5727     036D  0876               	movf	?i1___tmul,w
  5728     036E  0140               	movlb	0	; select bank0
  5729     036F  00A7               	movwf	??i1_calc_map+4
  5730     0370  0877               	movf	?i1___tmul+1,w
  5731     0371  00A8               	movwf	??i1_calc_map+5
  5732     0372  0878               	movf	?i1___tmul+2,w
  5733     0373  00A9               	movwf	??i1_calc_map+6
  5734     0374  300A               	movlw	10
  5735     0375                     u197_25:
  5736     0375  36A9               	lsrf	??i1_calc_map+6,f
  5737     0376  0CA8               	rrf	??i1_calc_map+5,f
  5738     0377  0CA7               	rrf	??i1_calc_map+4,f
  5739     0378                     u197_20:
  5740     0378  0B89               	decfsz	9,f
  5741     0379  2B75               	goto	u197_25
  5742     037A  0827               	movf	??i1_calc_map+4,w
  5743     037B  00AF               	movwf	i1calc_map@temp
  5744     037C  0828               	movf	??i1_calc_map+5,w
  5745     037D  00B0               	movwf	i1calc_map@temp+1
  5746     037E  0829               	movf	??i1_calc_map+6,w
  5747     037F  00B1               	movwf	i1calc_map@temp+2
  5748     0380                     i1l2308:
  5749                           
  5750                           ;main.c: 255:         IG_table[a] = temp;
  5751     0380  0843               	movf	i1calc_map@a,w
  5752     0381  00A3               	movwf	??i1_calc_map
  5753     0382  01A4               	clrf	??i1_calc_map+1
  5754     0383  35A3               	lslf	??i1_calc_map,f
  5755     0384  0DA4               	rlf	??i1_calc_map+1,f
  5756     0385  3067               	movlw	103
  5757     0386  00A5               	movwf	??i1_calc_map+2
  5758     0387  3022               	movlw	34
  5759     0388  00A6               	movwf	??i1_calc_map+3
  5760     0389  0823               	movf	??i1_calc_map,w
  5761     038A  0725               	addwf	??i1_calc_map+2,w
  5762     038B  0086               	movwf	6
  5763     038C  0824               	movf	??i1_calc_map+1,w
  5764     038D  3D26               	addwfc	??i1_calc_map+3,w
  5765     038E  0087               	movwf	7
  5766     038F  082F               	movf	i1calc_map@temp,w
  5767     0390  3FC0               	movwi [0]fsr1
  5768     0391  0830               	movf	i1calc_map@temp+1,w
  5769     0392  3FC1               	movwi [1]fsr1
  5770     0393                     i1l2310:
  5771                           
  5772                           ;main.c: 256:     }
  5773     0393  3001               	movlw	1
  5774     0394  00A3               	movwf	??i1_calc_map
  5775     0395  0823               	movf	??i1_calc_map,w
  5776     0396  07C3               	addwf	i1calc_map@a,f
  5777     0397                     i1l2312:
  5778     0397  3083               	movlw	131
  5779     0398  0243               	subwf	i1calc_map@a,w
  5780     0399  1C03               	skipc
  5781     039A  2B9C               	goto	u198_21
  5782     039B  2B9D               	goto	u198_20
  5783     039C                     u198_21:
  5784     039C  2B25               	goto	i1l2304
  5785     039D                     u198_20:
  5786     039D                     i1l242:
  5787     039D  0008               	return
  5788     039E                     __end_ofi1_calc_map:
  5789                           
  5790                           	psect	text22
  5791     0CE3                     __ptext22:	
  5792 ;; *************** function i1___wmul *****************
  5793 ;; Defined at:
  5794 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  multiplier      2    0[COMMON] unsigned int 
  5797 ;;  multiplicand    2    2[COMMON] unsigned int 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  product         2    4[COMMON] unsigned int 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  2    0[COMMON] unsigned int 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;Total ram usage:        6 bytes
  5814 ;; Hardware stack levels used: 1
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		i1_calc_map
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822     0CE3                     i1___wmul:	
  5823                           ;psect for function i1___wmul
  5824                           
  5825     0CE3                     i1l1946:	
  5826                           ;incstack = 0
  5827                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5828                           
  5829     0CE3  01F4               	clrf	i1___wmul@product
  5830     0CE4  01F5               	clrf	i1___wmul@product+1
  5831     0CE5                     i1l1948:
  5832     0CE5  1C70               	btfss	i1___wmul@multiplier,0
  5833     0CE6  2CE8               	goto	u165_21
  5834     0CE7  2CE9               	goto	u165_20
  5835     0CE8                     u165_21:
  5836     0CE8  2CED               	goto	i1l375
  5837     0CE9                     u165_20:
  5838     0CE9                     i1l1950:
  5839     0CE9  0872               	movf	i1___wmul@multiplicand,w
  5840     0CEA  07F4               	addwf	i1___wmul@product,f
  5841     0CEB  0873               	movf	i1___wmul@multiplicand+1,w
  5842     0CEC  3DF5               	addwfc	i1___wmul@product+1,f
  5843     0CED                     i1l375:
  5844     0CED  3001               	movlw	1
  5845     0CEE                     u166_25:
  5846     0CEE  35F2               	lslf	i1___wmul@multiplicand,f
  5847     0CEF  0DF3               	rlf	i1___wmul@multiplicand+1,f
  5848     0CF0  0B89               	decfsz	9,f
  5849     0CF1  2CEE               	goto	u166_25
  5850     0CF2                     i1l1952:
  5851     0CF2  3001               	movlw	1
  5852     0CF3                     u167_25:
  5853     0CF3  36F1               	lsrf	i1___wmul@multiplier+1,f
  5854     0CF4  0CF0               	rrf	i1___wmul@multiplier,f
  5855     0CF5  0B89               	decfsz	9,f
  5856     0CF6  2CF3               	goto	u167_25
  5857     0CF7                     i1l1954:
  5858     0CF7  0870               	movf	i1___wmul@multiplier,w
  5859     0CF8  0471               	iorwf	i1___wmul@multiplier+1,w
  5860     0CF9  1D03               	btfss	3,2
  5861     0CFA  2CFC               	goto	u168_21
  5862     0CFB  2CFD               	goto	u168_20
  5863     0CFC                     u168_21:
  5864     0CFC  2CE5               	goto	i1l1948
  5865     0CFD                     u168_20:
  5866     0CFD                     i1l1956:
  5867     0CFD  0875               	movf	i1___wmul@product+1,w
  5868     0CFE  00F1               	movwf	?i1___wmul+1
  5869     0CFF  0874               	movf	i1___wmul@product,w
  5870     0D00  00F0               	movwf	?i1___wmul
  5871     0D01                     i1l377:
  5872     0D01  0008               	return
  5873     0D02                     __end_ofi1___wmul:
  5874                           
  5875                           	psect	text23
  5876     0D6E                     __ptext23:	
  5877 ;; *************** function i1___tmul *****************
  5878 ;; Defined at:
  5879 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul24.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  multiplier      3    6[COMMON] unsigned um
  5882 ;;  multiplicand    3    9[COMMON] unsigned um
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  product         3    0[BANK0 ] unsigned um
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  3    6[COMMON] unsigned um
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5894 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;Total ram usage:        9 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		i1_calc_map
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907     0D6E                     i1___tmul:	
  5908                           ;psect for function i1___tmul
  5909                           
  5910     0D6E                     i1l1960:	
  5911                           ;incstack = 0
  5912                           ; Regs used in i1___tmul: [wreg+status,2+status,0]
  5913                           
  5914     0D6E  3000               	movlw	0
  5915     0D6F  0140               	movlb	0	; select bank0
  5916     0D70  00A0               	movwf	i1___tmul@product
  5917     0D71  3000               	movlw	0
  5918     0D72  00A1               	movwf	i1___tmul@product+1
  5919     0D73  3000               	movlw	0
  5920     0D74  00A2               	movwf	i1___tmul@product+2
  5921     0D75                     i1l1962:
  5922     0D75  1C76               	btfss	i1___tmul@multiplier,0
  5923     0D76  2D78               	goto	u169_21
  5924     0D77  2D79               	goto	u169_20
  5925     0D78                     u169_21:
  5926     0D78  2D80               	goto	i1l1966
  5927     0D79                     u169_20:
  5928     0D79                     i1l1964:
  5929     0D79  0879               	movf	i1___tmul@multiplicand,w
  5930     0D7A  0140               	movlb	0	; select bank0
  5931     0D7B  07A0               	addwf	i1___tmul@product,f
  5932     0D7C  087A               	movf	i1___tmul@multiplicand+1,w
  5933     0D7D  3DA1               	addwfc	i1___tmul@product+1,f
  5934     0D7E  087B               	movf	i1___tmul@multiplicand+2,w
  5935     0D7F  3DA2               	addwfc	i1___tmul@product+2,f
  5936     0D80                     i1l1966:
  5937     0D80  3001               	movlw	1
  5938     0D81                     u170_25:
  5939     0D81  35F9               	lslf	i1___tmul@multiplicand,f
  5940     0D82  0DFA               	rlf	i1___tmul@multiplicand+1,f
  5941     0D83  0DFB               	rlf	i1___tmul@multiplicand+2,f
  5942     0D84  0B89               	decfsz	9,f
  5943     0D85  2D81               	goto	u170_25
  5944     0D86                     i1l1968:
  5945     0D86  3001               	movlw	1
  5946     0D87                     u171_25:
  5947     0D87  36F8               	lsrf	i1___tmul@multiplier+2,f
  5948     0D88  0CF7               	rrf	i1___tmul@multiplier+1,f
  5949     0D89  0CF6               	rrf	i1___tmul@multiplier,f
  5950     0D8A  0B89               	decfsz	9,f
  5951     0D8B  2D87               	goto	u171_25
  5952     0D8C  0878               	movf	i1___tmul@multiplier+2,w
  5953     0D8D  0477               	iorwf	i1___tmul@multiplier+1,w
  5954     0D8E  0476               	iorwf	i1___tmul@multiplier,w
  5955     0D8F  1D03               	skipz
  5956     0D90  2D92               	goto	u172_21
  5957     0D91  2D93               	goto	u172_20
  5958     0D92                     u172_21:
  5959     0D92  2D75               	goto	i1l1962
  5960     0D93                     u172_20:
  5961     0D93                     i1l1970:
  5962     0D93  0140               	movlb	0	; select bank0
  5963     0D94  0820               	movf	i1___tmul@product,w
  5964     0D95  00F6               	movwf	?i1___tmul
  5965     0D96  0821               	movf	i1___tmul@product+1,w
  5966     0D97  00F7               	movwf	?i1___tmul+1
  5967     0D98  0822               	movf	i1___tmul@product+2,w
  5968     0D99  00F8               	movwf	?i1___tmul+2
  5969     0D9A                     i1l383:
  5970     0D9A  0008               	return
  5971     0D9B                     __end_ofi1___tmul:
  5972                           
  5973                           	psect	text24
  5974     0D9B                     __ptext24:	
  5975 ;; *************** function i1___lwdiv *****************
  5976 ;; Defined at:
  5977 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  divisor         2    0[COMMON] unsigned int 
  5980 ;;  dividend        2    2[COMMON] unsigned int 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  quotient        2    5[COMMON] unsigned int 
  5983 ;;  counter         1    7[COMMON] unsigned char 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  2    0[COMMON] unsigned int 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;Total ram usage:        8 bytes
  5998 ;; Hardware stack levels used: 1
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_InterruptManager
  6003 ;;		i1_calc_map
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007     0D9B                     i1___lwdiv:	
  6008                           ;psect for function i1___lwdiv
  6009                           
  6010     0D9B                     i1l1974:	
  6011                           ;incstack = 0
  6012                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6013                           
  6014     0D9B  01F5               	clrf	i1___lwdiv@quotient
  6015     0D9C  01F6               	clrf	i1___lwdiv@quotient+1
  6016     0D9D                     i1l1976:
  6017     0D9D  0870               	movf	i1___lwdiv@divisor,w
  6018     0D9E  0471               	iorwf	i1___lwdiv@divisor+1,w
  6019     0D9F  1903               	btfsc	3,2
  6020     0DA0  2DA2               	goto	u173_21
  6021     0DA1  2DA3               	goto	u173_20
  6022     0DA2                     u173_21:
  6023     0DA2  2DD2               	goto	i1l1996
  6024     0DA3                     u173_20:
  6025     0DA3                     i1l1978:
  6026     0DA3  01F7               	clrf	i1___lwdiv@counter
  6027     0DA4  0AF7               	incf	i1___lwdiv@counter,f
  6028     0DA5  2DAF               	goto	i1l1984
  6029     0DA6                     i1l1980:
  6030     0DA6  3001               	movlw	1
  6031     0DA7                     u174_25:
  6032     0DA7  35F0               	lslf	i1___lwdiv@divisor,f
  6033     0DA8  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6034     0DA9  0B89               	decfsz	9,f
  6035     0DAA  2DA7               	goto	u174_25
  6036     0DAB                     i1l1982:
  6037     0DAB  3001               	movlw	1
  6038     0DAC  00F4               	movwf	??i1___lwdiv
  6039     0DAD  0874               	movf	??i1___lwdiv,w
  6040     0DAE  07F7               	addwf	i1___lwdiv@counter,f
  6041     0DAF                     i1l1984:
  6042     0DAF  1FF1               	btfss	i1___lwdiv@divisor+1,7
  6043     0DB0  2DB2               	goto	u175_21
  6044     0DB1  2DB3               	goto	u175_20
  6045     0DB2                     u175_21:
  6046     0DB2  2DA6               	goto	i1l1980
  6047     0DB3                     u175_20:
  6048     0DB3                     i1l1986:
  6049     0DB3  3001               	movlw	1
  6050     0DB4                     u176_25:
  6051     0DB4  35F5               	lslf	i1___lwdiv@quotient,f
  6052     0DB5  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6053     0DB6  0B89               	decfsz	9,f
  6054     0DB7  2DB4               	goto	u176_25
  6055     0DB8  0871               	movf	i1___lwdiv@divisor+1,w
  6056     0DB9  0273               	subwf	i1___lwdiv@dividend+1,w
  6057     0DBA  1D03               	skipz
  6058     0DBB  2DBE               	goto	u177_25
  6059     0DBC  0870               	movf	i1___lwdiv@divisor,w
  6060     0DBD  0272               	subwf	i1___lwdiv@dividend,w
  6061     0DBE                     u177_25:
  6062     0DBE  1C03               	skipc
  6063     0DBF  2DC1               	goto	u177_21
  6064     0DC0  2DC2               	goto	u177_20
  6065     0DC1                     u177_21:
  6066     0DC1  2DC7               	goto	i1l1992
  6067     0DC2                     u177_20:
  6068     0DC2                     i1l1988:
  6069     0DC2  0870               	movf	i1___lwdiv@divisor,w
  6070     0DC3  02F2               	subwf	i1___lwdiv@dividend,f
  6071     0DC4  0871               	movf	i1___lwdiv@divisor+1,w
  6072     0DC5  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  6073     0DC6                     i1l1990:
  6074     0DC6  1475               	bsf	i1___lwdiv@quotient,0
  6075     0DC7                     i1l1992:
  6076     0DC7  3001               	movlw	1
  6077     0DC8                     u178_25:
  6078     0DC8  36F1               	lsrf	i1___lwdiv@divisor+1,f
  6079     0DC9  0CF0               	rrf	i1___lwdiv@divisor,f
  6080     0DCA  0B89               	decfsz	9,f
  6081     0DCB  2DC8               	goto	u178_25
  6082     0DCC                     i1l1994:
  6083     0DCC  3001               	movlw	1
  6084     0DCD  02F7               	subwf	i1___lwdiv@counter,f
  6085     0DCE  1D03               	btfss	3,2
  6086     0DCF  2DD1               	goto	u179_21
  6087     0DD0  2DD2               	goto	u179_20
  6088     0DD1                     u179_21:
  6089     0DD1  2DB3               	goto	i1l1986
  6090     0DD2                     u179_20:
  6091     0DD2                     i1l1996:
  6092     0DD2  0876               	movf	i1___lwdiv@quotient+1,w
  6093     0DD3  00F1               	movwf	?i1___lwdiv+1
  6094     0DD4  0875               	movf	i1___lwdiv@quotient,w
  6095     0DD5  00F0               	movwf	?i1___lwdiv
  6096     0DD6                     i1l655:
  6097     0DD6  0008               	return
  6098     0DD7                     __end_ofi1___lwdiv:
  6099                           
  6100                           	psect	text25
  6101     0C52                     __ptext25:	
  6102 ;; *************** function _ignition_disable *****************
  6103 ;; Defined at:
  6104 ;;		line 392 in file "main.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0, pclath, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;Total ram usage:        0 bytes
  6123 ;; Hardware stack levels used: 1
  6124 ;; Hardware stack levels required when called: 1
  6125 ;; This function calls:
  6126 ;;		i1_ccp1_enable
  6127 ;;		i1_ccp2_disable
  6128 ;; This function is called by:
  6129 ;;		_InterruptManager
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133     0C52                     _ignition_disable:	
  6134                           ;psect for function _ignition_disable
  6135                           
  6136     0C52                     i1l2218:	
  6137                           ;incstack = 0
  6138                           ; Regs used in _ignition_disable: [wreg+status,2+status,0+pclath+cstack]
  6139                           
  6140                           
  6141                           ;main.c: 393:     ccp2_disable();
  6142     0C52  318C  2427  318C   	fcall	i1_ccp2_disable
  6143     0C55                     i1l2220:
  6144                           
  6145                           ;main.c: 394:     LATC2 = (1);
  6146     0C55  0140               	movlb	0	; select bank0
  6147     0C56  151A               	bsf	26,2	;volatile
  6148     0C57                     i1l2222:
  6149                           
  6150                           ;main.c: 395:     orev_counter = 0;
  6151     0C57  01D1               	clrf	_orev_counter
  6152     0C58                     i1l2224:
  6153                           
  6154                           ;main.c: 396:     ccp1_enable();
  6155     0C58  318C  2440  318C   	fcall	i1_ccp1_enable
  6156     0C5B                     i1l292:
  6157     0C5B  0008               	return
  6158     0C5C                     __end_of_ignition_disable:
  6159                           
  6160                           	psect	text26
  6161     0C27                     __ptext26:	
  6162 ;; *************** function i1_ccp2_disable *****************
  6163 ;; Defined at:
  6164 ;;		line 434 in file "main.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		status,2
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6182 ;;Total ram usage:        0 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_InterruptManager
  6188 ;;		_ignition_disable
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192     0C27                     i1_ccp2_disable:	
  6193                           ;psect for function i1_ccp2_disable
  6194                           
  6195     0C27                     i1l1942:	
  6196                           ;incstack = 0
  6197                           ; Regs used in i1_ccp2_disable: [status,2]
  6198                           
  6199                           
  6200                           ;main.c: 435:     CCP2IE = 0;
  6201     0C27  014E               	movlb	14	; select bank14
  6202     0C28  1398               	bcf	24,7	;volatile
  6203     0C29                     i1l1944:
  6204                           
  6205                           ;main.c: 436:     CCP2CON = 0;
  6206     0C29  0146               	movlb	6	; select bank6
  6207     0C2A  0192               	clrf	18	;volatile
  6208     0C2B                     i1l304:
  6209     0C2B  0008               	return
  6210     0C2C                     __end_ofi1_ccp2_disable:
  6211                           
  6212                           	psect	text27
  6213     0C40                     __ptext27:	
  6214 ;; *************** function i1_ccp1_enable *****************
  6215 ;; Defined at:
  6216 ;;		line 403 in file "main.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;		None
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;		None
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;Total ram usage:        0 bytes
  6235 ;; Hardware stack levels used: 1
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_InterruptManager
  6240 ;;		_ignition_disable
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244     0C40                     i1_ccp1_enable:	
  6245                           ;psect for function i1_ccp1_enable
  6246                           
  6247     0C40                     i1l1936:	
  6248                           ;incstack = 0
  6249                           ; Regs used in i1_ccp1_enable: [wreg]
  6250                           
  6251                           
  6252                           ;main.c: 404:     CCP1IE = 0;
  6253     0C40  014E               	movlb	14	; select bank14
  6254     0C41  1397               	bcf	23,7	;volatile
  6255                           
  6256                           ;main.c: 405:     CCP1IF = 0;
  6257     0C42  138D               	bcf	13,7	;volatile
  6258     0C43                     i1l1938:
  6259                           
  6260                           ;main.c: 406:     CCP1CON = 0x84;
  6261     0C43  3084               	movlw	132
  6262     0C44  0146               	movlb	6	; select bank6
  6263     0C45  008E               	movwf	14	;volatile
  6264     0C46                     i1l1940:
  6265                           
  6266                           ;main.c: 407:     CCP1IE = 1;
  6267     0C46  014E               	movlb	14	; select bank14
  6268     0C47  1797               	bsf	23,7	;volatile
  6269     0C48                     i1l295:
  6270     0C48  0008               	return
  6271     0C49                     __end_ofi1_ccp1_enable:
  6272                           
  6273                           	psect	text28
  6274     0C37                     __ptext28:	
  6275 ;; *************** function _ccp2_enable *****************
  6276 ;; Defined at:
  6277 ;;		line 423 in file "main.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;		None
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;Total ram usage:        0 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; This function calls:
  6298 ;;		Nothing
  6299 ;; This function is called by:
  6300 ;;		_InterruptManager
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304     0C37                     _ccp2_enable:	
  6305                           ;psect for function _ccp2_enable
  6306                           
  6307     0C37                     i1l2212:	
  6308                           ;incstack = 0
  6309                           ; Regs used in _ccp2_enable: [wreg]
  6310                           
  6311                           
  6312                           ;main.c: 424:     CCP2IE = 0;
  6313     0C37  014E               	movlb	14	; select bank14
  6314     0C38  1398               	bcf	24,7	;volatile
  6315                           
  6316                           ;main.c: 425:     CCP2IF = 0;
  6317     0C39  138E               	bcf	14,7	;volatile
  6318     0C3A                     i1l2214:
  6319                           
  6320                           ;main.c: 426:     CCP2CON = 0x88;
  6321     0C3A  3088               	movlw	136
  6322     0C3B  0146               	movlb	6	; select bank6
  6323     0C3C  0092               	movwf	18	;volatile
  6324     0C3D                     i1l2216:
  6325                           
  6326                           ;main.c: 427:     CCP2IE = 1;
  6327     0C3D  014E               	movlb	14	; select bank14
  6328     0C3E  1798               	bsf	24,7	;volatile
  6329     0C3F                     i1l301:
  6330     0C3F  0008               	return
  6331     0C40                     __end_of_ccp2_enable:
  6332                           
  6333                           	psect	text29
  6334     0C22                     __ptext29:	
  6335 ;; *************** function _ccp1_disable *****************
  6336 ;; Defined at:
  6337 ;;		line 414 in file "main.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		status,2
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_InterruptManager
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364     0C22                     _ccp1_disable:	
  6365                           ;psect for function _ccp1_disable
  6366                           
  6367     0C22                     i1l2208:	
  6368                           ;incstack = 0
  6369                           ; Regs used in _ccp1_disable: [status,2]
  6370                           
  6371                           
  6372                           ;main.c: 415:     CCP1IE = 0;
  6373     0C22  014E               	movlb	14	; select bank14
  6374     0C23  1397               	bcf	23,7	;volatile
  6375     0C24                     i1l2210:
  6376                           
  6377                           ;main.c: 416:     CCP1CON = 0;
  6378     0C24  0146               	movlb	6	; select bank6
  6379     0C25  018E               	clrf	14	;volatile
  6380     0C26                     i1l298:
  6381     0C26  0008               	return
  6382     0C27                     __end_of_ccp1_disable:
  6383     007E                     btemp	set	126	;btemp
  6384     007E                     int$flags	set	126
  6385     007E                     wtemp0	set	126
  6386     20DE                     
  6387                           	psect	config
  6388                           
  6389                           ;Config register CONFIG1 @ 0x8007
  6390                           ;	External Oscillator Mode Selection bits
  6391                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  6392                           ;	Power-up Default Value for COSC bits
  6393                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  6394                           ;	Clock Out Enable bit
  6395                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6396                           ;	VDD Range Analog Calibration Selection bit
  6397                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6398     8007                     	org	32775
  6399     8007  3FCF               	dw	16335
  6400                           
  6401                           ;Config register CONFIG2 @ 0x8008
  6402                           ;	Master Clear Enable bit
  6403                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6404                           ;	Power-up Timer Selection bits
  6405                           ;	PWRTS = PWRT_1, PWRT set at 1 ms
  6406                           ;	WDT Operating Mode bits
  6407                           ;	WDTE = SWDTEN, WDT enabled/disabled by SEN bit
  6408                           ;	Brown-out Reset Enable bits
  6409                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6410                           ;	Brown-out Reset Voltage Selection bit
  6411                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6412                           ;	PPSLOCKED One-Way Set Enable bit
  6413                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  6414                           ;	Stack Overflow/Underflow Reset Enable bit
  6415                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6416     8008                     	org	32776
  6417     8008  3FE9               	dw	16361
  6418                           
  6419                           ;Config register CONFIG4 @ 0x800A
  6420                           ;	Boot Block Size Selection bits
  6421                           ;	BBSIZE = BB512, 512 words boot block size
  6422                           ;	Boot Block Enable bit
  6423                           ;	BBEN = OFF, Boot Block is disabled
  6424                           ;	SAF Enable bit
  6425                           ;	SAFEN = OFF, SAF is disabled
  6426                           ;	Application Block Write Protection bit
  6427                           ;	WRTAPP = OFF, Application Block is not write-protected
  6428                           ;	Boot Block Write Protection bit
  6429                           ;	WRTB = OFF, Boot Block is not write-protected
  6430                           ;	Configuration Registers Write Protection bit
  6431                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6432                           ;	Storage Area Flash (SAF) Write Protection bit
  6433                           ;	WRTSAF = OFF, SAF is not write-protected
  6434                           ;	Low Voltage Programming Enable bit
  6435                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6436     800A                     	org	32778
  6437     800A  3FFF               	dw	16383
  6438                           
  6439                           ;Config register CONFIG5 @ 0x800B
  6440                           ;	User Program Flash Memory Code Protection bit
  6441                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6442     800B                     	org	32779
  6443     800B  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    26
    Data        399
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     44      51
    BANK1            80     54      65
    BANK2            62      0      32
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S579$buffer	PTR unsigned char  size(2) Largest target is 0

    S579$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 1
		 -> Write_table@a(BANK1[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    WriteString@str	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), Write_table@a(BANK1[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptManager in COMMON

    i1_calc_map->i1___tmul
    i1___tmul->i1___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    _InterruptManager->i1_calc_map
    i1_calc_map->i1___tmul

Critical Paths under _main in BANK1

    _main->_Write_table
    _calc_map->___tmul
    ___tmul->___wmul
    _Write_table->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _WriteString->_Write_Byte

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5671
                        _Write_table
                           _calc_map
                        _ccp1_enable
                     _check_sw_state
                  _initialize_system
 ---------------------------------------------------------------------------------
 (1) _initialize_system                                    0     0      0       0
                       _ccp2_disable
 ---------------------------------------------------------------------------------
 (2) _ccp2_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_sw_state                                       2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ccp1_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_map                                            33    33      0    2244
                                             15 BANK1     33    33      0
                            ___lwdiv
                             ___tmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6     244
                                              6 BANK1      9     3      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     718
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Write_table                                          3     3      0    3427
                                             51 BANK1      3     3      0
                        _WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    16      4    3158
                                             33 BANK1     18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     4      3    2850
                                             26 BANK1      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    13      2    2543
                                             11 BANK1     15    13      2
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 BANK1      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) _WriteString                                          3     1      2     219
                                              1 BANK1      3     1      2
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (3) _Write_Byte                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     8     8      0    2133
                                             36 BANK0      8     8      0
                       _ccp1_disable
                        _ccp2_enable
                   _ignition_disable
                          i1___lwdiv
                         i1_calc_map
                      i1_ccp1_enable
                     i1_ccp2_disable
 ---------------------------------------------------------------------------------
 (8) i1_calc_map                                          33    33      0    1696
                                              3 BANK0     33    33      0
                          i1___lwdiv
                           i1___tmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___tmul                                             9     3      6     144
                                              6 COMMON     6     0      6
                                              0 BANK0      3     3      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     370
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _ignition_disable                                     0     0      0       0
                      i1_ccp1_enable
                     i1_ccp2_disable
 ---------------------------------------------------------------------------------
 (8) i1_ccp2_disable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_ccp1_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ccp2_enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ccp1_disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Write_table
     _WriteString
       _Write_Byte
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _calc_map
     ___lwdiv
     ___tmul
       ___wmul (ARG)
     ___wmul
   _ccp1_enable
   _check_sw_state
   _initialize_system
     _ccp2_disable

 _InterruptManager (ROOT)
   _ccp1_disable
   _ccp2_enable
   _ignition_disable
     i1_ccp1_enable
     i1_ccp2_disable
   i1___lwdiv
   i1_calc_map
     i1___lwdiv
     i1___tmul
       i1___wmul (ARG)
     i1___wmul
   i1_ccp1_enable
   i1_ccp2_disable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A2       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2C      33       6       63.7%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     36      41       8       81.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               3E      0      20      10       51.6%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Feb 09 10:40:26 2025

                ??_InterruptManager 0044                        ___awdiv@sign 00A6  
               ___wmul@multiplicand 00A2                    i1___wmul@product 0074  
                        i1_calc_map 01A1                                 l212 0C5E  
                               l221 07FD                                 l215 0C67  
                               l304 0C30                                 l209 0D42  
                               l242 0591                                 l250 0ECB  
                               l307 0784                                 l253 0F0F  
                               l246 0EBB                                 l541 0EB9  
                               l383 0D6D                                 l375 0D0D  
                               l295 0C51                                 l528 07E4  
                               l377 0D21                                 l901 0E65  
                               l655 0E13                                 l912 07FE  
                               l838 0CE2                                 l882 0CC5  
                               l876 0FFF                                 l889 0C91  
                               _GIE 005F                                 _RA4 0064  
                               _RC5 0075                                 _abs 0C80  
                               _rpm 0052                        ___awmod@sign 00A6  
                               wreg 0009                        _ccp1_disable 0C22  
                      _ccp2_disable 0C2C                                l2000 071B  
                              l2010 0725                                l2002 0720  
                              ?_abs 00A7                                l2100 0ED0  
                              l2020 072B                                l2012 0726  
                              l2004 0721                                l2110 03A8  
                              l2102 0EDA                                l2030 0746  
                              l2022 073F                                l2014 0727  
                              l2006 0723                                l2120 03D3  
                              l2112 03BB                                l2200 0C4F  
                              l2104 0EFD                                l2040 0750  
                              l2032 0748                                l2024 0741  
                              l2016 0728                                l2008 0724  
                              l2202 0D22                                l2130 040C  
                              l2122 03D7                                l2114 03BD  
                              l2106 0EFF                                l2050 075D  
                              l2042 0752                                l2034 074A  
                              l2026 0743                                l2018 072A  
                              l2204 0D32                                l2140 045A  
                              l2132 041F                                l2124 03E7  
                              l2116 03BF                                l2108 039E  
                              l2060 076D                                l2052 0760  
                              l2044 0754                                l2036 074D  
                              l2028 0744                                l2206 0D3A  
                              l2150 047F                                l2142 045E  
                              l2134 0423                                l2126 03F9  
                              l2118 03C3                                l2070 0778  
                              l2062 076F                                l2054 0762  
                              l2046 0757                                l2038 074F  
                              l2160 04C0                                l2152 0485  
                              l2144 0464                                l2136 0429  
                              l2128 0409                                l2080 077D  
                              l2072 0779                                l2064 0772  
                              l2056 0769                                l2048 075A  
                              l2320 0C9A                                l2162 04C3  
                              l2154 0489                                l2146 0468  
                              l2138 042D                                l2090 0EBE  
                              l2082 077E                                l2074 077A  
                              l2066 0775                                l2058 076B  
                              l2322 0C9D                                l2314 0C92  
                              l1700 079F                                l2180 0511  
                              l2172 04E2                                l2156 04B6  
                              l2148 047B                                l2084 077F  
                              l2076 077B                                l2068 0777  
                              l2324 0CA0                                l2316 0C95  
                              l1710 07B3                                l1702 07A1  
                              l2190 0574                                l2182 0517  
                              l2166 04CA                                l2158 04BA  
                              l2094 0EC0                                l2086 0782  
                              l2078 077C                                l2318 0C97  
                              l1720 07D0                                l1712 07B7  
                              l1704 07A7                                l1800 0F36  
                              l2192 0587                                l2176 04E4  
                              l2168 04DD                                l2096 0ECE  
                              l2088 0EBA                                l1714 07C6  
                              l1706 07AA                                l1722 07D6  
                              l1730 0E66                                l1810 0F6A  
                              l1802 0F3D                                l2194 058B  
                              l2186 0519                                l2178 050D  
                              l1724 07DB                                l1716 07CA  
                              l1708 07AF                                l1740 0E77  
                              l1732 0E68                                l1820 0FA7  
                              l1812 0F6C                                l1804 0F47  
                              l1900 0D4E                                l2188 0539  
                              l2196 0C49                                l1726 07E0  
                              l1718 07CB                                l1750 0E8E  
                              l1742 0E7C                                l1734 0E6C  
                              l1830 0FD1                                l1822 0FAC  
                              l1814 0F73                                l1806 0F51  
                              l1910 0DD7                                l1902 0D54  
                              l2198 0C4C                                l1752 0E92  
                              l1744 0E82                                l1760 0EAB  
                              l1736 0E71                                l1824 0FB1  
                              l1832 0FD6                                l1816 0F91  
                              l1808 0F5D                                l1920 0DEC  
                              l1912 0DDA                                l1904 0D5A  
                              l1690 078B                                l1762 0EB0  
                              l1754 0E9C                                l1746 0E85  
                              l1738 0E73                                l1770 0E1A  
                              l1826 0FB6                                l1818 0FA1  
                              l1834 0FDD                                l1850 0CB1  
                              l1930 0E09                                l1922 0DF0  
                              l1914 0DE0                                l1906 0D67  
                              l1844 0C5E                                l1692 0790  
                              l1764 0EB5                                l1756 0EA0  
                              l1748 0E8A                                l1780 0E5C  
                              l1772 0E1F                                l1828 0FC0  
                              l1852 0CB9                                l1860 0CCC  
                              l1924 0DFF                                l1916 0DE3  
                              l1932 0E0F                                l1846 0C63  
                              l1870 07E5                                l1694 0792  
                              l1686 0785                                l1758 0EA5  
                              l1774 0E24                                l1838 0FE7  
                              l1854 0CC3                                l1862 0CCE  
                              l1926 0E03                                l1918 0DE8  
                              l1872 07E6                                l1696 0796  
                              l1688 0787                                l1784 0C80  
                              l1776 0E2E                                l1768 0E14  
                              l1792 0F12                                l1848 0CAC  
                              l1864 0CD0                                l1928 0E04  
                              l1880 0C2E                                l1874 07EE  
                              l1698 079B                                l1786 0C85  
                              l1778 0E4C                                l1794 0F23  
                              l1866 0CDA                                l1858 0CC8  
                              l1890 0D17                                l1882 0D02  
                              l1876 07F3                                l1788 0C86  
                              l1796 0F2B                                l1892 0D1D  
                              l1884 0D05                                l1798 0F32  
                              l1886 0D09                                l1878 0C2C  
                              l1896 0D43                                l1888 0D12  
                              l1898 0D4A                                STR_1 101D  
                              STR_2 1012                                u1210 07D6  
                              u1130 078B                                u1211 07D5  
                              u1131 078A                                u1220 07DB  
                              u1140 0796                                u1300 0EAB  
                              u1221 07DA                                u1205 07CC  
                              u1141 0795                                u1301 0EAA  
                              u1150 07A7                                u1310 0EB0  
                              u1230 0E6C                                u1151 07A6  
                              u1311 0EAF                                u1231 0E6B  
                              u1240 0E77                                u1320 0E1A  
                              u1400 0F71                                u1241 0E76  
                              u1321 0E19                                u1401 0F6F  
                              u1170 07B7                                u1250 0E82  
                              u1330 0E1F                                u1410 0F72  
                              u1171 07B6                                u1251 0E81  
                              u1331 0E1E                                u1340 0E2E  
                              u1420 0FA7                                u1500 0D09  
                              u1165 07AB                                u1341 0E2D  
                              u1421 0FA6                                u1501 0D08  
                              _LATA 0018                                u1190 07C6  
                              u1270 0E92                                u1350 0E4C  
                              u1430 0FAC                                _LATB 0019  
                              u1191 07C5                                u1271 0E91  
                              u1351 0E4B                                u1431 0FAB  
                              _LATC 001A                                u1280 0E9C  
                              u1360 0C85                                u1440 0FB1  
                              u1600 0DF0                                u1185 07B8  
                              u1281 0E9B                                u1265 0E86  
                              u1361 0C84                                u1441 0FB0  
                              u1601 0DEF                                u1450 0FB6  
                              u1370 0F23                                u1530 0D1D  
                              u1195 07C2                                u1355 0E48  
                              u1451 0FB5                                u1371 0F22  
                              u1531 0D1C                                u1515 0D0E  
                              u1460 0FDC                                u1380 0F47  
                              u1620 0DFF                                u1540 0D4E  
                              u1285 0E98                                u1461 0FDB  
                              u1381 0F46                                u1621 0DFE  
                              u1541 0D4D                                u1525 0D13  
                              u1470 0C63                                u1390 0F51  
                              u1471 0C62                                u1295 0EA1  
                              u1391 0F50                                u1615 0DF1  
                              u1480 0CC3                                u1640 0E0F  
                              u1481 0CC2                                u1641 0E0E  
                              u1625 0DFB                                u1490 07FD  
                              u1570 0D67                                u1491 07FC  
                              u1635 0E05                                u1571 0D66  
                              u1555 0D55                                u1580 0DE0  
                              u1900 0591                                u1581 0DDF  
                              u1565 0D5B                                u1901 0590  
                              u1805 0EDF                                u1830 0429  
                              u1831 0428                                u1815 0EF3  
                              u1840 0464                                u1841 0463  
                              u1825 0F06                                u1850 0485  
                              u1595 0DE4                                u1851 0484  
                              u1860 04C0                                u1861 04BF  
                              u1870 04C9                                u1871 04C8  
                              u1880 0517                                u1881 0516  
                              u1890 056C                                _PEIE 005E  
                              u1895 0569                                _PIR0 070C  
                              _PIR1 070D                                _PIR2 070E  
                              _TMR1 020C                                _TRMT 08F1  
                              abs@a 00A7                                _dbuf 0120  
                              _main 0C92                       i1_ccp1_enable 0C40  
                              _prec 00DE                                _test 007C  
                              fsr0h 0005                                fsr1h 0007  
                              indf0 0000                                fsr0l 0004  
                              indf1 0001                                fsr1l 0006  
                              btemp 007E                                start 015A  
                    _check_sw_state 0EBA                         i1calc_map@a 0043  
                             ??_abs 00A9         __end_of_adv_start_rpm_table 101D  
                             ?_main 0070                     __end_of___awdiv 07E5  
                             _CCPR1 030C                               _CCPR2 0310  
                   __end_of___awmod 0EBA                               _T1CLK 0211  
                   ___awdiv@divisor 00A0                               _T1CON 020E  
                             _LATA0 00C0                               _LATC1 00D1  
                             _LATC2 00D2                               _IOCIE 38B4  
                   __end_of___lwdiv 0E14                               i1l301 0C3F  
                             i1l304 0C2B                               i1l242 039D  
                             i1l267 00AD                               i1l292 0C5B  
                             i1l276 00D6                               i1l295 0C48  
                             i1l383 0D9A                               i1l375 0CED  
                             i1l288 0157                               i1l377 0D01  
                             i1l289 0158                               i1l298 0C26  
                             i1l655 0DD6                     ___awdiv@counter 00A5  
                             _OSCEN 0891                        vfpfcnvrt@fmt 00AB  
                             _TMR1H 020D                               _TMR1L 020C  
                             _PORTA 000C                               _PORTB 000D  
                             _PORTC 000E                               _TRISA 0012  
                             _TRISB 0013                               _TRISC 0014  
                             _flags 00E0                               _fputc 0E14  
                             _width 00DC                               _putch 07FE  
                    i1_ccp2_disable 0C27                    __end_ofi1___tmul 0D9B  
                  __end_ofi1___wmul 0D02                      ?i1_ccp1_enable 0070  
            __end_of_check_sw_state 0F10                               status 0003  
               i1___wmul@multiplier 0070                               wtemp0 007E  
                   __end_of_sprintf 0CE3                     __initialization 015C  
                   i1calc_map@temp1 0032                        __end_of_main 0CAA  
                       ?i1_calc_map 0070                              ??_main 00D6  
            __end_ofi1_ccp2_disable 0C2C                              _CCP1IE 38BF  
                            _CCP1IF 386F                              _CCP2IE 38C7  
                            _CCP2IF 3877                              ?_fputc 00A0  
                  ___awdiv@dividend 00A2                              _ANSELA 1F38  
                            ?_putch 0070                              _ANSELB 1F43  
                            _ANSELC 1F4E                              _IOCAF2 F9FA  
                            _IOCAN2 F9F2                              _RC1PPS 1F21  
                            _RC1STA 011D                              _RB6PPS 1F1E  
                            i1l2210 0C24                              i1l2212 0C37  
                            i1l2220 0C55                              i1l2300 0323  
                            i1l2214 0C3A                              i1l2222 0C57  
                            i1l2310 0393                              i1l2230 01C3  
                            i1l2208 0C22                              i1l2216 0C3D  
                            i1l2224 0C58                              i1l2312 0397  
                            i1l2304 0325                              i1l2240 01E1  
                            i1l2232 01C5                              i1l2400 00CF  
                            u200_20 0011                              u200_21 0010  
                            i1l2218 0C52                              i1l2306 0345  
                            i1l2250 022B                              i1l2242 01F3  
                            i1l2234 01C7                              i1l2226 01A1  
                            i1l2410 00DF                              i1l2330 0011  
                            i1l2308 0380                              i1l2260 026A  
                            i1l2252 022F                              i1l2244 0205  
                            i1l2236 01CB                              i1l2228 01AC  
                            i1l2420 00EE                              i1l2412 00E2  
                            i1l2340 002D                              i1l2332 0013  
                            i1l2404 00D6                              i1l2270 0291  
                            i1l2262 0270                              i1l2254 0235  
                            i1l2246 0215                              i1l2238 01DD  
                            i1l2430 0108                              i1l2422 00F3  
                            i1l2406 00DB                              i1l2350 0060  
                            i1l2342 0033                              i1l2334 0015  
                            i1l2414 00E4                              i1l2326 0006  
                            i1l2280 02CF                              i1l2272 0295  
                            i1l2264 0274                              i1l2256 0239  
                            i1l2248 0218                              i1l2440 0139  
                            i1l2432 0116                              i1l2424 00FA  
                            i1l2416 00E8                              i1l2408 00DE  
                            i1l2360 0074                              i1l2352 0068  
                            i1l2344 0039                              u201_20 0033  
                            i1l2336 0016                              i1l2328 000B  
                            u201_21 0032                              i1l2290 02EE  
                            i1l2274 02C2                              i1l2266 0287  
                            i1l2258 0266                              i1l2450 014E  
                            i1l2434 012E                              i1l2442 013C  
                            i1l2418 00EB                              i1l2426 00FD  
                            i1l2370 0088                              i1l2354 006C  
                            i1l2346 004C                              i1l2362 0077  
                            i1l2338 0019                              i1l2284 02D6  
                            i1l2276 02C6                              i1l2268 028B  
                            i1l2452 0150                              i1l2436 012F  
                            i1l2428 0102                              i1l2444 013E  
                            i1l2380 00A6                              i1l2372 0091  
                            i1l2364 007A                              i1l2356 006F  
                            i1l2348 004D                              i1l2294 02F0  
                            i1l2286 02E9                              i1l2278 02CC  
                            i1l2454 0152                              i1l2446 0143  
                            i1l2438 0132                              i1l2390 00BB  
                            i1l2374 0095                              i1l2358 0071  
                            i1l2366 007C                              i1l2296 0319  
                            i1l2456 0155                              i1l2448 0145  
                            i1l2392 00C1                              u210_20 00B3  
                            i1l2376 009B                              i1l2368 0082  
                            i1l2384 00AD                              u202_20 0039  
                            u210_21 00B2                              u202_21 0038  
                            i1l2298 031D                              i1l2386 00B3  
                            i1l2394 00C3                              i1l1940 0C46  
                            i1l2396 00C8                              i1l2388 00B9  
                            i1l1942 0C27                              i1l1950 0CE9  
                            i1l1936 0C40                              i1l1944 0C29  
                            i1l1960 0D6E                              i1l1952 0CF2  
                            u211_20 00B9                              u203_20 0060  
                            u211_21 00B8                              u203_21 005F  
                            i1l1938 0C43                              i1l1970 0D93  
                            i1l1962 0D75                              i1l1954 0CF7  
                            i1l1946 0CE3                              i1l1980 0DA6  
                            i1l1964 0D79                              i1l1956 0CFD  
                            i1l1948 0CE5                              u203_25 005C  
                            i1l1990 0DC6                              i1l1982 0DAB  
                            i1l1974 0D9B                              i1l1966 0D80  
                            i1l1992 0DC7                              i1l1984 0DAF  
                            i1l1976 0D9D                              i1l1968 0D86  
                            u220_20 0108                              u212_20 00C1  
                            u204_20 0082                              u220_21 0107  
                            u212_21 00C0                              u204_21 0081  
                            i1l1994 0DCC                              i1l1986 0DB3  
                            i1l1978 0DA3                              i1l1988 0DC2  
                            i1l1996 0DD2                              u221_20 0116  
                            u213_20 00C8                              u205_20 0088  
                            u221_21 0115                              u213_21 00C7  
                            u205_21 0087                              u222_20 012E  
                            u214_20 00CE                              u206_20 0091  
                            u222_21 012D                              u214_21 00CD  
                            u206_21 0090                              u222_25 012A  
                            u223_20 0139                              u215_20 00D5  
                            u207_20 009B                              u223_21 0138  
                            u215_21 00D4                              u207_21 009A  
                            u224_20 0143                              u216_20 00DB  
                            u208_20 00A5                              u224_21 0142  
                            u216_21 00DA                              u208_21 00A4  
                            _INLVLA 1F3C                              _INLVLB 1F47  
                            _INLVLC 1F52                              u217_20 00E8  
                            u209_20 00AC                              u217_21 00E7  
                            u209_21 00AB                              u225_27 0072  
                            u218_20 00FA                              u218_21 00F9  
                            u170_25 0D81                              u226_27 00E9  
                            u219_20 0102                              u219_21 0101  
                            u171_25 0D87                              u172_20 0D93  
                            u172_21 0D92                              u173_20 0DA3  
                            u165_20 0CE9                              u173_21 0DA2  
                            u165_21 0CE8                              u174_25 0DA7  
                            u166_25 0CEE                              u175_20 0DB3  
                            u191_20 0235                              u175_21 0DB2  
                            u191_21 0234                              u167_25 0CF3  
                            u168_20 0CFD                              u192_20 0270  
                            u168_21 0CFC                              u192_21 026F  
                            u176_25 0DB4                              u177_20 0DC2  
                            u169_20 0D79                              u193_20 0291  
                            u177_21 0DC1                              u169_21 0D78  
                            u193_21 0290                              u177_25 0DBE  
                            u194_20 02CC                              u194_21 02CB  
                            u178_25 0DC8                              u179_20 0DD2  
                            u195_20 02D5                              u179_21 0DD1  
                            u195_21 02D4                              u196_20 0323  
                            u196_21 0322                              u197_20 0378  
                            u197_25 0375                              u198_20 039D  
                            u198_21 039C                              u199_20 000B  
                            u199_21 000A                              _OSCFRQ 0893  
                     vfpfcnvrt@done 00B1                    __end_of_calc_map 0592  
                            _RX1PPS 1ECB                              _TMR1IE 38BD  
                            _TMR1IF 386D                              _TMR1ON 1070  
                            _TX1REG 011A                              _WDTCON 080C  
                            _TX1STA 011E                     ?_check_sw_state 0070  
                      vfprintf@cfmt 00BF                              ___tmul 0D43  
                            ___wmul 0D02                           ??___awdiv 00A4  
                         ??___awmod 00A4                           ??___lwdiv 00A4  
                  ___awdiv@quotient 00A7                     ___awmod@divisor 00A0  
                   ___awmod@counter 00A5                       _max_adv_table 1008  
                            _tx_buf 00D6                        __pdataBIGRAM 20DE  
                            fputc@c 00A0                   __end_ofi1___lwdiv 0DD7  
                  _ignition_disable 0C52               i1___tmul@multiplicand 0079  
                            putch@c 0070                    __end_of_vfprintf 0CC6  
                   ?i1_ccp2_disable 0070                           ??_sprintf 00C5  
                   ??i1_ccp1_enable 0070             __end_of__initialization 019D  
                    __pcstackCOMMON 0070                        __pidataBANK1 0C31  
                        _Write_Byte 0C5C                       __end_of_fputc 0E66  
                     __end_of_putch 07FF                       i1calc_map@p1x 003F  
                     i1calc_map@p1y 0037                       i1calc_map@p2x 0040  
                     i1calc_map@p2y 0039                       i1calc_map@p3x 0041  
                     i1calc_map@p3y 003B                       i1calc_map@p4x 0042  
                     i1calc_map@p4y 003D                           ?i1___tmul 0076  
                         ?i1___wmul 0070                             ??_fputc 00A3  
               i1___tmul@multiplier 0076                             ??_putch 00A0  
                        __pbssBANK0 004C                          __pbssBANK1 00DC  
                        __pbssBANK2 0120                      _deg2time_coeff 20DE  
                     ??_ccp1_enable 00A0                       ??_ccp2_enable 0070  
                        __pmaintext 0C92                             ?___tmul 00A6  
                           ?___wmul 00A0                          __pintentry 0004  
                           _CCP1CAP 030F                             _CCP2CAP 0313  
                           _CCP1CON 030E                             _CCP2CON 0312  
                           _CCP1PPS 1EA1                             _CCP2PPS 1EA2  
                     ??_WriteString 00A3                          ??i1___tmul 007C  
                        ??i1___wmul 0074                       ??_Write_table 00D3  
                         ?_calc_map 0070                          _ig_counter 004C  
                           _SP1BRGH 011C                             _SP1BRGL 011B  
                      Write_table@a 00D5                             _OSCTUNE 0892  
                           _PPSLOCK 1E8F                   _initialize_system 071B  
                     _min_ret_table 1000                  ?_initialize_system 0070  
               __end_of_ccp1_enable 0C52                 __end_of_ccp2_enable 0C40  
                    WriteString@str 00A1                             ___awdiv 0785  
                       ?_Write_Byte 0070                             ___awmod 0E66  
                           ___lwdiv 0DD7                           ?_vfprintf 00BA  
               ??_initialize_system 00A0                        ??i1_calc_map 0023  
                           __ptext1 071B                             __ptext2 0C2C  
                           __ptext3 0EBA                             __ptext4 0C49  
                           __ptext5 039E                             __ptext6 0D02  
                           __ptext7 0D43                             __ptext8 0DD7  
                           __ptext9 0D22                          ??_calc_map 00AF  
                           _map_sel 007D                   i1___lwdiv@divisor 0070  
                           _sw1_pos 00DB                             _sw2_pos 00DA  
                           _sw3_pos 00D9                             _sw4_pos 00D8  
                 i1___lwdiv@counter 0077               i1calc_map@coeff_p1_p2 0035  
             i1calc_map@coeff_p3_p4 0036                    ___awmod@dividend 00A2  
             __end_of_numerator_rpm 1012                 __end_of_WriteString 07FE  
                  ??_check_sw_state 00A0                 __end_of_Write_table 0D43  
                           _sprintf 0CC6                             clrloop0 0C69  
              end_of_initialization 019D           __end_of_initialize_system 0785  
                           fputc@fp 00A2                             init_ram 0C74  
                           initloop 0C75                  __end_ofi1_calc_map 039E  
          __end_of_ignition_disable 0C5C                   __end_of_vfpfcnvrt 1000  
                  vfpfcnvrt@convarg 00B5                          ??_vfprintf 00BD  
             i1___wmul@multiplicand 0072                           _PORTBbits 000D  
                         _PORTCbits 000E                    _InterruptManager 0004  
                  ??i1_ccp2_disable 0070                        calc_map@temp 00BB  
                         i1___lwdiv 0D9B                         _ccp1_enable 0C49  
                       _ccp2_enable 0C37                       __pidataBIGRAM 0592  
                    __end_of___tmul 0D6E                         vfpfcnvrt@ap 00AC  
                       vfpfcnvrt@cp 00B3                         vfpfcnvrt@fp 00B2  
                    __end_of___wmul 0D22                         _WriteString 07E5  
                       _Write_table 0D22                 start_initialization 015C  
                     ?_ccp1_disable 0070                      i1calc_map@temp 002F  
                       __end_of_abs 0C92                       ?_ccp2_disable 0070  
                        ?i1___lwdiv 0070               __end_ofi1_ccp1_enable 0C49  
                       vfprintf@fmt 00BA                            ??___tmul 00AC  
                          ??___wmul 00A4                         __pdataBANK1 00D6  
                    ___tmul@product 00AC                         __pbssBIGRAM 2267  
                    ??_ccp1_disable 0070                         __pbssCOMMON 007C  
                         ___latbits 0002                       __pcstackBANK0 0020  
                     __pcstackBANK1 00A0                      ??_ccp2_disable 00A0  
                    _revlimit_state 004F                       Write_Byte@chr 00A0  
                         _deg_table 236D          __end_of_max_adv_grad_table 1019  
                  ___lwdiv@dividend 00A2                 _adv_start_rpm_table 1019  
                      ??_Write_Byte 00A0                            ?___awdiv 00A0  
                          ?___awmod 00A0                            ?___lwdiv 00A0  
                         calc_map@a 00CF                            _BAUD1CON 011F  
                  ___lwdiv@quotient 00A5                         ??i1___lwdiv 0074  
                          ?_sprintf 00C1                  __end_of_Write_Byte 0C68  
                    ___wmul@product 00A4            __end_of_InterruptManager 015A  
                         clear_ram0 0C68                   ?_ignition_disable 0070  
                          _EG_state 0050                            _IG_table 2267  
                ??_ignition_disable 0070                         calc_map@p1x 00CB  
                       calc_map@p1y 00C3                         calc_map@p2x 00CC  
                       calc_map@p2y 00C5                         calc_map@p3x 00CD  
                       calc_map@p3y 00C7                         calc_map@p4x 00CE  
                       calc_map@p4y 00C9                           _vfpfcnvrt 0F10  
             __end_of_max_adv_table 1010                           _pwj_state 004E  
                          i1___tmul 0D6E                   ___wmul@multiplier 00A0  
                          i1___wmul 0CE3                 ___tmul@multiplicand 00A9  
          InterruptManager@t1_count 0048                          vfpfcnvrt@c 00B9  
                      ?_ccp1_enable 0070                        ?_ccp2_enable 0070  
InterruptManager@pu1_2_period_count 004A                __end_of_ccp1_disable 0C27  
                        vfprintf@ap 00BC                          vfprintf@fp 00BE  
              __end_of_ccp2_disable 0C31                          ?_vfpfcnvrt 00AB  
                      ?_WriteString 00A1                        ?_Write_table 0070  
                          _calc_map 039E                          sprintf@fmt 00C1  
                   ___lwdiv@divisor 00A0                     ___lwdiv@counter 00A7  
                          __ptext10 0CC6                            __ptext11 0CAA  
                          __ptext12 0F10                            __ptext21 01A1  
                          __ptext13 0E14                            __ptext22 0CE3  
                          __ptext14 07FE                            __ptext23 0D6E  
                          __ptext15 0C80                            __ptext24 0D9B  
                          __ptext16 0E66                            __ptext25 0C52  
                          __ptext17 0785                            __ptext26 0C27  
                          __ptext18 07E5                            __ptext27 0C40  
                          __ptext19 0C5C                            __ptext28 0C37  
                          __ptext29 0C22                  i1___lwdiv@dividend 0072  
                          int$flags 007E                            _vfprintf 0CAA  
                i1___lwdiv@quotient 0075                        _orev_counter 0051  
                     _numerator_rpm 1010                            intlevel1 0000  
                         sprintf@ap 00C6                    i1___tmul@product 0020  
             __end_of_min_ret_table 1008                         _PPSLOCKbits 1E8F  
                 ___tmul@multiplier 00A6                         ??_vfpfcnvrt 00AD  
                     __pstringtext1 1000                       __pstringtext2 1008  
                     __pstringtext3 1015                       __pstringtext4 1019  
                     __pstringtext5 1010                       __pstringtext6 101D  
                     __pstringtext7 0000                  _max_adv_grad_table 1015  
                          sprintf@f 00C8                            sprintf@s 00C7  
               calc_map@coeff_p1_p2 00C1                 calc_map@coeff_p3_p4 00C2  
                     calc_map@temp1 00BE                   ?_InterruptManager 0070  
